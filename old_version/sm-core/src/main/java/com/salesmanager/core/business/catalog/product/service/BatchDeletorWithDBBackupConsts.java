/**
 * 一段用来层叠删除数据库表的代码 
 */
package com.salesmanager.core.business.catalog.product.service;

import java.util.HashMap;
import java.util.Map;

public class BatchDeletorWithDBBackupConsts {
	protected static final String columnsCUSTOMER_OPTION = "CUSTOMER_OPTION_ID, CUSTOMER_OPT_ACTIVE, CUSTOMER_OPT_CODE, CUSTOMER_OPTION_TYPE, CUSTOMER_OPT_PUBLIC, SORT_ORDER, MERCHANT_ID";
	protected static final String columnsPRODUCT_SELFPROOF = "PRODUCT_SELFPROOF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, SORT_ORDER, SELFPROOF_IMAGE, TITLE, PRODUCT_ID, SELFPROOF_TYPE";
	protected static final String columnsCUSTOMER = "CUSTOMER_ID, ADDRESS_DEFAULT, CUSTOMER_ANONYMOUS, COMPANY, CUSTOMER_DOB, CUSTOMER_EMAIL_ADDRESS, CUSTOMER_GENDER, GRADE, INVOICE_DEFAULT, INVOICE_ADDRES_DEFAULT, CUSTOMER_NICK, CUSTOMER_PASSWORD, PHONE, POINTS, PROJECT, RECIEVE_EMAIL, RECIEVE_PHONE, RECIEVE_PHONETIME, LANGUAGE_ID, MERCHANT_ID, RELATEIONSHIP, CUSTOMER_DISCOUNT, ACCOUNT_STATE, ACCOUT_TYPE, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, RELATE_SALES_EMAIL, RELATE_SALES_PHONE";
	protected static final String columnsMERCHANT_LANGUAGE = "stores_MERCHANT_ID, languages_LANGUAGE_ID";
	protected static final String columnsPARCEL = "PARCEL_ID, NAME, CUSTMOER_ID";
	protected static final String columnsPRODUCT_REVIEW_DESCRIPTION = "DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, PRODUCT_REVIEW_ID";
	protected static final String columnsUSERGRADE = "CATEGORY_ID, CODE, TYPE, VALUE";
	protected static final String columnsMERCHANT_RANK = "RANK_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, NUM_DIAMOND_PRODUCT, RANK_NAME, RANK_NAME_ZH";
	protected static final String columnsSM_SEQUENCER = "SEQ_NAME, SEQ_COUNT";
	protected static final String columnsSHOPPING_CART_ITEM = "SHP_CART_ITEM_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, ISSELECTED, PRICE_ID, PRODUCT_ID, QUANTITY, SHP_CART_ID";
	protected static final String columnsGIFTS = "GIFT_ID, GIFT_NAME, GIFT_PICTURE_SRC, GIFT_POINTS, GIFT_PRICE, GIFT_DEADLINE, GIFT_TOTAL, GIFT_TYPE";
	protected static final String columnsPRODUCT_IMAGE = "PRODUCT_IMAGE_ID, DEFAULT_IMAGE, IMAGE_CROP, IMAGE_TYPE, PRODUCT_IMAGE, PRODUCT_ID";
	protected static final String columnsPRODUCT_OPTION_DESC = "DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, PRODUCT_OPTION_COMMENT, LANGUAGE_ID, PRODUCT_OPTION_ID";
	protected static final String columnsDELIVERYCOMPNY = "DELIVERYCOMPNY_ID, DELIVERY_ADDRESS, DELIVERY_CODE, DELIVERY_CONTACTS, DELIVERY_NAME, DELIVERY_TELEPHONE";
	protected static final String columnsPRODUCT_LITERATURE_PATH = "PRODUCT_LITERATURE_PATH_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PATH, PRODUCT_CERTIFICATE_ID";
	protected static final String columnsMANUFACTURER_DESCRIPTION = "DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, DATE_LAST_CLICK, MANUFACTURERS_URL, URL_CLICKED, LANGUAGE_ID, MANUFACTURER_ID";
	protected static final String columnsUSER_GROUP = "USER_ID, GROUP_ID";
	protected static final String columnsCUSTOMER_ADDRESS = "CUSTOMER_ADDRESS_ID, STREET_ADDRESS, CITY, COMPANY, MEMO, NAME, POSTCODE, STATE, TELEPHONE, TYPE, BILLING_COUNTRY_ID, CUSTOMER_ID, BILLING_ZONE_ID";
	protected static final String columnsNEWS_CONTENT = "NEWS_CONTENT_ID, CODE, CONTENT, DATE_CREATED, IMAGE, ISPUBLISH, KEYWORDS, LINKHREF, LINKTEXT, NAME, DATE_PUBLISH, SUMMARY, TYPE, USERCODE";
	protected static final String columnsMERCHANT_RANK_PROFILE = "MCHTRANKPROFILE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, NUM_DIAMOND_PRODUCT, RANK_ID";
	protected static final String columnsPRODUCT_AVAILABILITY = "PRODUCT_AVAIL_ID, DATE_AVAILABLE, FREE_SHIPPING, QUANTITY, QUANTITY_ORD_MAX, QUANTITY_ORD_MIN, STATUS, REGION, REGION_VARIANT, PRODUCT_ID";
	protected static final String columnsCONTENT = "CONTENT_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, CONTENT_POSITION, CONTENT_TYPE, SORT_ORDER, VISIBLE, MERCHANT_ID";
	protected static final String columnsCATEGORY = "CATEGORY_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CATEGORY_IMAGE, CATEGORY_STATUS, CODE, DEPTH, LINEAGE, SORT_ORDER, VISIBLE, MERCHANT_ID, PARENT_ID";
	protected static final String columnsSM_GROUP = "GROUP_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, GROUP_NAME, GROUP_TYPE";
	protected static final String columnsPRODUCT_THIRDPROOF = "PRODUCT_THIRDPROOF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, SORT_ORDER, THIRDPROOF_IMAGE, TITLE, BASEDATATYPE_ID, PRODUCT_ID";
	protected static final String columnsLANGUAGE = "LANGUAGE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, SORT_ORDER";
	protected static final String columnsSHOPPING_CART = "SHP_CART_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CUSTOMER_ID, SHP_CART_CODE, MERCHANT_ID";
	protected static final String columnsCOUNTRY_DESCRIPTION = "DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, COUNTRY_ID";
	protected static final String columnsCUSTOMER_OPTION_SET = "CUSTOMER_OPTIONSET_ID, SORT_ORDER, CUSTOMER_OPTION_ID, CUSTOMER_OPTION_VALUE_ID";
	protected static final String columnsORDER_PRODUCT_PRICE = "ORDER_PRODUCT_PRICE_ID, PRODUCT_PRICE, PRODUCT_PRICE_CODE, PRODUCT_PRICE_NAME, PRODUCT_PRICE_SPECIAL, PRD_PRICE_SPECIAL_END_DT, PRD_PRICE_SPECIAL_ST_DT, ORDER_PRODUCT_ID";
	protected static final String columnsCUSTOMER_ATTRIBUTE = "CUSTOMER_ATTRIBUTE_ID, CUSTOMER_ATTR_TXT_VAL, CUSTOMER_ID, OPTION_ID, OPTION_VALUE_ID";
	protected static final String columnsORDER_ACCOUNT = "ORDER_ACCOUNT_ID, ORDER_ACCOUNT_BILL_DAY, ORDER_ACCOUNT_END_DATE, ORDER_ACCOUNT_START_DATE, ORDER_ID";
	protected static final String columnsCUSTOMER_OPTION_DESC = "DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, CUSTOMER_OPTION_COMMENT, LANGUAGE_ID, CUSTOMER_OPTION_ID";
	protected static final String columnsPRODUCT_DIGITAL = "PRODUCT_DIGITAL_ID, FILE_NAME, PRODUCT_ID";
	protected static final String columnsCURRENCY = "CURRENCY_ID, CURRENCY_CODE, CURRENCY_CURRENCY_CODE, CURRENCY_NAME, CURRENCY_SUPPORTED";
	protected static final String columnsPRODUCT_CATEGORY = "PRODUCT_ID, CATEGORY_ID";
	protected static final String columnsORDER_PRODUCT_DOWNLOAD = "ORDER_PRODUCT_DOWNLOAD_ID, DOWNLOAD_COUNT, DOWNLOAD_MAXDAYS, ORDER_PRODUCT_FILENAME, ORDER_PRODUCT_ID";
	protected static final String columnsPRODUCT_BROWSW = "PRODUCT_BROWSE_ID, BROWSE_DATE, CUSTMOER_ID, PRODUCT_ID, IP";
	protected static final String columnsPRODUCT_IMAGE_DESCRIPTION = "DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, ALT_TAG, LANGUAGE_ID, PRODUCT_IMAGE_ID";
	protected static final String columnsMEMBER_POINTS = "MEMBER_POINTS_ID, TYPE, VALUE, CUSTOMER_ID, DATEVALID, LTFE_POINT, STATAS, UPDATE_DATE, ORDER_ID";
	protected static final String columnsSYSTEM_NOTIFICATION = "SYSTEM_NOTIF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, END_DATE, CONFIG_KEY, START_DATE, VALUE, MERCHANT_ID, USER_ID";
	protected static final String columnsSUBORDERS = "SUBORDER_ID, DELIVERY_CODE, DELIVERY_NUMBER, LAST_MODIFIED, ORDER_STATUS, ORDER_TOTAL, MERCHANTID, ORDER_ID, STORE_NAME, PAY_PROOF, FINAL_TOTAL, RELATE_SALES_EMAIL, RELATE_SALES_PHONE";
	protected static final String columnsPRODUCT = "PRODUCT_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, AVAILABLE, BATCHNUM, CAS, CODE, DATE_AVAILABLE, DATE_ChargeBegin, DATE_ChargeEnd, PRODUCT_FREE, QUANTITY_ORDERED, REVIEW_AVG, REVIEW_COUNT, QUALITY_SCORE, SKU, MANUFACTURER_ID, MERCHANT_ID, Parcel_ID, PRODUCT_TYPE_ID, SORT_ORDER, SPRICE, PRODUCT_DIAMOND";
	//protected static final String columnsPRODUCT = "PRODUCT_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, AVAILABLE, BATCHNUM, CAS, CODE, DATE_AVAILABLE, DATE_ChargeBegin, DATE_ChargeEnd, PRODUCT_FREE, QUANTITY_ORDERED, REVIEW_AVG, REVIEW_COUNT, QUALITY_SCORE, SKU, MANUFACTURER_ID, MERCHANT_ID, Parcel_ID, PRODUCT_TYPE_ID, SORT_ORDER, SPRICE, PRODUCT_DIAMOND, SEARCH_CONTENT";
	protected static final String columnsMODULE_CONFIGURATION = "MODULE_CONF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, DETAILS, CONFIGURATION, CUSTOM_IND, IMAGE, MODULE, REGIONS, TYPE";
	protected static final String columnsZONE = "ZONE_ID, ZONE_CODE, COUNTRY_ID";
	protected static final String columnsCUSTOMER_GROUP = "CUSTOMER_ID, GROUP_ID";
	protected static final String columnsGEOZONE = "GEOZONE_ID, GEOZONE_CODE, GEOZONE_NAME";
	protected static final String columnsSYSTEM_CONFIGURATION = "SYSTEM_CONFIG_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CONFIG_KEY, VALUE";
	protected static final String columnsORDER_STATUS_HISTORY = "ORDER_STATUS_HISTORY_ID, COMMENTS, CUSTOMER_NOTIFIED, DATE_ADDED, status, ORDER_ID, SUBORDER_ID";
	protected static final String columnsPRODUCT_ATTRIBUTE = "PRODUCT_ATTRIBUTE_ID, PRODUCT_ATTRIBUTE_DEFAULT, PRODUCT_ATTRIBUTE_DISCOUNTED, PRODUCT_ATTRIBUTE_FOR_DISP, PRODUCT_ATTRIBUTE_REQUIRED, PRODUCT_ATTRIBUTE_FREE, PRODUCT_ATRIBUTE_PRICE, PRODUCT_ATTRIBUTE_WEIGHT, PRODUCT_ATTRIBUTE_SORT_ORD, PRODUCT_ID, OPTION_ID, OPTION_VALUE_ID";
	protected static final String columnsAUTH_BRAND = "AUTH_ID, BRAND_ID";
	protected static final String columnsCONTENT_DESCRIPTION = "DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, META_DESCRIPTION, META_KEYWORDS, META_TITLE, SEF_URL, LANGUAGE_ID, CONTENT_ID";
	protected static final String columnsPRODUCT_RELATIONSHIP = "PRODUCT_RELATIONSHIP_ID, ACTIVE, CODE, PRODUCT_ID, RELATED_PRODUCT_ID, MERCHANT_ID";
	protected static final String columnsAUTHORIZATION = "AUTH_ID, AUTH_TYPE, COMPANY, END_TIME, IMAGE, INTRODUCE, START_TIME, MERCHANT_ID";
	protected static final String columnsCUSTOMER_OPT_VAL_DESCRIPTION = "DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, CUSTOMER_OPT_VAL_ID";
	protected static final String columnsGEOZONE_DESCRIPTION = "DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, GEOZONE_ID";
	protected static final String columnsCUSTOMER_OPTION_VALUE = "CUSTOMER_OPTION_VALUE_ID, CUSTOMER_OPT_VAL_CODE, CUSTOMER_OPT_VAL_IMAGE, SORT_ORDER, MERCHANT_ID";
	protected static final String columnsBRAND_USERSEGMENT_DISCOUNT = "BRAND_DISCOUNT_ID, DISCOUNTS, discounts_KEY";
	protected static final String columnsGIFT_ORDER = "GIFT_ORDER_ID, CREATE_DATE, DELIVERY_CODE, DELIVERY_NUMBER, GIFT_NUMBER, GIFT_STATUS, CUSTOMER_ID, CUSTOMER_CITY, CUSTOMER_NAME, GIFT_IMG, GIFT_NAME, GIFT_POINT, PHONE_NUMBER, SHIPPING_ADDRESS, CUSTOMER_ADDRESS_ID, GITF_ID";
	protected static final String columnsSHOPPING_CART_ATTR_ITEM = "SHP_CART_ATTR_ITEM_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PRODUCT_ATTR_ID, SHP_CART_ITEM_ID";
	protected static final String columnsPRODUCT_PROOF = "PRODUCT_PROOF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DATE_BUYED, DESCRIPTION, SORT_ORDER, RPOOF_IMAGE, TITLE, BASEDATATYPE_ID, PRODUCT_ID";
	protected static final String columnsORDER_TOTAL = "ORDER_ACCOUNT_ID, MODULE, CODE, ORDER_TOTAL_TYPE, ORDER_VALUE_TYPE, SORT_ORDER, TEXT, TITLE, VALUE, ORDER_ID";
	protected static final String columnsUSERLOGIN = "USERLOGIN_ID, DATE_CREATED, IP, USER_ID";
	protected static final String columnsMERCHANT_STORE = "MERCHANT_ID, STORE_BUSINESSLICENCE, STORE_CODE, CONTINUESHOPPINGURL, CURRENCY_FORMAT_NATIONAL, DOMAIN_NAME, STORE_ENINTRODUCE, IN_BUSINESS_SINCE, STORE_INTRODUCE, INVOICE_TEMPLATE, STORE_QQ, STORE_SEEDED, SEIZEUNITCODE, STORE_EMAIL, STORE_LOGO, STORE_TEMPLATE, STORE_ADDRESS, STORE_CITY, STORE_CONTACTS, STORE_FAX, STORE_MOBILE, STORE_NAME, STORE_PHONE, STORE_POSTAL_CODE, STORE_STATE_PROV, USE_CACHE, isQQ, WEIGHTUNITCODE, COUNTRY_ID, CURRENCY_ID, LANGUAGE_ID, ZONE_ID, STOREWEB, SALES_EMAIL, kefu, xiaoshou, MCHTRANKPROFILE_ID";
	protected static final String columnsPERMISSION = "PERMISSION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PERMISSION_NAME";
	protected static final String columnsMERCHANT_LOG = "MERCHANT_LOG_ID, LOG, MODULE, MERCHANT_ID";
	protected static final String columnsCOUNTRY = "COUNTRY_ID, COUNTRY_ISOCODE, COUNTRY_SUPPORTED, GEOZONE_ID";
	protected static final String columnsPRODUCT_OPTION = "PRODUCT_OPTION_ID, PRODUCT_OPTION_CODE, PRODUCT_OPTION_SORT_ORD, PRODUCT_OPTION_TYPE, PRODUCT_OPTION_READ, MERCHANT_ID";
	protected static final String columnsMANUFACTURER = "MANUFACTURER_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, MANUFACTURER_IMAGE, SRC_MERCHANT_ID, SORT_ORDER, MERCHANT_ID";
	protected static final String columnsSPECIAL_CONFIGURATION = "SPECIAL_CONFIG_ID, CONFIG_KEY, VALUE";
	protected static final String columnsTAX_RATE_DESCRIPTION = "DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, TAX_RATE_ID";
	protected static final String columnsORDERS = "ORDER_ID, BILLING_STREET_ADDRESS, BILLING_CITY, BILLING_COMPANY, BANK_ACCOUNT, BANK_NANE, COMPANY, COMPANY_ADDRESS, COMPANY_TELEPHONE, TAX_NUMBER, type, BILLING_POSTCODE, BILLING_TELEPHONE, BILLING_USERNAME, CHANNEL, CARD_TYPE, CC_CVV, CC_EXPIRES, CC_NUMBER, CC_OWNER, CURRENCY_VALUE, CUSTOMER_EMAIL_ADDRESS, CUSTOMER_ID, DATE_PURCHASED, IP_ADDRESS, INVOICE_STREET_ADDRESS, INVOICE_CITY, INVOICE_COMPANY, INVOICE_POSTCODE, INVOICE_TELEPHONE, INVOICE_USERNAME, LAST_MODIFIED, LOCALE, ORDER_DATE_FINISHED, ORDER_TYPE, PAYMENT_MODULE_CODE, PAYMENT_TYPE, SHIPPING_MODULE_CODE, ORDER_STATUS, ORDER_TOTAL, BILLING_COUNTRY_ID, BILLING_ZONE_ID, CURRENCY_ID, INVOICE_COUNTRY_ID, INVOICE_ZONE_ID, STORE_NAME, PROCESS_TYPE";
	protected static final String columnsPRODUCT_PRICE_DESCRIPTION = "DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, PRODUCT_PRICE_ID";
	protected static final String columnsZONE_DESCRIPTION = "DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, ZONE_ID";
	protected static final String columnsUSER_SEGMENT = "USER_SEGMENT_ID, DISCRIPTION_EN, DISCRIPTION_ZH, NAME, FOR_BUYER, FOR_SELLER";
	protected static final String columnsFILE_HISTORY = "FILE_HISTORY_ID, ACCOUNTED_DATE, DATE_ADDED, DATE_DELETED, DOWNLOAD_COUNT, FILE_ID, FILESIZE, MERCHANT_ID";
	protected static final String columnsORDER_ACCOUNT_PRODUCT = "ORDER_ACCOUNT_PRODUCT_ID, ORDER_ACCOUNT_PRODUCT_ACCNT_DT, ORDER_ACCOUNT_PRODUCT_END_DT, ORDER_ACCOUNT_PRODUCT_EOT, ORDER_ACCOUNT_PRODUCT_L_ST_DT, ORDER_ACCOUNT_PRODUCT_L_TRX_ST, ORDER_ACCOUNT_PRODUCT_PM_FR_TY, ORDER_ACCOUNT_PRODUCT_ST_DT, ORDER_ACCOUNT_PRODUCT_STATUS, ORDER_ACCOUNT_ID, ORDER_PRODUCT_ID";
	protected static final String columnsCUSTOMER_INVOICE = "CUSTOMER_INVOICE_ID, BANK_ACCOUNT, BANK_NANE, COMPANY, COMPANY_ADDRESS, COMPANY_TELEPHONE, MEMO, TAX_NUMBER, type, CUSTOMER_ID";
	protected static final String columnsCOMMON_SOFTWARE = "COMMON_SOFTWARE_ID, BRIEF, CLICKNUM, DESCRIPTION, FILENAME, ICONNAME, NAME, SIZE, TORDER, TYPE";
	protected static final String columnsMERCHANT_CONFIGURATION = "MERCHANT_CONFIG_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CONFIG_KEY, TYPE, VALUE, MERCHANT_ID";
	protected static final String columnsPRODUCT_DESCRIPTION = "DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, EN_NAME, META_DESCRIPTION, META_KEYWORDS, META_TITLE, METHOD_DESCRIPTION, DOWNLOAD_LNK, PRODUCT_HIGHLIGHT, SEF_URL, SIMPLE_DESCRIPTION, STORECOND_DESCRIPTION, TEST_DESCRIPTION, LANGUAGE_ID, PRODUCT_ID";
	protected static final String columnsBASEDATA_TYPE = "BASEDATA_TYPE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, NAME, SORT_ORDER, TYPE, VALUE";
	protected static final String columnsPRODUCT_OPTION_VALUE_DESCRIPTION = "DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, PRODUCT_OPTION_VALUE_ID";
	protected static final String columnsBRAND_DISCOUNT = "BRAND_DISCOUNT_ID, BRAND_ID, STORE_ID";
	protected static final String columnsCUSTOMER_IMAGE = "CUSTOMER_IMAGE_ID, CUSTOMER_IMAGE, DEFAULT_IMAGE, IMAGE_CROP, IMAGE_TYPE, REMARK, CUSTOMER_ID";
	protected static final String columnsPRODUCT_PRICE = "PRODUCT_PRICE_ID, PRODUCT_PRICE_CODE, DEFAULT_PRICE, PRODUCT_PRICE_AMOUNT, PRODUCT_PRICE_PERIOD, PRODUCT_PRICE_SPECIAL_AMOUNT, PRODUCT_PRICE_SPECIAL_END_DATE, PRODUCT_PRICE_SPECIAL_ST_DATE, PRODUCT_PRICE_STOCK_AMOUNT, PRODUCT_PRICE_TYPE, PRODUCT_AVAIL_ID";
	protected static final String columnsPRODUCT_REVIEW = "PRODUCT_REVIEW_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, REVIEW_DATE, REVIEWS_RATING, REVIEWS_READ, STATUS, CUSTOMERS_ID, ORDER_PRODUCT_ID, PRODUCT_ID";
	protected static final String columnsPRODUCT_TYPE = "PRODUCT_TYPE_ID, PRD_TYPE_ADD_TO_CART, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PRD_TYPE_CODE";
	protected static final String columnsCATEGORY_DESCRIPTION = "DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, CATEGORY_HIGHLIGHT, META_DESCRIPTION, META_KEYWORDS, META_TITLE, SEF_URL, LANGUAGE_ID, CATEGORY_ID";
	protected static final String columnsORDER_PRODUCT = "ORDER_PRODUCT_ID, ONETIME_CHARGE, PRICE, PRODUCT_ENNAME, PRODUCT_ID, PRODUCT_NAME, PRODUCT_QUANTITY, QUALITY_SCORE, PRODUCT_SKU, SPECS, SUBORDER_ID, PRODUCT_CODE, FINAL_PRICE, FINAL_TOTAL, PRODUCT_SPEC_ID, PRODUCT_IMAGE";
	protected static final String columnsORDER_PRODUCT_ATTRIBUTE = "ORDER_PRODUCT_ATTRIBUTE_ID, PRODUCT_ATTRIBUTE_IS_FREE, PRODUCT_ATTRIBUTE_NAME, PRODUCT_ATTRIBUTE_PRICE, PRODUCT_ATTRIBUTE_VAL_NAME, PRODUCT_ATTRIBUTE_WEIGHT, PRODUCT_OPTION_ID, PRODUCT_OPTION_VALUE_ID, ORDER_PRODUCT_ID";
	protected static final String columnsTAX_CLASS = "TAX_CLASS_ID, TAX_CLASS_CODE, TAX_CLASS_TITLE, MERCHANT_ID";
	protected static final String columnsPERMISSION_GROUP = "PERMISSION_ID, GROUP_ID";
	protected static final String columnsPRODUCT_OPTION_VALUE = "PRODUCT_OPTION_VALUE_ID, PRODUCT_OPTION_VAL_CODE, PRODUCT_OPT_FOR_DISP, PRODUCT_OPT_VAL_IMAGE, PRODUCT_OPT_VAL_SORT_ORD, MERCHANT_ID";
	protected static final String columnsSM_TRANSACTION = "TRANSACTION_ID, AMOUNT, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DETAILS, PAYMENT_TYPE, TRANSACTION_DATE, TRANSACTION_TYPE, ORDER_ID";
	protected static final String columnsUSER = "USER_ID, ACTIVE, ADMIN_EMAIL, ADMIN_NAME, ADMIN_PASSWORD, ADMIN_A1, ADMIN_A2, ADMIN_A3, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, ADMIN_FIRST_NAME, LAST_ACCESS, ADMIN_LAST_NAME, LOGIN_ACCESS, ADMIN_Q1, ADMIN_Q2, ADMIN_Q3, LANGUAGE_ID, MERCHANT_ID, ADMIN_MOBILE";
	protected static final String columnsPRODUCT_CERTIFICATE = "PRODUCT_CERTIFICATE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, BASEINFO, CERTIFICATE_IMAGE, DESCRIPTION, DOC_URL, SORT_ORDER, TITLE, BASEDATATYPE_ID, PRODUCT_ID";
	protected static final String columnsTAX_RATE = "TAX_RATE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, TAX_CODE, PIGGYBACK, STORE_STATE_PROV, TAX_PRIORITY, TAX_RATE, COUNTRY_ID, MERCHANT_ID, PARENT_ID, TAX_CLASS_ID, ZONE_ID";

	public static final Map<String, String> tableColumnsMap = new HashMap<String, String>();
	static {
		tableColumnsMap.put("CUSTOMER_OPTION",columnsCUSTOMER_OPTION); 
		tableColumnsMap.put("PRODUCT_SELFPROOF",columnsPRODUCT_SELFPROOF); 
		tableColumnsMap.put("CUSTOMER",columnsCUSTOMER); 
		tableColumnsMap.put("MERCHANT_LANGUAGE",columnsMERCHANT_LANGUAGE); 
		tableColumnsMap.put("PARCEL",columnsPARCEL); 
		tableColumnsMap.put("PRODUCT_REVIEW_DESCRIPTION",columnsPRODUCT_REVIEW_DESCRIPTION); 
		tableColumnsMap.put("USERGRADE",columnsUSERGRADE); 
		tableColumnsMap.put("MERCHANT_RANK",columnsMERCHANT_RANK); 
		tableColumnsMap.put("SM_SEQUENCER",columnsSM_SEQUENCER); 
		tableColumnsMap.put("SHOPPING_CART_ITEM",columnsSHOPPING_CART_ITEM); 
		tableColumnsMap.put("GIFTS",columnsGIFTS); 
		tableColumnsMap.put("PRODUCT_IMAGE",columnsPRODUCT_IMAGE); 
		tableColumnsMap.put("PRODUCT_OPTION_DESC",columnsPRODUCT_OPTION_DESC); 
		tableColumnsMap.put("DELIVERYCOMPNY",columnsDELIVERYCOMPNY); 
		tableColumnsMap.put("PRODUCT_LITERATURE_PATH",columnsPRODUCT_LITERATURE_PATH); 
		tableColumnsMap.put("MANUFACTURER_DESCRIPTION",columnsMANUFACTURER_DESCRIPTION); 
		tableColumnsMap.put("USER_GROUP",columnsUSER_GROUP); 
		tableColumnsMap.put("CUSTOMER_ADDRESS",columnsCUSTOMER_ADDRESS); 
		tableColumnsMap.put("NEWS_CONTENT",columnsNEWS_CONTENT); 
		tableColumnsMap.put("MERCHANT_RANK_PROFILE",columnsMERCHANT_RANK_PROFILE); 
		tableColumnsMap.put("PRODUCT_AVAILABILITY",columnsPRODUCT_AVAILABILITY); 
		tableColumnsMap.put("CONTENT",columnsCONTENT); 
		tableColumnsMap.put("CATEGORY",columnsCATEGORY); 
		tableColumnsMap.put("SM_GROUP",columnsSM_GROUP); 
		tableColumnsMap.put("PRODUCT_THIRDPROOF",columnsPRODUCT_THIRDPROOF); 
		tableColumnsMap.put("LANGUAGE",columnsLANGUAGE); 
		tableColumnsMap.put("SHOPPING_CART",columnsSHOPPING_CART); 
		tableColumnsMap.put("COUNTRY_DESCRIPTION",columnsCOUNTRY_DESCRIPTION); 
		tableColumnsMap.put("CUSTOMER_OPTION_SET",columnsCUSTOMER_OPTION_SET); 
		tableColumnsMap.put("ORDER_PRODUCT_PRICE",columnsORDER_PRODUCT_PRICE); 
		tableColumnsMap.put("CUSTOMER_ATTRIBUTE",columnsCUSTOMER_ATTRIBUTE); 
		tableColumnsMap.put("ORDER_ACCOUNT",columnsORDER_ACCOUNT); 
		tableColumnsMap.put("CUSTOMER_OPTION_DESC",columnsCUSTOMER_OPTION_DESC); 
		tableColumnsMap.put("PRODUCT_DIGITAL",columnsPRODUCT_DIGITAL); 
		tableColumnsMap.put("CURRENCY",columnsCURRENCY); 
		tableColumnsMap.put("PRODUCT_CATEGORY",columnsPRODUCT_CATEGORY); 
		tableColumnsMap.put("ORDER_PRODUCT_DOWNLOAD",columnsORDER_PRODUCT_DOWNLOAD); 
		tableColumnsMap.put("PRODUCT_BROWSW",columnsPRODUCT_BROWSW); 
		tableColumnsMap.put("PRODUCT_IMAGE_DESCRIPTION",columnsPRODUCT_IMAGE_DESCRIPTION); 
		tableColumnsMap.put("MEMBER_POINTS",columnsMEMBER_POINTS); 
		tableColumnsMap.put("SYSTEM_NOTIFICATION",columnsSYSTEM_NOTIFICATION); 
		tableColumnsMap.put("SUBORDERS",columnsSUBORDERS); 
		tableColumnsMap.put("PRODUCT",columnsPRODUCT); 
		tableColumnsMap.put("MODULE_CONFIGURATION",columnsMODULE_CONFIGURATION); 
		tableColumnsMap.put("ZONE",columnsZONE); 
		tableColumnsMap.put("CUSTOMER_GROUP",columnsCUSTOMER_GROUP); 
		tableColumnsMap.put("GEOZONE",columnsGEOZONE); 
		tableColumnsMap.put("SYSTEM_CONFIGURATION",columnsSYSTEM_CONFIGURATION); 
		tableColumnsMap.put("ORDER_STATUS_HISTORY",columnsORDER_STATUS_HISTORY); 
		tableColumnsMap.put("PRODUCT_ATTRIBUTE",columnsPRODUCT_ATTRIBUTE); 
		tableColumnsMap.put("AUTH_BRAND",columnsAUTH_BRAND); 
		tableColumnsMap.put("CONTENT_DESCRIPTION",columnsCONTENT_DESCRIPTION); 
		tableColumnsMap.put("PRODUCT_RELATIONSHIP",columnsPRODUCT_RELATIONSHIP); 
		tableColumnsMap.put("AUTHORIZATION",columnsAUTHORIZATION); 
		tableColumnsMap.put("CUSTOMER_OPT_VAL_DESCRIPTION",columnsCUSTOMER_OPT_VAL_DESCRIPTION); 
		tableColumnsMap.put("GEOZONE_DESCRIPTION",columnsGEOZONE_DESCRIPTION); 
		tableColumnsMap.put("CUSTOMER_OPTION_VALUE",columnsCUSTOMER_OPTION_VALUE); 
		tableColumnsMap.put("BRAND_USERSEGMENT_DISCOUNT",columnsBRAND_USERSEGMENT_DISCOUNT); 
		tableColumnsMap.put("GIFT_ORDER",columnsGIFT_ORDER); 
		tableColumnsMap.put("SHOPPING_CART_ATTR_ITEM",columnsSHOPPING_CART_ATTR_ITEM); 
		tableColumnsMap.put("PRODUCT_PROOF",columnsPRODUCT_PROOF); 
		tableColumnsMap.put("ORDER_TOTAL",columnsORDER_TOTAL); 
		tableColumnsMap.put("USERLOGIN",columnsUSERLOGIN); 
		tableColumnsMap.put("MERCHANT_STORE",columnsMERCHANT_STORE); 
		tableColumnsMap.put("PERMISSION",columnsPERMISSION); 
		tableColumnsMap.put("MERCHANT_LOG",columnsMERCHANT_LOG); 
		tableColumnsMap.put("COUNTRY",columnsCOUNTRY); 
		tableColumnsMap.put("PRODUCT_OPTION",columnsPRODUCT_OPTION); 
		tableColumnsMap.put("MANUFACTURER",columnsMANUFACTURER); 
		tableColumnsMap.put("SPECIAL_CONFIGURATION",columnsSPECIAL_CONFIGURATION); 
		tableColumnsMap.put("TAX_RATE_DESCRIPTION",columnsTAX_RATE_DESCRIPTION); 
		tableColumnsMap.put("ORDERS",columnsORDERS); 
		tableColumnsMap.put("PRODUCT_PRICE_DESCRIPTION",columnsPRODUCT_PRICE_DESCRIPTION); 
		tableColumnsMap.put("ZONE_DESCRIPTION",columnsZONE_DESCRIPTION); 
		tableColumnsMap.put("USER_SEGMENT",columnsUSER_SEGMENT); 
		tableColumnsMap.put("FILE_HISTORY",columnsFILE_HISTORY); 
		tableColumnsMap.put("ORDER_ACCOUNT_PRODUCT",columnsORDER_ACCOUNT_PRODUCT); 
		tableColumnsMap.put("CUSTOMER_INVOICE",columnsCUSTOMER_INVOICE); 
		tableColumnsMap.put("COMMON_SOFTWARE",columnsCOMMON_SOFTWARE); 
		tableColumnsMap.put("MERCHANT_CONFIGURATION",columnsMERCHANT_CONFIGURATION); 
		tableColumnsMap.put("PRODUCT_DESCRIPTION",columnsPRODUCT_DESCRIPTION); 
		tableColumnsMap.put("BASEDATA_TYPE",columnsBASEDATA_TYPE); 
		tableColumnsMap.put("PRODUCT_OPTION_VALUE_DESCRIPTION",columnsPRODUCT_OPTION_VALUE_DESCRIPTION); 
		tableColumnsMap.put("BRAND_DISCOUNT",columnsBRAND_DISCOUNT); 
		tableColumnsMap.put("CUSTOMER_IMAGE",columnsCUSTOMER_IMAGE); 
		tableColumnsMap.put("PRODUCT_PRICE",columnsPRODUCT_PRICE); 
		tableColumnsMap.put("PRODUCT_REVIEW",columnsPRODUCT_REVIEW); 
		tableColumnsMap.put("PRODUCT_TYPE",columnsPRODUCT_TYPE); 
		tableColumnsMap.put("CATEGORY_DESCRIPTION",columnsCATEGORY_DESCRIPTION); 
		tableColumnsMap.put("ORDER_PRODUCT",columnsORDER_PRODUCT); 
		tableColumnsMap.put("ORDER_PRODUCT_ATTRIBUTE",columnsORDER_PRODUCT_ATTRIBUTE); 
		tableColumnsMap.put("TAX_CLASS",columnsTAX_CLASS); 
		tableColumnsMap.put("PERMISSION_GROUP",columnsPERMISSION_GROUP); 
		tableColumnsMap.put("PRODUCT_OPTION_VALUE",columnsPRODUCT_OPTION_VALUE); 
		tableColumnsMap.put("SM_TRANSACTION",columnsSM_TRANSACTION); 
		tableColumnsMap.put("USER",columnsUSER); 
		tableColumnsMap.put("PRODUCT_CERTIFICATE",columnsPRODUCT_CERTIFICATE); 
		tableColumnsMap.put("TAX_RATE",columnsTAX_RATE); 
	}
	
	
	protected static final String ddlCreateBakCUSTOMER_OPTION = "CREATE TABLE `BAK_CUSTOMER_OPTION` ("
			+"  `CUSTOMER_OPTION_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `CUSTOMER_OPT_ACTIVE` tinyint(1) DEFAULT NULL,"
			+"  `CUSTOMER_OPT_CODE` varchar(255) NOT NULL,"
			+"  `CUSTOMER_OPTION_TYPE` varchar(10) DEFAULT NULL,"
			+"  `CUSTOMER_OPT_PUBLIC` tinyint(1) DEFAULT NULL,"
			+"  `SORT_ORDER` int(11) DEFAULT NULL,"
			+"  `MERCHANT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`CUSTOMER_OPTION_ID`),"
			+"  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`,`CUSTOMER_OPT_CODE`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_SELFPROOF = "CREATE TABLE `BAK_PRODUCT_SELFPROOF` ("
			+"  `PRODUCT_SELFPROOF_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `SORT_ORDER` int(11) DEFAULT NULL,"
			+"  `SELFPROOF_IMAGE` varchar(255) DEFAULT NULL,"
			+"  `TITLE` varchar(100) DEFAULT NULL,"
			+"  `PRODUCT_ID` bigint(20) NOT NULL,"
			+"  `SELFPROOF_TYPE` varchar(255) DEFAULT NULL,"
			+"  PRIMARY KEY (`PRODUCT_SELFPROOF_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakCUSTOMER = "CREATE TABLE `BAK_CUSTOMER` ("
			+"  `CUSTOMER_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `ADDRESS_DEFAULT` bigint(20) DEFAULT NULL,"
			+"  `CUSTOMER_ANONYMOUS` int(11) DEFAULT NULL,"
			+"  `COMPANY` varchar(255) DEFAULT NULL,"
			+"  `CUSTOMER_DOB` datetime DEFAULT NULL,"
			+"  `CUSTOMER_EMAIL_ADDRESS` varchar(96) NOT NULL,"
			+"  `CUSTOMER_GENDER` varchar(1) DEFAULT NULL,"
			+"  `GRADE` int(11) DEFAULT NULL,"
			+"  `INVOICE_DEFAULT` bigint(20) DEFAULT NULL,"
			+"  `INVOICE_ADDRES_DEFAULT` bigint(20) DEFAULT NULL,"
			+"  `CUSTOMER_NICK` varchar(96) DEFAULT NULL,"
			+"  `CUSTOMER_PASSWORD` varchar(50) DEFAULT NULL,"
			+"  `PHONE` varchar(11) DEFAULT NULL,"
			+"  `POINTS` varchar(10) DEFAULT NULL,"
			+"  `PROJECT` varchar(255) DEFAULT NULL,"
			+"  `RECIEVE_EMAIL` tinyint(1) DEFAULT NULL,"
			+"  `RECIEVE_PHONE` tinyint(1) DEFAULT NULL,"
			+"  `RECIEVE_PHONETIME` varchar(255) DEFAULT NULL,"
			+"  `LANGUAGE_ID` int(11) NOT NULL,"
			+"  `MERCHANT_ID` bigint(20) NOT NULL,"
			+"  `RELATEIONSHIP` varchar(255) DEFAULT NULL,"
			+"  `CUSTOMER_DISCOUNT` double DEFAULT NULL,"
			+"  `ACCOUNT_STATE` varchar(255) NOT NULL DEFAULT 'certified',"
			+"  `ACCOUT_TYPE` varchar(255) NOT NULL DEFAULT 'research',"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `RELATE_SALES_EMAIL` varchar(255) DEFAULT NULL,"
			+"  `RELATE_SALES_PHONE` varchar(255) DEFAULT NULL,"
			+"  PRIMARY KEY (`CUSTOMER_ID`),"
			+"  UNIQUE KEY `CUSTOMER_ID` (`CUSTOMER_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakMERCHANT_LANGUAGE = "CREATE TABLE `BAK_MERCHANT_LANGUAGE` ("
			+"  `stores_MERCHANT_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `languages_LANGUAGE_ID` int(11) NOT NULL"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPARCEL = "CREATE TABLE `BAK_PARCEL` ("
			+"  `PARCEL_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `NAME` varchar(32) DEFAULT NULL,"
			+"  `CUSTMOER_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`PARCEL_ID`),"
			+"  UNIQUE KEY `PARCEL_ID` (`PARCEL_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_REVIEW_DESCRIPTION = "CREATE TABLE `BAK_PRODUCT_REVIEW_DESCRIPTION` ("
			+"  `DESCRIPTION_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `NAME` varchar(120) NOT NULL,"
			+"  `TITLE` varchar(100) DEFAULT NULL,"
			+"  `LANGUAGE_ID` int(11) NOT NULL,"
			+"  `PRODUCT_REVIEW_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`DESCRIPTION_ID`),"
			+"  UNIQUE KEY `PRODUCT_REVIEW_ID` (`PRODUCT_REVIEW_ID`,`LANGUAGE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakUSERGRADE = "CREATE TABLE `BAK_USERGRADE` ("
			+"  `CATEGORY_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `CODE` varchar(96) DEFAULT NULL,"
			+"  `TYPE` int(11) DEFAULT NULL,"
			+"  `VALUE` int(11) DEFAULT NULL,"
			+"  PRIMARY KEY (`CATEGORY_ID`),"
			+"  UNIQUE KEY `CATEGORY_ID` (`CATEGORY_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakMERCHANT_RANK = "CREATE TABLE `BAK_MERCHANT_RANK` ("
			+"  `RANK_ID` int(11) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `NUM_DIAMOND_PRODUCT` int(11) NOT NULL,"
			+"  `RANK_NAME` varchar(255) NOT NULL,"
			+"  `RANK_NAME_ZH` varchar(255) NOT NULL,"
			+"  PRIMARY KEY (`RANK_ID`),"
			+"  UNIQUE KEY `RANK_ID` (`RANK_ID`),"
			+"  UNIQUE KEY `RANK_NAME` (`RANK_NAME`),"
			+"  UNIQUE KEY `RANK_NAME_ZH_UNIQUE` (`RANK_NAME_ZH`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakSM_SEQUENCER = "CREATE TABLE `BAK_SM_SEQUENCER` ("
			+"  `SEQ_NAME` varchar(255) DEFAULT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `SEQ_COUNT` int(11) DEFAULT NULL"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakSHOPPING_CART_ITEM = "CREATE TABLE `BAK_SHOPPING_CART_ITEM` ("
			+"  `SHP_CART_ITEM_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `ISSELECTED` tinyint(1) NOT NULL,"
			+"  `PRICE_ID` bigint(20) NOT NULL,"
			+"  `PRODUCT_ID` bigint(20) NOT NULL,"
			+"  `QUANTITY` int(11) DEFAULT NULL,"
			+"  `SHP_CART_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`SHP_CART_ITEM_ID`),"
			+"  UNIQUE KEY `SHP_CART_ITEM_ID` (`SHP_CART_ITEM_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakGIFTS = "CREATE TABLE `BAK_GIFTS` ("
			+"  `GIFT_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `GIFT_NAME` varchar(100) DEFAULT NULL,"
			+"  `GIFT_PICTURE_SRC` varchar(255) DEFAULT NULL,"
			+"  `GIFT_POINTS` bigint(20) DEFAULT NULL,"
			+"  `GIFT_PRICE` bigint(20) DEFAULT NULL,"
			+"  `GIFT_DEADLINE` datetime DEFAULT NULL,"
			+"  `GIFT_TOTAL` bigint(20) DEFAULT NULL,"
			+"  `GIFT_TYPE` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`GIFT_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_IMAGE = "CREATE TABLE `BAK_PRODUCT_IMAGE` ("
			+"  `PRODUCT_IMAGE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `DEFAULT_IMAGE` tinyint(1) DEFAULT NULL,"
			+"  `IMAGE_CROP` tinyint(1) DEFAULT NULL,"
			+"  `IMAGE_TYPE` int(11) DEFAULT NULL,"
			+"  `PRODUCT_IMAGE` varchar(255) DEFAULT NULL,"
			+"  `PRODUCT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`PRODUCT_IMAGE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_OPTION_DESC = "CREATE TABLE `BAK_PRODUCT_OPTION_DESC` ("
			+"  `DESCRIPTION_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `NAME` varchar(120) NOT NULL,"
			+"  `TITLE` varchar(100) DEFAULT NULL,"
			+"  `PRODUCT_OPTION_COMMENT` longtext,"
			+"  `LANGUAGE_ID` int(11) NOT NULL,"
			+"  `PRODUCT_OPTION_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`DESCRIPTION_ID`),"
			+"  UNIQUE KEY `PRODUCT_OPTION_ID` (`PRODUCT_OPTION_ID`,`LANGUAGE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakDELIVERYCOMPNY = "CREATE TABLE `BAK_DELIVERYCOMPNY` ("
			+"  `DELIVERYCOMPNY_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `DELIVERY_ADDRESS` varchar(256) DEFAULT NULL,"
			+"  `DELIVERY_CODE` varchar(32) DEFAULT NULL,"
			+"  `DELIVERY_CONTACTS` varchar(32) DEFAULT NULL,"
			+"  `DELIVERY_NAME` varchar(256) DEFAULT NULL,"
			+"  `DELIVERY_TELEPHONE` varchar(32) DEFAULT NULL,"
			+"  PRIMARY KEY (`DELIVERYCOMPNY_ID`),"
			+"  UNIQUE KEY `DELIVERYCOMPNY_ID` (`DELIVERYCOMPNY_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_LITERATURE_PATH = "CREATE TABLE `BAK_PRODUCT_LITERATURE_PATH` ("
			+"  `PRODUCT_LITERATURE_PATH_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `PATH` varchar(3000) DEFAULT NULL,"
			+"  `PRODUCT_CERTIFICATE_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`PRODUCT_LITERATURE_PATH_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakMANUFACTURER_DESCRIPTION = "CREATE TABLE `BAK_MANUFACTURER_DESCRIPTION` ("
			+"  `DESCRIPTION_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `NAME` varchar(120) NOT NULL,"
			+"  `TITLE` varchar(100) DEFAULT NULL,"
			+"  `DATE_LAST_CLICK` datetime DEFAULT NULL,"
			+"  `MANUFACTURERS_URL` varchar(255) DEFAULT NULL,"
			+"  `URL_CLICKED` int(11) DEFAULT NULL,"
			+"  `LANGUAGE_ID` int(11) NOT NULL,"
			+"  `MANUFACTURER_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`DESCRIPTION_ID`),"
			+"  UNIQUE KEY `MANUFACTURER_ID` (`MANUFACTURER_ID`,`LANGUAGE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakUSER_GROUP = "CREATE TABLE `BAK_USER_GROUP` ("
			+"  `USER_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `GROUP_ID` int(11) NOT NULL"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakCUSTOMER_ADDRESS = "CREATE TABLE `BAK_CUSTOMER_ADDRESS` ("
			+"  `CUSTOMER_ADDRESS_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `STREET_ADDRESS` varchar(256) DEFAULT NULL,"
			+"  `CITY` varchar(100) DEFAULT NULL,"
			+"  `COMPANY` varchar(500) DEFAULT NULL,"
			+"  `MEMO` varchar(500) DEFAULT NULL,"
			+"  `NAME` varchar(255) DEFAULT NULL,"
			+"  `POSTCODE` varchar(20) DEFAULT NULL,"
			+"  `STATE` varchar(100) DEFAULT NULL,"
			+"  `TELEPHONE` varchar(32) DEFAULT NULL,"
			+"  `TYPE` int(11) DEFAULT NULL,"
			+"  `BILLING_COUNTRY_ID` int(11) NOT NULL,"
			+"  `CUSTOMER_ID` bigint(20) NOT NULL,"
			+"  `BILLING_ZONE_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`CUSTOMER_ADDRESS_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakNEWS_CONTENT = "CREATE TABLE `BAK_NEWS_CONTENT` ("
			+"  `NEWS_CONTENT_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `CODE` varchar(100) DEFAULT NULL,"
			+"  `CONTENT` longtext,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `IMAGE` varchar(200) DEFAULT NULL,"
			+"  `ISPUBLISH` tinyint(1) DEFAULT NULL,"
			+"  `KEYWORDS` varchar(200) DEFAULT NULL,"
			+"  `LINKHREF` varchar(500) DEFAULT NULL,"
			+"  `LINKTEXT` varchar(200) DEFAULT NULL,"
			+"  `NAME` varchar(255) DEFAULT NULL,"
			+"  `DATE_PUBLISH` datetime DEFAULT NULL,"
			+"  `SUMMARY` varchar(1000) DEFAULT NULL,"
			+"  `TYPE` int(11) DEFAULT NULL,"
			+"  `USERCODE` varchar(50) DEFAULT NULL,"
			+"  PRIMARY KEY (`NEWS_CONTENT_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakMERCHANT_RANK_PROFILE = "CREATE TABLE `BAK_MERCHANT_RANK_PROFILE` ("
			+"  `MCHTRANKPROFILE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `NUM_DIAMOND_PRODUCT` int(11) DEFAULT NULL,"
			+"  `RANK_ID` int(11) DEFAULT NULL,"
			+"  PRIMARY KEY (`MCHTRANKPROFILE_ID`),"
			+"  UNIQUE KEY `MCHTRANKPROFILE_ID` (`MCHTRANKPROFILE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_AVAILABILITY = "CREATE TABLE `BAK_PRODUCT_AVAILABILITY` ("
			+"  `PRODUCT_AVAIL_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `DATE_AVAILABLE` date DEFAULT NULL,"
			+"  `FREE_SHIPPING` tinyint(1) DEFAULT NULL,"
			+"  `QUANTITY` int(11) NOT NULL,"
			+"  `QUANTITY_ORD_MAX` int(11) DEFAULT NULL,"
			+"  `QUANTITY_ORD_MIN` int(11) DEFAULT NULL,"
			+"  `STATUS` tinyint(1) DEFAULT NULL,"
			+"  `REGION` varchar(255) DEFAULT NULL,"
			+"  `REGION_VARIANT` varchar(255) DEFAULT NULL,"
			+"  `PRODUCT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`PRODUCT_AVAIL_ID`),"
			+"  UNIQUE KEY `PRODUCT_AVAIL_ID` (`PRODUCT_AVAIL_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakCONTENT = "CREATE TABLE `BAK_CONTENT` ("
			+"  `CONTENT_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `CODE` varchar(100) NOT NULL,"
			+"  `CONTENT_POSITION` varchar(10) DEFAULT NULL,"
			+"  `CONTENT_TYPE` varchar(10) DEFAULT NULL,"
			+"  `SORT_ORDER` int(11) DEFAULT NULL,"
			+"  `VISIBLE` tinyint(1) DEFAULT NULL,"
			+"  `MERCHANT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`CONTENT_ID`),"
			+"  UNIQUE KEY `CONTENT_ID` (`CONTENT_ID`),"
			+"  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`,`CODE`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakCATEGORY = "CREATE TABLE `BAK_CATEGORY` ("
			+"  `CATEGORY_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `CATEGORY_IMAGE` varchar(100) DEFAULT NULL,"
			+"  `CATEGORY_STATUS` tinyint(1) DEFAULT NULL,"
			+"  `CODE` varchar(100) NOT NULL,"
			+"  `DEPTH` int(11) DEFAULT NULL,"
			+"  `LINEAGE` varchar(255) DEFAULT NULL,"
			+"  `SORT_ORDER` int(11) DEFAULT NULL,"
			+"  `VISIBLE` tinyint(1) DEFAULT NULL,"
			+"  `MERCHANT_ID` bigint(20) NOT NULL,"
			+"  `PARENT_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`CATEGORY_ID`),"
			+"  UNIQUE KEY `CATEGORY_ID` (`CATEGORY_ID`),"
			+"  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`,`CODE`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakSM_GROUP = "CREATE TABLE `BAK_SM_GROUP` ("
			+"  `GROUP_ID` int(11) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `GROUP_NAME` varchar(255) NOT NULL,"
			+"  `GROUP_TYPE` varchar(255) DEFAULT NULL,"
			+"  PRIMARY KEY (`GROUP_ID`),"
			+"  UNIQUE KEY `GROUP_ID` (`GROUP_ID`),"
			+"  UNIQUE KEY `GROUP_NAME` (`GROUP_NAME`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_THIRDPROOF = "CREATE TABLE `BAK_PRODUCT_THIRDPROOF` ("
			+"  `PRODUCT_THIRDPROOF_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `SORT_ORDER` int(11) DEFAULT NULL,"
			+"  `THIRDPROOF_IMAGE` varchar(255) DEFAULT NULL,"
			+"  `TITLE` varchar(100) DEFAULT NULL,"
			+"  `BASEDATATYPE_ID` bigint(20) NOT NULL,"
			+"  `PRODUCT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`PRODUCT_THIRDPROOF_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakLANGUAGE = "CREATE TABLE `BAK_LANGUAGE` ("
			+"  `LANGUAGE_ID` int(11) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `CODE` varchar(255) NOT NULL,"
			+"  `SORT_ORDER` int(11) DEFAULT NULL,"
			+"  PRIMARY KEY (`LANGUAGE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakSHOPPING_CART = "CREATE TABLE `BAK_SHOPPING_CART` ("
			+"  `SHP_CART_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `CUSTOMER_ID` bigint(20) DEFAULT NULL,"
			+"  `SHP_CART_CODE` varchar(255) NOT NULL,"
			+"  `MERCHANT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`SHP_CART_ID`),"
			+"  UNIQUE KEY `SHP_CART_ID` (`SHP_CART_ID`),"
			+"  UNIQUE KEY `SHP_CART_CODE` (`SHP_CART_CODE`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakCOUNTRY_DESCRIPTION = "CREATE TABLE `BAK_COUNTRY_DESCRIPTION` ("
			+"  `DESCRIPTION_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `NAME` varchar(120) NOT NULL,"
			+"  `TITLE` varchar(100) DEFAULT NULL,"
			+"  `LANGUAGE_ID` int(11) NOT NULL,"
			+"  `COUNTRY_ID` int(11) NOT NULL,"
			+"  PRIMARY KEY (`DESCRIPTION_ID`),"
			+"  UNIQUE KEY `COUNTRY_ID` (`COUNTRY_ID`,`LANGUAGE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakCUSTOMER_OPTION_SET = "CREATE TABLE `BAK_CUSTOMER_OPTION_SET` ("
			+"  `CUSTOMER_OPTIONSET_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `SORT_ORDER` int(11) DEFAULT NULL,"
			+"  `CUSTOMER_OPTION_ID` bigint(20) NOT NULL,"
			+"  `CUSTOMER_OPTION_VALUE_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`CUSTOMER_OPTIONSET_ID`),"
			+"  UNIQUE KEY `CUSTOMER_OPTIONSET_ID` (`CUSTOMER_OPTIONSET_ID`),"
			+"  UNIQUE KEY `CUSTOMER_OPTION_ID` (`CUSTOMER_OPTION_ID`,`CUSTOMER_OPTION_VALUE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakORDER_PRODUCT_PRICE = "CREATE TABLE `BAK_ORDER_PRODUCT_PRICE` ("
			+"  `ORDER_PRODUCT_PRICE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_PRICE` decimal(19,2) NOT NULL,"
			+"  `PRODUCT_PRICE_CODE` varchar(64) NOT NULL,"
			+"  `PRODUCT_PRICE_NAME` varchar(255) DEFAULT NULL,"
			+"  `PRODUCT_PRICE_SPECIAL` decimal(19,2) DEFAULT NULL,"
			+"  `PRD_PRICE_SPECIAL_END_DT` datetime DEFAULT NULL,"
			+"  `PRD_PRICE_SPECIAL_ST_DT` datetime DEFAULT NULL,"
			+"  `ORDER_PRODUCT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`ORDER_PRODUCT_PRICE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakCUSTOMER_ATTRIBUTE = "CREATE TABLE `BAK_CUSTOMER_ATTRIBUTE` ("
			+"  `CUSTOMER_ATTRIBUTE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `CUSTOMER_ATTR_TXT_VAL` varchar(255) DEFAULT NULL,"
			+"  `CUSTOMER_ID` bigint(20) NOT NULL,"
			+"  `OPTION_ID` bigint(20) NOT NULL,"
			+"  `OPTION_VALUE_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`CUSTOMER_ATTRIBUTE_ID`),"
			+"  UNIQUE KEY `CUSTOMER_ATTRIBUTE_ID` (`CUSTOMER_ATTRIBUTE_ID`),"
			+"  UNIQUE KEY `OPTION_ID` (`OPTION_ID`,`CUSTOMER_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakORDER_ACCOUNT = "CREATE TABLE `BAK_ORDER_ACCOUNT` ("
			+"  `ORDER_ACCOUNT_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `ORDER_ACCOUNT_BILL_DAY` int(11) NOT NULL,"
			+"  `ORDER_ACCOUNT_END_DATE` date DEFAULT NULL,"
			+"  `ORDER_ACCOUNT_START_DATE` date NOT NULL,"
			+"  `ORDER_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`ORDER_ACCOUNT_ID`),"
			+"  UNIQUE KEY `ORDER_ACCOUNT_ID` (`ORDER_ACCOUNT_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakCUSTOMER_OPTION_DESC = "CREATE TABLE `BAK_CUSTOMER_OPTION_DESC` ("
			+"  `DESCRIPTION_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `NAME` varchar(120) NOT NULL,"
			+"  `TITLE` varchar(100) DEFAULT NULL,"
			+"  `CUSTOMER_OPTION_COMMENT` longtext,"
			+"  `LANGUAGE_ID` int(11) NOT NULL,"
			+"  `CUSTOMER_OPTION_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`DESCRIPTION_ID`),"
			+"  UNIQUE KEY `CUSTOMER_OPTION_ID` (`CUSTOMER_OPTION_ID`,`LANGUAGE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_DIGITAL = "CREATE TABLE `BAK_PRODUCT_DIGITAL` ("
			+"  `PRODUCT_DIGITAL_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `FILE_NAME` varchar(255) NOT NULL,"
			+"  `PRODUCT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`PRODUCT_DIGITAL_ID`),"
			+"  UNIQUE KEY `PRODUCT_ID` (`PRODUCT_ID`,`FILE_NAME`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakCURRENCY = "CREATE TABLE `BAK_CURRENCY` ("
			+"  `CURRENCY_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `CURRENCY_CODE` varchar(255) DEFAULT NULL,"
			+"  `CURRENCY_CURRENCY_CODE` varchar(255) NOT NULL,"
			+"  `CURRENCY_NAME` varchar(255) DEFAULT NULL,"
			+"  `CURRENCY_SUPPORTED` tinyint(1) DEFAULT NULL,"
			+"  PRIMARY KEY (`CURRENCY_ID`),"
			+"  UNIQUE KEY `CURRENCY_CURRENCY_CODE` (`CURRENCY_CURRENCY_CODE`),"
			+"  UNIQUE KEY `CURRENCY_CODE` (`CURRENCY_CODE`),"
			+"  UNIQUE KEY `CURRENCY_NAME` (`CURRENCY_NAME`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_CATEGORY = "CREATE TABLE `BAK_PRODUCT_CATEGORY` ("
			+"  `PRODUCT_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `CATEGORY_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`PRODUCT_ID`,`CATEGORY_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakORDER_PRODUCT_DOWNLOAD = "CREATE TABLE `BAK_ORDER_PRODUCT_DOWNLOAD` ("
			+"  `ORDER_PRODUCT_DOWNLOAD_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `DOWNLOAD_COUNT` int(11) NOT NULL,"
			+"  `DOWNLOAD_MAXDAYS` int(11) NOT NULL,"
			+"  `ORDER_PRODUCT_FILENAME` varchar(255) NOT NULL,"
			+"  `ORDER_PRODUCT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`ORDER_PRODUCT_DOWNLOAD_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_BROWSW = "CREATE TABLE `BAK_PRODUCT_BROWSW` ("
			+"  `PRODUCT_BROWSE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `BROWSE_DATE` datetime DEFAULT NULL,"
			+"  `CUSTMOER_ID` bigint(20) DEFAULT NULL,"
			+"  `PRODUCT_ID` bigint(20) DEFAULT NULL,"
			+"  `IP` varchar(255) DEFAULT NULL,"
			+"  PRIMARY KEY (`PRODUCT_BROWSE_ID`),"
			+"  UNIQUE KEY `PRODUCT_BROWSE_ID` (`PRODUCT_BROWSE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_IMAGE_DESCRIPTION = "CREATE TABLE `BAK_PRODUCT_IMAGE_DESCRIPTION` ("
			+"  `DESCRIPTION_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `NAME` varchar(120) NOT NULL,"
			+"  `TITLE` varchar(100) DEFAULT NULL,"
			+"  `ALT_TAG` varchar(100) DEFAULT NULL,"
			+"  `LANGUAGE_ID` int(11) NOT NULL,"
			+"  `PRODUCT_IMAGE_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`DESCRIPTION_ID`),"
			+"  UNIQUE KEY `PRODUCT_IMAGE_ID` (`PRODUCT_IMAGE_ID`,`LANGUAGE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakMEMBER_POINTS = "CREATE TABLE `BAK_MEMBER_POINTS` ("
			+"  `MEMBER_POINTS_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `TYPE` varchar(100) DEFAULT NULL,"
			+"  `VALUE` varchar(10) DEFAULT NULL,"
			+"  `CUSTOMER_ID` bigint(20) NOT NULL,"
			+"  `DATEVALID` datetime DEFAULT NULL,"
			+"  `LTFE_POINT` bigint(20) DEFAULT NULL,"
			+"  `STATAS` int(11) DEFAULT NULL,"
			+"  `UPDATE_DATE` datetime DEFAULT NULL,"
			+"  `ORDER_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`MEMBER_POINTS_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakSYSTEM_NOTIFICATION = "CREATE TABLE `BAK_SYSTEM_NOTIFICATION` ("
			+"  `SYSTEM_NOTIF_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `END_DATE` date DEFAULT NULL,"
			+"  `CONFIG_KEY` varchar(255) DEFAULT NULL,"
			+"  `START_DATE` date DEFAULT NULL,"
			+"  `VALUE` varchar(255) DEFAULT NULL,"
			+"  `MERCHANT_ID` bigint(20) DEFAULT NULL,"
			+"  `USER_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`SYSTEM_NOTIF_ID`),"
			+"  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`,`CONFIG_KEY`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakSUBORDERS = "CREATE TABLE `BAK_SUBORDERS` ("
			+"  `SUBORDER_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `DELIVERY_CODE` varchar(255) DEFAULT NULL,"
			+"  `DELIVERY_NUMBER` varchar(255) DEFAULT NULL,"
			+"  `LAST_MODIFIED` datetime DEFAULT NULL,"
			+"  `ORDER_STATUS` varchar(255) DEFAULT NULL,"
			+"  `ORDER_TOTAL` decimal(19,2) DEFAULT NULL,"
			+"  `MERCHANTID` bigint(20) DEFAULT NULL,"
			+"  `ORDER_ID` bigint(20) NOT NULL,"
			+"  `STORE_NAME` varchar(255) DEFAULT NULL,"
			+"  `PAY_PROOF` varchar(255) DEFAULT NULL,"
			+"  `FINAL_TOTAL` decimal(19,2) DEFAULT NULL,"
			+"  `RELATE_SALES_EMAIL` varchar(255) DEFAULT NULL,"
			+"  `RELATE_SALES_PHONE` varchar(255) DEFAULT NULL,"
			+"  PRIMARY KEY (`SUBORDER_ID`),"
			+"  UNIQUE KEY `SUBORDER_ID` (`SUBORDER_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT = "CREATE TABLE `BAK_PRODUCT` ("
			+"  `PRODUCT_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `AVAILABLE` tinyint(1) DEFAULT NULL,"
			+"  `BATCHNUM` varchar(255) DEFAULT NULL,"
			+"  `CAS` varchar(255) DEFAULT NULL,"
			+"  `CODE` varchar(255) NOT NULL,"
			+"  `DATE_AVAILABLE` datetime DEFAULT NULL,"
			+"  `DATE_ChargeBegin` datetime DEFAULT NULL,"
			+"  `DATE_ChargeEnd` datetime DEFAULT NULL,"
			+"  `PRODUCT_FREE` tinyint(1) DEFAULT NULL,"
			+"  `QUANTITY_ORDERED` int(11) DEFAULT NULL,"
			+"  `REVIEW_AVG` decimal(19,2) DEFAULT NULL,"
			+"  `REVIEW_COUNT` int(11) DEFAULT NULL,"
			+"  `QUALITY_SCORE` int(11) DEFAULT NULL,"
			+"  `SKU` varchar(255) DEFAULT NULL,"
			+"  `MANUFACTURER_ID` bigint(20) DEFAULT NULL,"
			+"  `MERCHANT_ID` bigint(20) NOT NULL,"
			+"  `Parcel_ID` bigint(20) DEFAULT NULL,"
			+"  `PRODUCT_TYPE_ID` bigint(20) DEFAULT NULL,"
			+"  `SORT_ORDER` int(11) DEFAULT NULL,"
			+"  `SPRICE` varchar(255) DEFAULT NULL,"
			+"  `PRODUCT_DIAMOND` tinyint(1) DEFAULT '0',"
			+"  `SEARCH_CONTENT` varchar(1000) DEFAULT NULL,"
			+"  PRIMARY KEY (`PRODUCT_ID`),"
			+"  UNIQUE KEY `PRODUCT_ID` (`PRODUCT_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakMODULE_CONFIGURATION = "CREATE TABLE `BAK_MODULE_CONFIGURATION` ("
			+"  `MODULE_CONF_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `CODE` varchar(255) NOT NULL,"
			+"  `DETAILS` longtext,"
			+"  `CONFIGURATION` longtext,"
			+"  `CUSTOM_IND` tinyint(1) DEFAULT NULL,"
			+"  `IMAGE` varchar(255) DEFAULT NULL,"
			+"  `MODULE` varchar(255) DEFAULT NULL,"
			+"  `REGIONS` varchar(255) DEFAULT NULL,"
			+"  `TYPE` varchar(255) DEFAULT NULL,"
			+"  PRIMARY KEY (`MODULE_CONF_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakZONE = "CREATE TABLE `BAK_ZONE` ("
			+"  `ZONE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `ZONE_CODE` varchar(255) NOT NULL,"
			+"  `COUNTRY_ID` int(11) NOT NULL,"
			+"  PRIMARY KEY (`ZONE_ID`),"
			+"  UNIQUE KEY `ZONE_CODE` (`ZONE_CODE`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakCUSTOMER_GROUP = "CREATE TABLE `BAK_CUSTOMER_GROUP` ("
			+"  `CUSTOMER_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `GROUP_ID` int(11) NOT NULL"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakGEOZONE = "CREATE TABLE `BAK_GEOZONE` ("
			+"  `GEOZONE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `GEOZONE_CODE` varchar(255) DEFAULT NULL,"
			+"  `GEOZONE_NAME` varchar(255) DEFAULT NULL,"
			+"  PRIMARY KEY (`GEOZONE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakSYSTEM_CONFIGURATION = "CREATE TABLE `BAK_SYSTEM_CONFIGURATION` ("
			+"  `SYSTEM_CONFIG_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `CONFIG_KEY` varchar(255) DEFAULT NULL,"
			+"  `VALUE` varchar(255) DEFAULT NULL,"
			+"  PRIMARY KEY (`SYSTEM_CONFIG_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakORDER_STATUS_HISTORY = "CREATE TABLE `BAK_ORDER_STATUS_HISTORY` ("
			+"  `ORDER_STATUS_HISTORY_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `COMMENTS` longtext,"
			+"  `CUSTOMER_NOTIFIED` int(11) DEFAULT NULL,"
			+"  `DATE_ADDED` datetime NOT NULL,"
			+"  `status` varchar(255) DEFAULT NULL,"
			+"  `ORDER_ID` bigint(20) NOT NULL,"
			+"  `SUBORDER_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`ORDER_STATUS_HISTORY_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_ATTRIBUTE = "CREATE TABLE `BAK_PRODUCT_ATTRIBUTE` ("
			+"  `PRODUCT_ATTRIBUTE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_ATTRIBUTE_DEFAULT` tinyint(1) DEFAULT NULL,"
			+"  `PRODUCT_ATTRIBUTE_DISCOUNTED` tinyint(1) DEFAULT NULL,"
			+"  `PRODUCT_ATTRIBUTE_FOR_DISP` tinyint(1) DEFAULT NULL,"
			+"  `PRODUCT_ATTRIBUTE_REQUIRED` tinyint(1) DEFAULT NULL,"
			+"  `PRODUCT_ATTRIBUTE_FREE` tinyint(1) DEFAULT NULL,"
			+"  `PRODUCT_ATRIBUTE_PRICE` decimal(19,2) DEFAULT NULL,"
			+"  `PRODUCT_ATTRIBUTE_WEIGHT` decimal(19,2) DEFAULT NULL,"
			+"  `PRODUCT_ATTRIBUTE_SORT_ORD` int(11) DEFAULT NULL,"
			+"  `PRODUCT_ID` bigint(20) NOT NULL,"
			+"  `OPTION_ID` bigint(20) NOT NULL,"
			+"  `OPTION_VALUE_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`PRODUCT_ATTRIBUTE_ID`),"
			+"  UNIQUE KEY `PRODUCT_ATTRIBUTE_ID` (`PRODUCT_ATTRIBUTE_ID`),"
			+"  UNIQUE KEY `OPTION_ID` (`OPTION_ID`,`OPTION_VALUE_ID`,`PRODUCT_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakAUTH_BRAND = "CREATE TABLE `BAK_AUTH_BRAND` ("
			+"  `AUTH_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `BRAND_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`AUTH_ID`,`BRAND_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakCONTENT_DESCRIPTION = "CREATE TABLE `BAK_CONTENT_DESCRIPTION` ("
			+"  `DESCRIPTION_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `NAME` varchar(120) NOT NULL,"
			+"  `TITLE` varchar(100) DEFAULT NULL,"
			+"  `META_DESCRIPTION` varchar(255) DEFAULT NULL,"
			+"  `META_KEYWORDS` varchar(255) DEFAULT NULL,"
			+"  `META_TITLE` varchar(255) DEFAULT NULL,"
			+"  `SEF_URL` varchar(120) DEFAULT NULL,"
			+"  `LANGUAGE_ID` int(11) NOT NULL,"
			+"  `CONTENT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`DESCRIPTION_ID`),"
			+"  UNIQUE KEY `CONTENT_ID` (`CONTENT_ID`,`LANGUAGE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_RELATIONSHIP = "CREATE TABLE `BAK_PRODUCT_RELATIONSHIP` ("
			+"  `PRODUCT_RELATIONSHIP_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `ACTIVE` tinyint(1) DEFAULT NULL,"
			+"  `CODE` varchar(255) DEFAULT NULL,"
			+"  `PRODUCT_ID` bigint(20) DEFAULT NULL,"
			+"  `RELATED_PRODUCT_ID` bigint(20) DEFAULT NULL,"
			+"  `MERCHANT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`PRODUCT_RELATIONSHIP_ID`),"
			+"  UNIQUE KEY `PRODUCT_RELATIONSHIP_ID` (`PRODUCT_RELATIONSHIP_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakAUTHORIZATION = "CREATE TABLE `BAK_AUTHORIZATION` ("
			+"  `AUTH_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `AUTH_TYPE` int(11) DEFAULT NULL,"
			+"  `COMPANY` varchar(255) DEFAULT NULL,"
			+"  `END_TIME` date DEFAULT NULL,"
			+"  `IMAGE` varchar(255) NOT NULL,"
			+"  `INTRODUCE` varchar(1000) DEFAULT NULL,"
			+"  `START_TIME` date DEFAULT NULL,"
			+"  `MERCHANT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`AUTH_ID`),"
			+"  UNIQUE KEY `AUTH_ID` (`AUTH_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakCUSTOMER_OPT_VAL_DESCRIPTION = "CREATE TABLE `BAK_CUSTOMER_OPT_VAL_DESCRIPTION` ("
			+"  `DESCRIPTION_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `NAME` varchar(120) NOT NULL,"
			+"  `TITLE` varchar(100) DEFAULT NULL,"
			+"  `LANGUAGE_ID` int(11) NOT NULL,"
			+"  `CUSTOMER_OPT_VAL_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`DESCRIPTION_ID`),"
			+"  UNIQUE KEY `CUSTOMER_OPT_VAL_ID` (`CUSTOMER_OPT_VAL_ID`,`LANGUAGE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakGEOZONE_DESCRIPTION = "CREATE TABLE `BAK_GEOZONE_DESCRIPTION` ("
			+"  `DESCRIPTION_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `NAME` varchar(120) NOT NULL,"
			+"  `TITLE` varchar(100) DEFAULT NULL,"
			+"  `LANGUAGE_ID` int(11) NOT NULL,"
			+"  `GEOZONE_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`DESCRIPTION_ID`),"
			+"  UNIQUE KEY `GEOZONE_ID` (`GEOZONE_ID`,`LANGUAGE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakCUSTOMER_OPTION_VALUE = "CREATE TABLE `BAK_CUSTOMER_OPTION_VALUE` ("
			+"  `CUSTOMER_OPTION_VALUE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `CUSTOMER_OPT_VAL_CODE` varchar(255) NOT NULL,"
			+"  `CUSTOMER_OPT_VAL_IMAGE` varchar(255) DEFAULT NULL,"
			+"  `SORT_ORDER` int(11) DEFAULT NULL,"
			+"  `MERCHANT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`CUSTOMER_OPTION_VALUE_ID`),"
			+"  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`,`CUSTOMER_OPT_VAL_CODE`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakBRAND_USERSEGMENT_DISCOUNT = "CREATE TABLE `BAK_BRAND_USERSEGMENT_DISCOUNT` ("
			+"  `BRAND_DISCOUNT_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `DISCOUNTS` double DEFAULT NULL,"
			+"  `discounts_KEY` varchar(255) NOT NULL DEFAULT '',"
			+"  PRIMARY KEY (`BRAND_DISCOUNT_ID`,`discounts_KEY`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakGIFT_ORDER = "CREATE TABLE `BAK_GIFT_ORDER` ("
			+"  `GIFT_ORDER_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `CREATE_DATE` datetime DEFAULT NULL,"
			+"  `DELIVERY_CODE` varchar(255) DEFAULT NULL,"
			+"  `DELIVERY_NUMBER` varchar(255) DEFAULT NULL,"
			+"  `GIFT_NUMBER` int(11) DEFAULT NULL,"
			+"  `GIFT_STATUS` varchar(255) DEFAULT NULL,"
			+"  `CUSTOMER_ID` bigint(20) NOT NULL,"
			+"  `CUSTOMER_CITY` varchar(255) DEFAULT NULL,"
			+"  `CUSTOMER_NAME` varchar(255) DEFAULT NULL,"
			+"  `GIFT_IMG` varchar(255) DEFAULT NULL,"
			+"  `GIFT_NAME` varchar(255) DEFAULT NULL,"
			+"  `GIFT_POINT` int(11) DEFAULT NULL,"
			+"  `PHONE_NUMBER` varchar(255) DEFAULT NULL,"
			+"  `SHIPPING_ADDRESS` varchar(255) DEFAULT NULL,"
			+"  `CUSTOMER_ADDRESS_ID` bigint(20) DEFAULT NULL,"
			+"  `GITF_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`GIFT_ORDER_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakSHOPPING_CART_ATTR_ITEM = "CREATE TABLE `BAK_SHOPPING_CART_ATTR_ITEM` ("
			+"  `SHP_CART_ATTR_ITEM_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `PRODUCT_ATTR_ID` bigint(20) NOT NULL,"
			+"  `SHP_CART_ITEM_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`SHP_CART_ATTR_ITEM_ID`),"
			+"  UNIQUE KEY `SHP_CART_ATTR_ITEM_ID` (`SHP_CART_ATTR_ITEM_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_PROOF = "CREATE TABLE `BAK_PRODUCT_PROOF` ("
			+"  `PRODUCT_PROOF_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DATE_BUYED` datetime DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `SORT_ORDER` int(11) DEFAULT NULL,"
			+"  `RPOOF_IMAGE` varchar(255) DEFAULT NULL,"
			+"  `TITLE` varchar(255) DEFAULT NULL,"
			+"  `BASEDATATYPE_ID` bigint(20) NOT NULL,"
			+"  `PRODUCT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`PRODUCT_PROOF_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakORDER_TOTAL = "CREATE TABLE `BAK_ORDER_TOTAL` ("
			+"  `ORDER_ACCOUNT_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `MODULE` varchar(60) DEFAULT NULL,"
			+"  `CODE` varchar(255) NOT NULL,"
			+"  `ORDER_TOTAL_TYPE` varchar(255) DEFAULT NULL,"
			+"  `ORDER_VALUE_TYPE` varchar(255) DEFAULT NULL,"
			+"  `SORT_ORDER` int(11) NOT NULL,"
			+"  `TEXT` longtext,"
			+"  `TITLE` varchar(255) DEFAULT NULL,"
			+"  `VALUE` decimal(15,4) NOT NULL,"
			+"  `ORDER_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`ORDER_ACCOUNT_ID`),"
			+"  UNIQUE KEY `ORDER_ACCOUNT_ID` (`ORDER_ACCOUNT_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakUSERLOGIN = "CREATE TABLE `BAK_USERLOGIN` ("
			+"  `USERLOGIN_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `IP` varchar(64) DEFAULT NULL,"
			+"  `USER_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`USERLOGIN_ID`),"
			+"  UNIQUE KEY `USERLOGIN_ID` (`USERLOGIN_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakMERCHANT_STORE = "CREATE TABLE `BAK_MERCHANT_STORE` ("
			+"  `MERCHANT_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `STORE_BUSINESSLICENCE` varchar(100) DEFAULT NULL,"
			+"  `STORE_CODE` varchar(100) DEFAULT NULL,"
			+"  `CONTINUESHOPPINGURL` varchar(150) DEFAULT NULL,"
			+"  `CURRENCY_FORMAT_NATIONAL` tinyint(1) DEFAULT NULL,"
			+"  `DOMAIN_NAME` varchar(80) DEFAULT NULL,"
			+"  `STORE_ENINTRODUCE` varchar(2000) DEFAULT NULL,"
			+"  `IN_BUSINESS_SINCE` date DEFAULT NULL,"
			+"  `STORE_INTRODUCE` varchar(2000) DEFAULT NULL,"
			+"  `INVOICE_TEMPLATE` varchar(25) DEFAULT NULL,"
			+"  `STORE_QQ` varchar(50) DEFAULT NULL,"
			+"  `STORE_SEEDED` tinyint(1) DEFAULT NULL,"
			+"  `SEIZEUNITCODE` varchar(5) DEFAULT NULL,"
			+"  `STORE_EMAIL` varchar(100) NOT NULL,"
			+"  `STORE_LOGO` varchar(100) DEFAULT NULL,"
			+"  `STORE_TEMPLATE` varchar(25) DEFAULT NULL,"
			+"  `STORE_ADDRESS` varchar(255) DEFAULT NULL,"
			+"  `STORE_CITY` varchar(100) DEFAULT NULL,"
			+"  `STORE_CONTACTS` varchar(50) DEFAULT NULL,"
			+"  `STORE_FAX` varchar(50) DEFAULT NULL,"
			+"  `STORE_MOBILE` varchar(50) DEFAULT NULL,"
			+"  `STORE_NAME` varchar(100) NOT NULL,"
			+"  `STORE_PHONE` varchar(50) DEFAULT NULL,"
			+"  `STORE_POSTAL_CODE` varchar(15) DEFAULT NULL,"
			+"  `STORE_STATE_PROV` varchar(100) DEFAULT NULL,"
			+"  `USE_CACHE` tinyint(1) DEFAULT NULL,"
			+"  `isQQ` tinyint(1) DEFAULT NULL,"
			+"  `WEIGHTUNITCODE` varchar(5) DEFAULT NULL,"
			+"  `COUNTRY_ID` int(11) DEFAULT NULL,"
			+"  `CURRENCY_ID` bigint(20) NOT NULL,"
			+"  `LANGUAGE_ID` int(11) NOT NULL,"
			+"  `ZONE_ID` bigint(20) DEFAULT NULL,"
			+"  `STOREWEB` varchar(150) DEFAULT NULL,"
			+"  `SALES_EMAIL` varchar(100) DEFAULT NULL,"
			+"  `kefu` varchar(255) DEFAULT NULL,"
			+"  `xiaoshou` varchar(255) DEFAULT NULL,"
			+"  `MCHTRANKPROFILE_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`MERCHANT_ID`),"
			+"  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPERMISSION = "CREATE TABLE `BAK_PERMISSION` ("
			+"  `PERMISSION_ID` int(11) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `PERMISSION_NAME` varchar(255) NOT NULL,"
			+"  PRIMARY KEY (`PERMISSION_ID`),"
			+"  UNIQUE KEY `PERMISSION_ID` (`PERMISSION_ID`),"
			+"  UNIQUE KEY `PERMISSION_NAME` (`PERMISSION_NAME`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakMERCHANT_LOG = "CREATE TABLE `BAK_MERCHANT_LOG` ("
			+"  `MERCHANT_LOG_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `LOG` longtext,"
			+"  `MODULE` varchar(25) DEFAULT NULL,"
			+"  `MERCHANT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`MERCHANT_LOG_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakCOUNTRY = "CREATE TABLE `BAK_COUNTRY` ("
			+"  `COUNTRY_ID` int(11) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `COUNTRY_ISOCODE` varchar(255) NOT NULL,"
			+"  `COUNTRY_SUPPORTED` tinyint(1) DEFAULT NULL,"
			+"  `GEOZONE_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`COUNTRY_ID`),"
			+"  UNIQUE KEY `COUNTRY_ISOCODE` (`COUNTRY_ISOCODE`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_OPTION = "CREATE TABLE `BAK_PRODUCT_OPTION` ("
			+"  `PRODUCT_OPTION_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_OPTION_CODE` varchar(255) NOT NULL,"
			+"  `PRODUCT_OPTION_SORT_ORD` int(11) DEFAULT NULL,"
			+"  `PRODUCT_OPTION_TYPE` varchar(10) DEFAULT NULL,"
			+"  `PRODUCT_OPTION_READ` tinyint(1) DEFAULT NULL,"
			+"  `MERCHANT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`PRODUCT_OPTION_ID`),"
			+"  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`,`PRODUCT_OPTION_CODE`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakMANUFACTURER = "CREATE TABLE `BAK_MANUFACTURER` ("
			+"  `MANUFACTURER_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `MANUFACTURER_IMAGE` varchar(255) DEFAULT NULL,"
			+"  `SRC_MERCHANT_ID` bigint(20) DEFAULT NULL,"
			+"  `SORT_ORDER` int(11) DEFAULT NULL,"
			+"  `MERCHANT_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`MANUFACTURER_ID`),"
			+"  UNIQUE KEY `MANUFACTURER_ID` (`MANUFACTURER_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakSPECIAL_CONFIGURATION = "CREATE TABLE `BAK_SPECIAL_CONFIGURATION` ("
			+"  `SPECIAL_CONFIG_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `CONFIG_KEY` varchar(255) DEFAULT NULL,"
			+"  `VALUE` varchar(255) DEFAULT NULL,"
			+"  PRIMARY KEY (`SPECIAL_CONFIG_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakTAX_RATE_DESCRIPTION = "CREATE TABLE `BAK_TAX_RATE_DESCRIPTION` ("
			+"  `DESCRIPTION_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `NAME` varchar(120) NOT NULL,"
			+"  `TITLE` varchar(100) DEFAULT NULL,"
			+"  `LANGUAGE_ID` int(11) NOT NULL,"
			+"  `TAX_RATE_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`DESCRIPTION_ID`),"
			+"  UNIQUE KEY `TAX_RATE_ID` (`TAX_RATE_ID`,`LANGUAGE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakORDERS = "CREATE TABLE `BAK_ORDERS` ("
			+"  `ORDER_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `BILLING_STREET_ADDRESS` varchar(256) DEFAULT NULL,"
			+"  `BILLING_CITY` varchar(100) DEFAULT NULL,"
			+"  `BILLING_COMPANY` varchar(500) DEFAULT NULL,"
			+"  `BANK_ACCOUNT` varchar(500) DEFAULT NULL,"
			+"  `BANK_NANE` varchar(500) DEFAULT NULL,"
			+"  `COMPANY` varchar(500) DEFAULT NULL,"
			+"  `COMPANY_ADDRESS` varchar(500) DEFAULT NULL,"
			+"  `COMPANY_TELEPHONE` varchar(500) DEFAULT NULL,"
			+"  `TAX_NUMBER` varchar(500) DEFAULT NULL,"
			+"  `type` int(11) DEFAULT NULL,"
			+"  `BILLING_POSTCODE` varchar(20) DEFAULT NULL,"
			+"  `BILLING_TELEPHONE` varchar(32) DEFAULT NULL,"
			+"  `BILLING_USERNAME` varchar(255) DEFAULT NULL,"
			+"  `CHANNEL` varchar(255) DEFAULT NULL,"
			+"  `CARD_TYPE` varchar(255) DEFAULT NULL,"
			+"  `CC_CVV` varchar(255) DEFAULT NULL,"
			+"  `CC_EXPIRES` varchar(255) DEFAULT NULL,"
			+"  `CC_NUMBER` varchar(255) DEFAULT NULL,"
			+"  `CC_OWNER` varchar(255) DEFAULT NULL,"
			+"  `CURRENCY_VALUE` decimal(19,2) DEFAULT NULL,"
			+"  `CUSTOMER_EMAIL_ADDRESS` varchar(50) NOT NULL,"
			+"  `CUSTOMER_ID` bigint(20) DEFAULT NULL,"
			+"  `DATE_PURCHASED` datetime DEFAULT NULL,"
			+"  `IP_ADDRESS` varchar(255) DEFAULT NULL,"
			+"  `INVOICE_STREET_ADDRESS` varchar(256) DEFAULT NULL,"
			+"  `INVOICE_CITY` varchar(100) DEFAULT NULL,"
			+"  `INVOICE_COMPANY` varchar(500) DEFAULT NULL,"
			+"  `INVOICE_POSTCODE` varchar(20) DEFAULT NULL,"
			+"  `INVOICE_TELEPHONE` varchar(32) DEFAULT NULL,"
			+"  `INVOICE_USERNAME` varchar(255) DEFAULT NULL,"
			+"  `LAST_MODIFIED` datetime DEFAULT NULL,"
			+"  `LOCALE` varchar(255) DEFAULT NULL,"
			+"  `ORDER_DATE_FINISHED` datetime DEFAULT NULL,"
			+"  `ORDER_TYPE` varchar(255) DEFAULT NULL,"
			+"  `PAYMENT_MODULE_CODE` varchar(255) DEFAULT NULL,"
			+"  `PAYMENT_TYPE` varchar(255) DEFAULT NULL,"
			+"  `SHIPPING_MODULE_CODE` varchar(255) DEFAULT NULL,"
			+"  `ORDER_STATUS` varchar(255) DEFAULT NULL,"
			+"  `ORDER_TOTAL` decimal(19,2) DEFAULT NULL,"
			+"  `BILLING_COUNTRY_ID` int(11) NOT NULL,"
			+"  `BILLING_ZONE_ID` bigint(20) DEFAULT NULL,"
			+"  `CURRENCY_ID` bigint(20) DEFAULT NULL,"
			+"  `INVOICE_COUNTRY_ID` int(11) NOT NULL,"
			+"  `INVOICE_ZONE_ID` bigint(20) DEFAULT NULL,"
			+"  `STORE_NAME` varchar(255) DEFAULT NULL,"
			+"  `PROCESS_TYPE` varchar(255) DEFAULT NULL,"
			+"  PRIMARY KEY (`ORDER_ID`),"
			+"  UNIQUE KEY `ORDER_ID` (`ORDER_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_PRICE_DESCRIPTION = "CREATE TABLE `BAK_PRODUCT_PRICE_DESCRIPTION` ("
			+"  `DESCRIPTION_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `NAME` varchar(120) NOT NULL,"
			+"  `TITLE` varchar(100) DEFAULT NULL,"
			+"  `LANGUAGE_ID` int(11) NOT NULL,"
			+"  `PRODUCT_PRICE_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`DESCRIPTION_ID`),"
			+"  UNIQUE KEY `PRODUCT_PRICE_ID` (`PRODUCT_PRICE_ID`,`LANGUAGE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakZONE_DESCRIPTION = "CREATE TABLE `BAK_ZONE_DESCRIPTION` ("
			+"  `DESCRIPTION_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `NAME` varchar(120) NOT NULL,"
			+"  `TITLE` varchar(100) DEFAULT NULL,"
			+"  `LANGUAGE_ID` int(11) NOT NULL,"
			+"  `ZONE_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`DESCRIPTION_ID`),"
			+"  UNIQUE KEY `ZONE_ID` (`ZONE_ID`,`LANGUAGE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakUSER_SEGMENT = "CREATE TABLE `BAK_USER_SEGMENT` ("
			+"  `USER_SEGMENT_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `DISCRIPTION_EN` varchar(2000) NOT NULL,"
			+"  `DISCRIPTION_ZH` varchar(2000) NOT NULL,"
			+"  `NAME` varchar(80) NOT NULL,"
			+"  `FOR_BUYER` tinyint(1) DEFAULT NULL,"
			+"  `FOR_SELLER` tinyint(1) DEFAULT NULL,"
			+"  PRIMARY KEY (`USER_SEGMENT_ID`),"
			+"  UNIQUE KEY `USER_SEGMENT_ID` (`USER_SEGMENT_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakFILE_HISTORY = "CREATE TABLE `BAK_FILE_HISTORY` ("
			+"  `FILE_HISTORY_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `ACCOUNTED_DATE` datetime DEFAULT NULL,"
			+"  `DATE_ADDED` datetime NOT NULL,"
			+"  `DATE_DELETED` datetime DEFAULT NULL,"
			+"  `DOWNLOAD_COUNT` int(11) NOT NULL,"
			+"  `FILE_ID` bigint(20) DEFAULT NULL,"
			+"  `FILESIZE` int(11) NOT NULL,"
			+"  `MERCHANT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`FILE_HISTORY_ID`),"
			+"  UNIQUE KEY `FILE_HISTORY_ID` (`FILE_HISTORY_ID`),"
			+"  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`,`FILE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakORDER_ACCOUNT_PRODUCT = "CREATE TABLE `BAK_ORDER_ACCOUNT_PRODUCT` ("
			+"  `ORDER_ACCOUNT_PRODUCT_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `ORDER_ACCOUNT_PRODUCT_ACCNT_DT` date DEFAULT NULL,"
			+"  `ORDER_ACCOUNT_PRODUCT_END_DT` date DEFAULT NULL,"
			+"  `ORDER_ACCOUNT_PRODUCT_EOT` datetime DEFAULT NULL,"
			+"  `ORDER_ACCOUNT_PRODUCT_L_ST_DT` datetime DEFAULT NULL,"
			+"  `ORDER_ACCOUNT_PRODUCT_L_TRX_ST` int(11) NOT NULL,"
			+"  `ORDER_ACCOUNT_PRODUCT_PM_FR_TY` int(11) NOT NULL,"
			+"  `ORDER_ACCOUNT_PRODUCT_ST_DT` date NOT NULL,"
			+"  `ORDER_ACCOUNT_PRODUCT_STATUS` int(11) NOT NULL,"
			+"  `ORDER_ACCOUNT_ID` bigint(20) NOT NULL,"
			+"  `ORDER_PRODUCT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`ORDER_ACCOUNT_PRODUCT_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakCUSTOMER_INVOICE = "CREATE TABLE `BAK_CUSTOMER_INVOICE` ("
			+"  `CUSTOMER_INVOICE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `BANK_ACCOUNT` varchar(500) DEFAULT NULL,"
			+"  `BANK_NANE` varchar(500) DEFAULT NULL,"
			+"  `COMPANY` varchar(500) DEFAULT NULL,"
			+"  `COMPANY_ADDRESS` varchar(500) DEFAULT NULL,"
			+"  `COMPANY_TELEPHONE` varchar(500) DEFAULT NULL,"
			+"  `MEMO` varchar(500) DEFAULT NULL,"
			+"  `TAX_NUMBER` varchar(500) DEFAULT NULL,"
			+"  `type` int(11) DEFAULT NULL,"
			+"  `CUSTOMER_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`CUSTOMER_INVOICE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakCOMMON_SOFTWARE = "CREATE TABLE `BAK_COMMON_SOFTWARE` ("
			+"  `COMMON_SOFTWARE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `BRIEF` varchar(1000) DEFAULT NULL,"
			+"  `CLICKNUM` int(11) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `FILENAME` varchar(100) DEFAULT NULL,"
			+"  `ICONNAME` varchar(100) DEFAULT NULL,"
			+"  `NAME` varchar(100) DEFAULT NULL,"
			+"  `SIZE` varchar(20) DEFAULT NULL,"
			+"  `TORDER` int(11) DEFAULT NULL,"
			+"  `TYPE` int(11) DEFAULT NULL,"
			+"  PRIMARY KEY (`COMMON_SOFTWARE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakMERCHANT_CONFIGURATION = "CREATE TABLE `BAK_MERCHANT_CONFIGURATION` ("
			+"  `MERCHANT_CONFIG_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `CONFIG_KEY` varchar(255) DEFAULT NULL,"
			+"  `TYPE` varchar(255) DEFAULT NULL,"
			+"  `VALUE` longtext,"
			+"  `MERCHANT_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`MERCHANT_CONFIG_ID`),"
			+"  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`,`CONFIG_KEY`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_DESCRIPTION = "CREATE TABLE `BAK_PRODUCT_DESCRIPTION` ("
			+"  `DESCRIPTION_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `NAME` varchar(512) NOT NULL,"
			+"  `TITLE` varchar(100) DEFAULT NULL,"
			+"  `EN_NAME` varchar(512) DEFAULT NULL,"
			+"  `META_DESCRIPTION` varchar(1000) DEFAULT NULL,"
			+"  `META_KEYWORDS` varchar(255) DEFAULT NULL,"
			+"  `META_TITLE` varchar(255) DEFAULT NULL,"
			+"  `METHOD_DESCRIPTION` longtext,"
			+"  `DOWNLOAD_LNK` varchar(255) DEFAULT NULL,"
			+"  `PRODUCT_HIGHLIGHT` varchar(255) DEFAULT NULL,"
			+"  `SEF_URL` varchar(255) DEFAULT NULL,"
			+"  `SIMPLE_DESCRIPTION` varchar(1000) DEFAULT NULL,"
			+"  `STORECOND_DESCRIPTION` varchar(1000) DEFAULT NULL,"
			+"  `TEST_DESCRIPTION` longtext,"
			+"  `LANGUAGE_ID` int(11) NOT NULL,"
			+"  `PRODUCT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`DESCRIPTION_ID`),"
			+"  UNIQUE KEY `PRODUCT_ID` (`PRODUCT_ID`,`LANGUAGE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakBASEDATA_TYPE = "CREATE TABLE `BAK_BASEDATA_TYPE` ("
			+"  `BASEDATA_TYPE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `CODE` varchar(100) DEFAULT NULL,"
			+"  `NAME` varchar(255) DEFAULT NULL,"
			+"  `SORT_ORDER` int(11) DEFAULT NULL,"
			+"  `TYPE` varchar(100) DEFAULT NULL,"
			+"  `VALUE` varchar(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`BASEDATA_TYPE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_OPTION_VALUE_DESCRIPTION = "CREATE TABLE `BAK_PRODUCT_OPTION_VALUE_DESCRIPTION` ("
			+"  `DESCRIPTION_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `NAME` varchar(120) NOT NULL,"
			+"  `TITLE` varchar(100) DEFAULT NULL,"
			+"  `LANGUAGE_ID` int(11) NOT NULL,"
			+"  `PRODUCT_OPTION_VALUE_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`DESCRIPTION_ID`),"
			+"  UNIQUE KEY `PRODUCT_OPTION_VALUE_ID` (`PRODUCT_OPTION_VALUE_ID`,`LANGUAGE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakBRAND_DISCOUNT = "CREATE TABLE `BAK_BRAND_DISCOUNT` ("
			+"  `BRAND_DISCOUNT_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `BRAND_ID` bigint(20) NOT NULL,"
			+"  `STORE_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`BRAND_DISCOUNT_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakCUSTOMER_IMAGE = "CREATE TABLE `BAK_CUSTOMER_IMAGE` ("
			+"  `CUSTOMER_IMAGE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `CUSTOMER_IMAGE` varchar(255) DEFAULT NULL,"
			+"  `DEFAULT_IMAGE` tinyint(1) DEFAULT NULL,"
			+"  `IMAGE_CROP` tinyint(1) DEFAULT NULL,"
			+"  `IMAGE_TYPE` int(11) DEFAULT NULL,"
			+"  `REMARK` varchar(255) DEFAULT NULL,"
			+"  `CUSTOMER_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`CUSTOMER_IMAGE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_PRICE = "CREATE TABLE `BAK_PRODUCT_PRICE` ("
			+"  `PRODUCT_PRICE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_PRICE_CODE` varchar(255) NOT NULL,"
			+"  `DEFAULT_PRICE` tinyint(1) DEFAULT NULL,"
			+"  `PRODUCT_PRICE_AMOUNT` decimal(19,2) NOT NULL,"
			+"  `PRODUCT_PRICE_PERIOD` varchar(255) DEFAULT NULL,"
			+"  `PRODUCT_PRICE_SPECIAL_AMOUNT` decimal(19,2) DEFAULT NULL,"
			+"  `PRODUCT_PRICE_SPECIAL_END_DATE` date DEFAULT NULL,"
			+"  `PRODUCT_PRICE_SPECIAL_ST_DATE` date DEFAULT NULL,"
			+"  `PRODUCT_PRICE_STOCK_AMOUNT` int(11) DEFAULT NULL,"
			+"  `PRODUCT_PRICE_TYPE` varchar(20) DEFAULT NULL,"
			+"  `PRODUCT_AVAIL_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`PRODUCT_PRICE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_REVIEW = "CREATE TABLE `BAK_PRODUCT_REVIEW` ("
			+"  `PRODUCT_REVIEW_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `REVIEW_DATE` datetime DEFAULT NULL,"
			+"  `REVIEWS_RATING` double DEFAULT NULL,"
			+"  `REVIEWS_READ` bigint(20) DEFAULT NULL,"
			+"  `STATUS` int(11) DEFAULT NULL,"
			+"  `CUSTOMERS_ID` bigint(20) DEFAULT NULL,"
			+"  `ORDER_PRODUCT_ID` bigint(20) DEFAULT NULL,"
			+"  `PRODUCT_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`PRODUCT_REVIEW_ID`),"
			+"  UNIQUE KEY `PRODUCT_REVIEW_ID` (`PRODUCT_REVIEW_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_TYPE = "CREATE TABLE `BAK_PRODUCT_TYPE` ("
			+"  `PRODUCT_TYPE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRD_TYPE_ADD_TO_CART` tinyint(1) DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `PRD_TYPE_CODE` varchar(255) DEFAULT NULL,"
			+"  PRIMARY KEY (`PRODUCT_TYPE_ID`),"
			+"  UNIQUE KEY `PRODUCT_TYPE_ID` (`PRODUCT_TYPE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakCATEGORY_DESCRIPTION = "CREATE TABLE `BAK_CATEGORY_DESCRIPTION` ("
			+"  `DESCRIPTION_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `NAME` varchar(120) NOT NULL,"
			+"  `TITLE` varchar(100) DEFAULT NULL,"
			+"  `CATEGORY_HIGHLIGHT` varchar(255) DEFAULT NULL,"
			+"  `META_DESCRIPTION` varchar(255) DEFAULT NULL,"
			+"  `META_KEYWORDS` varchar(255) DEFAULT NULL,"
			+"  `META_TITLE` varchar(120) DEFAULT NULL,"
			+"  `SEF_URL` varchar(120) DEFAULT NULL,"
			+"  `LANGUAGE_ID` int(11) NOT NULL,"
			+"  `CATEGORY_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`DESCRIPTION_ID`),"
			+"  UNIQUE KEY `CATEGORY_ID` (`CATEGORY_ID`,`LANGUAGE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakORDER_PRODUCT = "CREATE TABLE `BAK_ORDER_PRODUCT` ("
			+"  `ORDER_PRODUCT_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `ONETIME_CHARGE` decimal(19,2) NOT NULL,"
			+"  `PRICE` decimal(19,2) NOT NULL,"
			+"  `PRODUCT_ENNAME` varchar(512) DEFAULT NULL,"
			+"  `PRODUCT_ID` bigint(20) DEFAULT NULL,"
			+"  `PRODUCT_NAME` varchar(120) NOT NULL,"
			+"  `PRODUCT_QUANTITY` int(11) DEFAULT NULL,"
			+"  `QUALITY_SCORE` int(11) DEFAULT NULL,"
			+"  `PRODUCT_SKU` varchar(255) DEFAULT NULL,"
			+"  `SPECS` varchar(255) NOT NULL,"
			+"  `SUBORDER_ID` bigint(20) NOT NULL,"
			+"  `PRODUCT_CODE` varchar(255) DEFAULT NULL,"
			+"  `FINAL_PRICE` decimal(19,2) DEFAULT NULL,"
			+"  `FINAL_TOTAL` decimal(19,2) DEFAULT NULL,"
			+"  `PRODUCT_SPEC_ID` bigint(20) DEFAULT NULL,"
			+"  `PRODUCT_IMAGE` varchar(255) DEFAULT NULL,"
			+"  PRIMARY KEY (`ORDER_PRODUCT_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakORDER_PRODUCT_ATTRIBUTE = "CREATE TABLE `BAK_ORDER_PRODUCT_ATTRIBUTE` ("
			+"  `ORDER_PRODUCT_ATTRIBUTE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_ATTRIBUTE_IS_FREE` tinyint(1) NOT NULL,"
			+"  `PRODUCT_ATTRIBUTE_NAME` varchar(255) DEFAULT NULL,"
			+"  `PRODUCT_ATTRIBUTE_PRICE` decimal(15,4) NOT NULL,"
			+"  `PRODUCT_ATTRIBUTE_VAL_NAME` varchar(255) DEFAULT NULL,"
			+"  `PRODUCT_ATTRIBUTE_WEIGHT` decimal(15,4) DEFAULT NULL,"
			+"  `PRODUCT_OPTION_ID` bigint(20) NOT NULL,"
			+"  `PRODUCT_OPTION_VALUE_ID` bigint(20) NOT NULL,"
			+"  `ORDER_PRODUCT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`ORDER_PRODUCT_ATTRIBUTE_ID`),"
			+"  UNIQUE KEY `ORDER_PRODUCT_ATTRIBUTE_ID` (`ORDER_PRODUCT_ATTRIBUTE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakTAX_CLASS = "CREATE TABLE `BAK_TAX_CLASS` ("
			+"  `TAX_CLASS_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `TAX_CLASS_CODE` varchar(10) NOT NULL,"
			+"  `TAX_CLASS_TITLE` varchar(32) NOT NULL,"
			+"  `MERCHANT_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`TAX_CLASS_ID`),"
			+"  UNIQUE KEY `TAX_CLASS_ID` (`TAX_CLASS_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPERMISSION_GROUP = "CREATE TABLE `BAK_PERMISSION_GROUP` ("
			+"  `PERMISSION_ID` int(11) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `GROUP_ID` int(11) NOT NULL"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_OPTION_VALUE = "CREATE TABLE `BAK_PRODUCT_OPTION_VALUE` ("
			+"  `PRODUCT_OPTION_VALUE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_OPTION_VAL_CODE` varchar(255) NOT NULL,"
			+"  `PRODUCT_OPT_FOR_DISP` tinyint(1) DEFAULT NULL,"
			+"  `PRODUCT_OPT_VAL_IMAGE` varchar(255) DEFAULT NULL,"
			+"  `PRODUCT_OPT_VAL_SORT_ORD` int(11) DEFAULT NULL,"
			+"  `MERCHANT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`PRODUCT_OPTION_VALUE_ID`),"
			+"  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`,`PRODUCT_OPTION_VAL_CODE`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakSM_TRANSACTION = "CREATE TABLE `BAK_SM_TRANSACTION` ("
			+"  `TRANSACTION_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `AMOUNT` decimal(19,2) DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `DETAILS` longtext,"
			+"  `PAYMENT_TYPE` varchar(255) DEFAULT NULL,"
			+"  `TRANSACTION_DATE` datetime DEFAULT NULL,"
			+"  `TRANSACTION_TYPE` varchar(255) DEFAULT NULL,"
			+"  `ORDER_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`TRANSACTION_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakUSER = "CREATE TABLE `BAK_USER` ("
			+"  `USER_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `ACTIVE` tinyint(1) DEFAULT NULL,"
			+"  `ADMIN_EMAIL` varchar(255) NOT NULL,"
			+"  `ADMIN_NAME` varchar(100) NOT NULL,"
			+"  `ADMIN_PASSWORD` varchar(50) NOT NULL,"
			+"  `ADMIN_A1` varchar(255) DEFAULT NULL,"
			+"  `ADMIN_A2` varchar(255) DEFAULT NULL,"
			+"  `ADMIN_A3` varchar(255) DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `ADMIN_FIRST_NAME` varchar(255) DEFAULT NULL,"
			+"  `LAST_ACCESS` datetime DEFAULT NULL,"
			+"  `ADMIN_LAST_NAME` varchar(255) DEFAULT NULL,"
			+"  `LOGIN_ACCESS` datetime DEFAULT NULL,"
			+"  `ADMIN_Q1` varchar(255) DEFAULT NULL,"
			+"  `ADMIN_Q2` varchar(255) DEFAULT NULL,"
			+"  `ADMIN_Q3` varchar(255) DEFAULT NULL,"
			+"  `LANGUAGE_ID` int(11) DEFAULT NULL,"
			+"  `MERCHANT_ID` bigint(20) NOT NULL,"
			+"  `ADMIN_MOBILE` varchar(50) NOT NULL,"
			+"  PRIMARY KEY (`USER_ID`),"
			+"  UNIQUE KEY `USER_ID` (`USER_ID`),"
			+"  UNIQUE KEY `ADMIN_NAME` (`ADMIN_NAME`),"
			+"  UNIQUE KEY `ADMIN_MOBILE_UNIQUE` (`ADMIN_MOBILE`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakPRODUCT_CERTIFICATE = "CREATE TABLE `BAK_PRODUCT_CERTIFICATE` ("
			+"  `PRODUCT_CERTIFICATE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `BASEINFO` varchar(255) DEFAULT NULL,"
			+"  `CERTIFICATE_IMAGE` varchar(255) DEFAULT NULL,"
			+"  `DESCRIPTION` longtext,"
			+"  `DOC_URL` varchar(1000) DEFAULT NULL,"
			+"  `SORT_ORDER` int(11) DEFAULT NULL,"
			+"  `TITLE` varchar(1000) DEFAULT NULL,"
			+"  `BASEDATATYPE_ID` bigint(20) NOT NULL,"
			+"  `PRODUCT_ID` bigint(20) NOT NULL,"
			+"  PRIMARY KEY (`PRODUCT_CERTIFICATE_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";
	
	protected static final String ddlCreateBakTAX_RATE = "CREATE TABLE `BAK_TAX_RATE` ("
			+"  `TAX_RATE_ID` bigint(20) NOT NULL,"
			+"  `REC_DELETED_TIME` datetime DEFAULT NULL,"
			+"  `PRODUCT_AUDIT` int(11) DEFAULT NULL,"
			+"  `DATE_CREATED` datetime DEFAULT NULL,"
			+"  `DATE_MODIFIED` datetime DEFAULT NULL,"
			+"  `UPDT_ID` varchar(20) DEFAULT NULL,"
			+"  `TAX_CODE` varchar(255) NOT NULL,"
			+"  `PIGGYBACK` tinyint(1) DEFAULT NULL,"
			+"  `STORE_STATE_PROV` varchar(100) DEFAULT NULL,"
			+"  `TAX_PRIORITY` int(11) DEFAULT NULL,"
			+"  `TAX_RATE` decimal(7,4) NOT NULL,"
			+"  `COUNTRY_ID` int(11) NOT NULL,"
			+"  `MERCHANT_ID` bigint(20) NOT NULL,"
			+"  `PARENT_ID` bigint(20) DEFAULT NULL,"
			+"  `TAX_CLASS_ID` bigint(20) NOT NULL,"
			+"  `ZONE_ID` bigint(20) DEFAULT NULL,"
			+"  PRIMARY KEY (`TAX_RATE_ID`),"
			+"  UNIQUE KEY `TAX_CODE` (`TAX_CODE`,`MERCHANT_ID`)"
			+") ENGINE=InnoDB DEFAULT CHARSET=utf8";

	public static final Map<String, String> tableDdlMap = new HashMap<String, String>();
	static {
		tableDdlMap.put("CUSTOMER_OPTION",ddlCreateBakCUSTOMER_OPTION); 
		tableDdlMap.put("PRODUCT_SELFPROOF",ddlCreateBakPRODUCT_SELFPROOF); 
		tableDdlMap.put("CUSTOMER",ddlCreateBakCUSTOMER); 
		tableDdlMap.put("MERCHANT_LANGUAGE",ddlCreateBakMERCHANT_LANGUAGE); 
		tableDdlMap.put("PARCEL",ddlCreateBakPARCEL); 
		tableDdlMap.put("PRODUCT_REVIEW_DESCRIPTION",ddlCreateBakPRODUCT_REVIEW_DESCRIPTION); 
		tableDdlMap.put("USERGRADE",ddlCreateBakUSERGRADE); 
		tableDdlMap.put("MERCHANT_RANK",ddlCreateBakMERCHANT_RANK); 
		tableDdlMap.put("SM_SEQUENCER",ddlCreateBakSM_SEQUENCER); 
		tableDdlMap.put("SHOPPING_CART_ITEM",ddlCreateBakSHOPPING_CART_ITEM); 
		tableDdlMap.put("GIFTS",ddlCreateBakGIFTS); 
		tableDdlMap.put("PRODUCT_IMAGE",ddlCreateBakPRODUCT_IMAGE); 
		tableDdlMap.put("PRODUCT_OPTION_DESC",ddlCreateBakPRODUCT_OPTION_DESC); 
		tableDdlMap.put("DELIVERYCOMPNY",ddlCreateBakDELIVERYCOMPNY); 
		tableDdlMap.put("PRODUCT_LITERATURE_PATH",ddlCreateBakPRODUCT_LITERATURE_PATH); 
		tableDdlMap.put("MANUFACTURER_DESCRIPTION",ddlCreateBakMANUFACTURER_DESCRIPTION); 
		tableDdlMap.put("USER_GROUP",ddlCreateBakUSER_GROUP); 
		tableDdlMap.put("CUSTOMER_ADDRESS",ddlCreateBakCUSTOMER_ADDRESS); 
		tableDdlMap.put("NEWS_CONTENT",ddlCreateBakNEWS_CONTENT); 
		tableDdlMap.put("MERCHANT_RANK_PROFILE",ddlCreateBakMERCHANT_RANK_PROFILE); 
		tableDdlMap.put("PRODUCT_AVAILABILITY",ddlCreateBakPRODUCT_AVAILABILITY); 
		tableDdlMap.put("CONTENT",ddlCreateBakCONTENT); 
		tableDdlMap.put("CATEGORY",ddlCreateBakCATEGORY); 
		tableDdlMap.put("SM_GROUP",ddlCreateBakSM_GROUP); 
		tableDdlMap.put("PRODUCT_THIRDPROOF",ddlCreateBakPRODUCT_THIRDPROOF); 
		tableDdlMap.put("LANGUAGE",ddlCreateBakLANGUAGE); 
		tableDdlMap.put("SHOPPING_CART",ddlCreateBakSHOPPING_CART); 
		tableDdlMap.put("COUNTRY_DESCRIPTION",ddlCreateBakCOUNTRY_DESCRIPTION); 
		tableDdlMap.put("CUSTOMER_OPTION_SET",ddlCreateBakCUSTOMER_OPTION_SET); 
		tableDdlMap.put("ORDER_PRODUCT_PRICE",ddlCreateBakORDER_PRODUCT_PRICE); 
		tableDdlMap.put("CUSTOMER_ATTRIBUTE",ddlCreateBakCUSTOMER_ATTRIBUTE); 
		tableDdlMap.put("ORDER_ACCOUNT",ddlCreateBakORDER_ACCOUNT); 
		tableDdlMap.put("CUSTOMER_OPTION_DESC",ddlCreateBakCUSTOMER_OPTION_DESC); 
		tableDdlMap.put("PRODUCT_DIGITAL",ddlCreateBakPRODUCT_DIGITAL); 
		tableDdlMap.put("CURRENCY",ddlCreateBakCURRENCY); 
		tableDdlMap.put("PRODUCT_CATEGORY",ddlCreateBakPRODUCT_CATEGORY); 
		tableDdlMap.put("ORDER_PRODUCT_DOWNLOAD",ddlCreateBakORDER_PRODUCT_DOWNLOAD); 
		tableDdlMap.put("PRODUCT_BROWSW",ddlCreateBakPRODUCT_BROWSW); 
		tableDdlMap.put("PRODUCT_IMAGE_DESCRIPTION",ddlCreateBakPRODUCT_IMAGE_DESCRIPTION); 
		tableDdlMap.put("MEMBER_POINTS",ddlCreateBakMEMBER_POINTS); 
		tableDdlMap.put("SYSTEM_NOTIFICATION",ddlCreateBakSYSTEM_NOTIFICATION); 
		tableDdlMap.put("SUBORDERS",ddlCreateBakSUBORDERS); 
		tableDdlMap.put("PRODUCT",ddlCreateBakPRODUCT); 
		tableDdlMap.put("MODULE_CONFIGURATION",ddlCreateBakMODULE_CONFIGURATION); 
		tableDdlMap.put("ZONE",ddlCreateBakZONE); 
		tableDdlMap.put("CUSTOMER_GROUP",ddlCreateBakCUSTOMER_GROUP); 
		tableDdlMap.put("GEOZONE",ddlCreateBakGEOZONE); 
		tableDdlMap.put("SYSTEM_CONFIGURATION",ddlCreateBakSYSTEM_CONFIGURATION); 
		tableDdlMap.put("ORDER_STATUS_HISTORY",ddlCreateBakORDER_STATUS_HISTORY); 
		tableDdlMap.put("PRODUCT_ATTRIBUTE",ddlCreateBakPRODUCT_ATTRIBUTE); 
		tableDdlMap.put("AUTH_BRAND",ddlCreateBakAUTH_BRAND); 
		tableDdlMap.put("CONTENT_DESCRIPTION",ddlCreateBakCONTENT_DESCRIPTION); 
		tableDdlMap.put("PRODUCT_RELATIONSHIP",ddlCreateBakPRODUCT_RELATIONSHIP); 
		tableDdlMap.put("AUTHORIZATION",ddlCreateBakAUTHORIZATION); 
		tableDdlMap.put("CUSTOMER_OPT_VAL_DESCRIPTION",ddlCreateBakCUSTOMER_OPT_VAL_DESCRIPTION); 
		tableDdlMap.put("GEOZONE_DESCRIPTION",ddlCreateBakGEOZONE_DESCRIPTION); 
		tableDdlMap.put("CUSTOMER_OPTION_VALUE",ddlCreateBakCUSTOMER_OPTION_VALUE); 
		tableDdlMap.put("BRAND_USERSEGMENT_DISCOUNT",ddlCreateBakBRAND_USERSEGMENT_DISCOUNT); 
		tableDdlMap.put("GIFT_ORDER",ddlCreateBakGIFT_ORDER); 
		tableDdlMap.put("SHOPPING_CART_ATTR_ITEM",ddlCreateBakSHOPPING_CART_ATTR_ITEM); 
		tableDdlMap.put("PRODUCT_PROOF",ddlCreateBakPRODUCT_PROOF); 
		tableDdlMap.put("ORDER_TOTAL",ddlCreateBakORDER_TOTAL); 
		tableDdlMap.put("USERLOGIN",ddlCreateBakUSERLOGIN); 
		tableDdlMap.put("MERCHANT_STORE",ddlCreateBakMERCHANT_STORE); 
		tableDdlMap.put("PERMISSION",ddlCreateBakPERMISSION); 
		tableDdlMap.put("MERCHANT_LOG",ddlCreateBakMERCHANT_LOG); 
		tableDdlMap.put("COUNTRY",ddlCreateBakCOUNTRY); 
		tableDdlMap.put("PRODUCT_OPTION",ddlCreateBakPRODUCT_OPTION); 
		tableDdlMap.put("MANUFACTURER",ddlCreateBakMANUFACTURER); 
		tableDdlMap.put("SPECIAL_CONFIGURATION",ddlCreateBakSPECIAL_CONFIGURATION); 
		tableDdlMap.put("TAX_RATE_DESCRIPTION",ddlCreateBakTAX_RATE_DESCRIPTION); 
		tableDdlMap.put("ORDERS",ddlCreateBakORDERS); 
		tableDdlMap.put("PRODUCT_PRICE_DESCRIPTION",ddlCreateBakPRODUCT_PRICE_DESCRIPTION); 
		tableDdlMap.put("ZONE_DESCRIPTION",ddlCreateBakZONE_DESCRIPTION); 
		tableDdlMap.put("USER_SEGMENT",ddlCreateBakUSER_SEGMENT); 
		tableDdlMap.put("FILE_HISTORY",ddlCreateBakFILE_HISTORY); 
		tableDdlMap.put("ORDER_ACCOUNT_PRODUCT",ddlCreateBakORDER_ACCOUNT_PRODUCT); 
		tableDdlMap.put("CUSTOMER_INVOICE",ddlCreateBakCUSTOMER_INVOICE); 
		tableDdlMap.put("COMMON_SOFTWARE",ddlCreateBakCOMMON_SOFTWARE); 
		tableDdlMap.put("MERCHANT_CONFIGURATION",ddlCreateBakMERCHANT_CONFIGURATION); 
		tableDdlMap.put("PRODUCT_DESCRIPTION",ddlCreateBakPRODUCT_DESCRIPTION); 
		tableDdlMap.put("BASEDATA_TYPE",ddlCreateBakBASEDATA_TYPE); 
		tableDdlMap.put("PRODUCT_OPTION_VALUE_DESCRIPTION",ddlCreateBakPRODUCT_OPTION_VALUE_DESCRIPTION); 
		tableDdlMap.put("BRAND_DISCOUNT",ddlCreateBakBRAND_DISCOUNT); 
		tableDdlMap.put("CUSTOMER_IMAGE",ddlCreateBakCUSTOMER_IMAGE); 
		tableDdlMap.put("PRODUCT_PRICE",ddlCreateBakPRODUCT_PRICE); 
		tableDdlMap.put("PRODUCT_REVIEW",ddlCreateBakPRODUCT_REVIEW); 
		tableDdlMap.put("PRODUCT_TYPE",ddlCreateBakPRODUCT_TYPE); 
		tableDdlMap.put("CATEGORY_DESCRIPTION",ddlCreateBakCATEGORY_DESCRIPTION); 
		tableDdlMap.put("ORDER_PRODUCT",ddlCreateBakORDER_PRODUCT); 
		tableDdlMap.put("ORDER_PRODUCT_ATTRIBUTE",ddlCreateBakORDER_PRODUCT_ATTRIBUTE); 
		tableDdlMap.put("TAX_CLASS",ddlCreateBakTAX_CLASS); 
		tableDdlMap.put("PERMISSION_GROUP",ddlCreateBakPERMISSION_GROUP); 
		tableDdlMap.put("PRODUCT_OPTION_VALUE",ddlCreateBakPRODUCT_OPTION_VALUE); 
		tableDdlMap.put("SM_TRANSACTION",ddlCreateBakSM_TRANSACTION); 
		tableDdlMap.put("USER",ddlCreateBakUSER); 
		tableDdlMap.put("PRODUCT_CERTIFICATE",ddlCreateBakPRODUCT_CERTIFICATE); 
		tableDdlMap.put("TAX_RATE",ddlCreateBakTAX_RATE); 
	}
	
	protected static final String sqlRestoreCUSTOMER_OPTION = "insert into CUSTOMER_OPTION (CUSTOMER_OPTION_ID, CUSTOMER_OPT_ACTIVE, CUSTOMER_OPT_CODE, CUSTOMER_OPTION_TYPE, CUSTOMER_OPT_PUBLIC, SORT_ORDER, MERCHANT_ID) select CUSTOMER_OPTION_ID, CUSTOMER_OPT_ACTIVE, CUSTOMER_OPT_CODE, CUSTOMER_OPTION_TYPE, CUSTOMER_OPT_PUBLIC, SORT_ORDER, MERCHANT_ID from BAK_CUSTOMER_OPTION";
	protected static final String sqlRestorePRODUCT_SELFPROOF = "insert into PRODUCT_SELFPROOF (PRODUCT_SELFPROOF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, SORT_ORDER, SELFPROOF_IMAGE, TITLE, PRODUCT_ID, SELFPROOF_TYPE) select PRODUCT_SELFPROOF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, SORT_ORDER, SELFPROOF_IMAGE, TITLE, PRODUCT_ID, SELFPROOF_TYPE from BAK_PRODUCT_SELFPROOF";
	protected static final String sqlRestoreCUSTOMER = "insert into CUSTOMER (CUSTOMER_ID, ADDRESS_DEFAULT, CUSTOMER_ANONYMOUS, COMPANY, CUSTOMER_DOB, CUSTOMER_EMAIL_ADDRESS, CUSTOMER_GENDER, GRADE, INVOICE_DEFAULT, INVOICE_ADDRES_DEFAULT, CUSTOMER_NICK, CUSTOMER_PASSWORD, PHONE, POINTS, PROJECT, RECIEVE_EMAIL, RECIEVE_PHONE, RECIEVE_PHONETIME, LANGUAGE_ID, MERCHANT_ID, RELATEIONSHIP, CUSTOMER_DISCOUNT, ACCOUNT_STATE, ACCOUT_TYPE, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, RELATE_SALES_EMAIL, RELATE_SALES_PHONE) select CUSTOMER_ID, ADDRESS_DEFAULT, CUSTOMER_ANONYMOUS, COMPANY, CUSTOMER_DOB, CUSTOMER_EMAIL_ADDRESS, CUSTOMER_GENDER, GRADE, INVOICE_DEFAULT, INVOICE_ADDRES_DEFAULT, CUSTOMER_NICK, CUSTOMER_PASSWORD, PHONE, POINTS, PROJECT, RECIEVE_EMAIL, RECIEVE_PHONE, RECIEVE_PHONETIME, LANGUAGE_ID, MERCHANT_ID, RELATEIONSHIP, CUSTOMER_DISCOUNT, ACCOUNT_STATE, ACCOUT_TYPE, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, RELATE_SALES_EMAIL, RELATE_SALES_PHONE from BAK_CUSTOMER";
	protected static final String sqlRestoreMERCHANT_LANGUAGE = "insert into MERCHANT_LANGUAGE (stores_MERCHANT_ID, languages_LANGUAGE_ID) select stores_MERCHANT_ID, languages_LANGUAGE_ID from BAK_MERCHANT_LANGUAGE";
	protected static final String sqlRestorePARCEL = "insert into PARCEL (PARCEL_ID, NAME, CUSTMOER_ID) select PARCEL_ID, NAME, CUSTMOER_ID from BAK_PARCEL";
	protected static final String sqlRestorePRODUCT_REVIEW_DESCRIPTION = "insert into PRODUCT_REVIEW_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, PRODUCT_REVIEW_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, PRODUCT_REVIEW_ID from BAK_PRODUCT_REVIEW_DESCRIPTION";
	protected static final String sqlRestoreUSERGRADE = "insert into USERGRADE (CATEGORY_ID, CODE, TYPE, VALUE) select CATEGORY_ID, CODE, TYPE, VALUE from BAK_USERGRADE";
	protected static final String sqlRestoreMERCHANT_RANK = "insert into MERCHANT_RANK (RANK_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, NUM_DIAMOND_PRODUCT, RANK_NAME, RANK_NAME_ZH) select RANK_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, NUM_DIAMOND_PRODUCT, RANK_NAME, RANK_NAME_ZH from BAK_MERCHANT_RANK";
	protected static final String sqlRestoreSM_SEQUENCER = "insert into SM_SEQUENCER (SEQ_NAME, SEQ_COUNT) select SEQ_NAME, SEQ_COUNT from BAK_SM_SEQUENCER";
	protected static final String sqlRestoreSHOPPING_CART_ITEM = "insert into SHOPPING_CART_ITEM (SHP_CART_ITEM_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, ISSELECTED, PRICE_ID, PRODUCT_ID, QUANTITY, SHP_CART_ID) select SHP_CART_ITEM_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, ISSELECTED, PRICE_ID, PRODUCT_ID, QUANTITY, SHP_CART_ID from BAK_SHOPPING_CART_ITEM";
	protected static final String sqlRestoreGIFTS = "insert into GIFTS (GIFT_ID, GIFT_NAME, GIFT_PICTURE_SRC, GIFT_POINTS, GIFT_PRICE, GIFT_DEADLINE, GIFT_TOTAL, GIFT_TYPE) select GIFT_ID, GIFT_NAME, GIFT_PICTURE_SRC, GIFT_POINTS, GIFT_PRICE, GIFT_DEADLINE, GIFT_TOTAL, GIFT_TYPE from BAK_GIFTS";
	protected static final String sqlRestorePRODUCT_IMAGE = "insert into PRODUCT_IMAGE (PRODUCT_IMAGE_ID, DEFAULT_IMAGE, IMAGE_CROP, IMAGE_TYPE, PRODUCT_IMAGE, PRODUCT_ID) select PRODUCT_IMAGE_ID, DEFAULT_IMAGE, IMAGE_CROP, IMAGE_TYPE, PRODUCT_IMAGE, PRODUCT_ID from BAK_PRODUCT_IMAGE";
	protected static final String sqlRestorePRODUCT_OPTION_DESC = "insert into PRODUCT_OPTION_DESC (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, PRODUCT_OPTION_COMMENT, LANGUAGE_ID, PRODUCT_OPTION_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, PRODUCT_OPTION_COMMENT, LANGUAGE_ID, PRODUCT_OPTION_ID from BAK_PRODUCT_OPTION_DESC";
	protected static final String sqlRestoreDELIVERYCOMPNY = "insert into DELIVERYCOMPNY (DELIVERYCOMPNY_ID, DELIVERY_ADDRESS, DELIVERY_CODE, DELIVERY_CONTACTS, DELIVERY_NAME, DELIVERY_TELEPHONE) select DELIVERYCOMPNY_ID, DELIVERY_ADDRESS, DELIVERY_CODE, DELIVERY_CONTACTS, DELIVERY_NAME, DELIVERY_TELEPHONE from BAK_DELIVERYCOMPNY";
	protected static final String sqlRestorePRODUCT_LITERATURE_PATH = "insert into PRODUCT_LITERATURE_PATH (PRODUCT_LITERATURE_PATH_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PATH, PRODUCT_CERTIFICATE_ID) select PRODUCT_LITERATURE_PATH_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PATH, PRODUCT_CERTIFICATE_ID from BAK_PRODUCT_LITERATURE_PATH";
	protected static final String sqlRestoreMANUFACTURER_DESCRIPTION = "insert into MANUFACTURER_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, DATE_LAST_CLICK, MANUFACTURERS_URL, URL_CLICKED, LANGUAGE_ID, MANUFACTURER_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, DATE_LAST_CLICK, MANUFACTURERS_URL, URL_CLICKED, LANGUAGE_ID, MANUFACTURER_ID from BAK_MANUFACTURER_DESCRIPTION";
	protected static final String sqlRestoreUSER_GROUP = "insert into USER_GROUP (USER_ID, GROUP_ID) select USER_ID, GROUP_ID from BAK_USER_GROUP";
	protected static final String sqlRestoreCUSTOMER_ADDRESS = "insert into CUSTOMER_ADDRESS (CUSTOMER_ADDRESS_ID, STREET_ADDRESS, CITY, COMPANY, MEMO, NAME, POSTCODE, STATE, TELEPHONE, TYPE, BILLING_COUNTRY_ID, CUSTOMER_ID, BILLING_ZONE_ID) select CUSTOMER_ADDRESS_ID, STREET_ADDRESS, CITY, COMPANY, MEMO, NAME, POSTCODE, STATE, TELEPHONE, TYPE, BILLING_COUNTRY_ID, CUSTOMER_ID, BILLING_ZONE_ID from BAK_CUSTOMER_ADDRESS";
	protected static final String sqlRestoreNEWS_CONTENT = "insert into NEWS_CONTENT (NEWS_CONTENT_ID, CODE, CONTENT, DATE_CREATED, IMAGE, ISPUBLISH, KEYWORDS, LINKHREF, LINKTEXT, NAME, DATE_PUBLISH, SUMMARY, TYPE, USERCODE) select NEWS_CONTENT_ID, CODE, CONTENT, DATE_CREATED, IMAGE, ISPUBLISH, KEYWORDS, LINKHREF, LINKTEXT, NAME, DATE_PUBLISH, SUMMARY, TYPE, USERCODE from BAK_NEWS_CONTENT";
	protected static final String sqlRestoreMERCHANT_RANK_PROFILE = "insert into MERCHANT_RANK_PROFILE (MCHTRANKPROFILE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, NUM_DIAMOND_PRODUCT, RANK_ID) select MCHTRANKPROFILE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, NUM_DIAMOND_PRODUCT, RANK_ID from BAK_MERCHANT_RANK_PROFILE";
	protected static final String sqlRestorePRODUCT_AVAILABILITY = "insert into PRODUCT_AVAILABILITY (PRODUCT_AVAIL_ID, DATE_AVAILABLE, FREE_SHIPPING, QUANTITY, QUANTITY_ORD_MAX, QUANTITY_ORD_MIN, STATUS, REGION, REGION_VARIANT, PRODUCT_ID) select PRODUCT_AVAIL_ID, DATE_AVAILABLE, FREE_SHIPPING, QUANTITY, QUANTITY_ORD_MAX, QUANTITY_ORD_MIN, STATUS, REGION, REGION_VARIANT, PRODUCT_ID from BAK_PRODUCT_AVAILABILITY";
	protected static final String sqlRestoreCONTENT = "insert into CONTENT (CONTENT_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, CONTENT_POSITION, CONTENT_TYPE, SORT_ORDER, VISIBLE, MERCHANT_ID) select CONTENT_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, CONTENT_POSITION, CONTENT_TYPE, SORT_ORDER, VISIBLE, MERCHANT_ID from BAK_CONTENT";
	protected static final String sqlRestoreCATEGORY = "insert into CATEGORY (CATEGORY_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CATEGORY_IMAGE, CATEGORY_STATUS, CODE, DEPTH, LINEAGE, SORT_ORDER, VISIBLE, MERCHANT_ID, PARENT_ID) select CATEGORY_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CATEGORY_IMAGE, CATEGORY_STATUS, CODE, DEPTH, LINEAGE, SORT_ORDER, VISIBLE, MERCHANT_ID, PARENT_ID from BAK_CATEGORY";
	protected static final String sqlRestoreSM_GROUP = "insert into SM_GROUP (GROUP_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, GROUP_NAME, GROUP_TYPE) select GROUP_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, GROUP_NAME, GROUP_TYPE from BAK_SM_GROUP";
	protected static final String sqlRestorePRODUCT_THIRDPROOF = "insert into PRODUCT_THIRDPROOF (PRODUCT_THIRDPROOF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, SORT_ORDER, THIRDPROOF_IMAGE, TITLE, BASEDATATYPE_ID, PRODUCT_ID) select PRODUCT_THIRDPROOF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, SORT_ORDER, THIRDPROOF_IMAGE, TITLE, BASEDATATYPE_ID, PRODUCT_ID from BAK_PRODUCT_THIRDPROOF";
	protected static final String sqlRestoreLANGUAGE = "insert into LANGUAGE (LANGUAGE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, SORT_ORDER) select LANGUAGE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, SORT_ORDER from BAK_LANGUAGE";
	protected static final String sqlRestoreSHOPPING_CART = "insert into SHOPPING_CART (SHP_CART_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CUSTOMER_ID, SHP_CART_CODE, MERCHANT_ID) select SHP_CART_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CUSTOMER_ID, SHP_CART_CODE, MERCHANT_ID from BAK_SHOPPING_CART";
	protected static final String sqlRestoreCOUNTRY_DESCRIPTION = "insert into COUNTRY_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, COUNTRY_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, COUNTRY_ID from BAK_COUNTRY_DESCRIPTION";
	protected static final String sqlRestoreCUSTOMER_OPTION_SET = "insert into CUSTOMER_OPTION_SET (CUSTOMER_OPTIONSET_ID, SORT_ORDER, CUSTOMER_OPTION_ID, CUSTOMER_OPTION_VALUE_ID) select CUSTOMER_OPTIONSET_ID, SORT_ORDER, CUSTOMER_OPTION_ID, CUSTOMER_OPTION_VALUE_ID from BAK_CUSTOMER_OPTION_SET";
	protected static final String sqlRestoreORDER_PRODUCT_PRICE = "insert into ORDER_PRODUCT_PRICE (ORDER_PRODUCT_PRICE_ID, PRODUCT_PRICE, PRODUCT_PRICE_CODE, PRODUCT_PRICE_NAME, PRODUCT_PRICE_SPECIAL, PRD_PRICE_SPECIAL_END_DT, PRD_PRICE_SPECIAL_ST_DT, ORDER_PRODUCT_ID) select ORDER_PRODUCT_PRICE_ID, PRODUCT_PRICE, PRODUCT_PRICE_CODE, PRODUCT_PRICE_NAME, PRODUCT_PRICE_SPECIAL, PRD_PRICE_SPECIAL_END_DT, PRD_PRICE_SPECIAL_ST_DT, ORDER_PRODUCT_ID from BAK_ORDER_PRODUCT_PRICE";
	protected static final String sqlRestoreCUSTOMER_ATTRIBUTE = "insert into CUSTOMER_ATTRIBUTE (CUSTOMER_ATTRIBUTE_ID, CUSTOMER_ATTR_TXT_VAL, CUSTOMER_ID, OPTION_ID, OPTION_VALUE_ID) select CUSTOMER_ATTRIBUTE_ID, CUSTOMER_ATTR_TXT_VAL, CUSTOMER_ID, OPTION_ID, OPTION_VALUE_ID from BAK_CUSTOMER_ATTRIBUTE";
	protected static final String sqlRestoreORDER_ACCOUNT = "insert into ORDER_ACCOUNT (ORDER_ACCOUNT_ID, ORDER_ACCOUNT_BILL_DAY, ORDER_ACCOUNT_END_DATE, ORDER_ACCOUNT_START_DATE, ORDER_ID) select ORDER_ACCOUNT_ID, ORDER_ACCOUNT_BILL_DAY, ORDER_ACCOUNT_END_DATE, ORDER_ACCOUNT_START_DATE, ORDER_ID from BAK_ORDER_ACCOUNT";
	protected static final String sqlRestoreCUSTOMER_OPTION_DESC = "insert into CUSTOMER_OPTION_DESC (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, CUSTOMER_OPTION_COMMENT, LANGUAGE_ID, CUSTOMER_OPTION_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, CUSTOMER_OPTION_COMMENT, LANGUAGE_ID, CUSTOMER_OPTION_ID from BAK_CUSTOMER_OPTION_DESC";
	protected static final String sqlRestorePRODUCT_DIGITAL = "insert into PRODUCT_DIGITAL (PRODUCT_DIGITAL_ID, FILE_NAME, PRODUCT_ID) select PRODUCT_DIGITAL_ID, FILE_NAME, PRODUCT_ID from BAK_PRODUCT_DIGITAL";
	protected static final String sqlRestoreCURRENCY = "insert into CURRENCY (CURRENCY_ID, CURRENCY_CODE, CURRENCY_CURRENCY_CODE, CURRENCY_NAME, CURRENCY_SUPPORTED) select CURRENCY_ID, CURRENCY_CODE, CURRENCY_CURRENCY_CODE, CURRENCY_NAME, CURRENCY_SUPPORTED from BAK_CURRENCY";
	protected static final String sqlRestorePRODUCT_CATEGORY = "insert into PRODUCT_CATEGORY (PRODUCT_ID, CATEGORY_ID) select PRODUCT_ID, CATEGORY_ID from BAK_PRODUCT_CATEGORY";
	protected static final String sqlRestoreORDER_PRODUCT_DOWNLOAD = "insert into ORDER_PRODUCT_DOWNLOAD (ORDER_PRODUCT_DOWNLOAD_ID, DOWNLOAD_COUNT, DOWNLOAD_MAXDAYS, ORDER_PRODUCT_FILENAME, ORDER_PRODUCT_ID) select ORDER_PRODUCT_DOWNLOAD_ID, DOWNLOAD_COUNT, DOWNLOAD_MAXDAYS, ORDER_PRODUCT_FILENAME, ORDER_PRODUCT_ID from BAK_ORDER_PRODUCT_DOWNLOAD";
	protected static final String sqlRestorePRODUCT_BROWSW = "insert into PRODUCT_BROWSW (PRODUCT_BROWSE_ID, BROWSE_DATE, CUSTMOER_ID, PRODUCT_ID, IP) select PRODUCT_BROWSE_ID, BROWSE_DATE, CUSTMOER_ID, PRODUCT_ID, IP from BAK_PRODUCT_BROWSW";
	protected static final String sqlRestorePRODUCT_IMAGE_DESCRIPTION = "insert into PRODUCT_IMAGE_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, ALT_TAG, LANGUAGE_ID, PRODUCT_IMAGE_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, ALT_TAG, LANGUAGE_ID, PRODUCT_IMAGE_ID from BAK_PRODUCT_IMAGE_DESCRIPTION";
	protected static final String sqlRestoreMEMBER_POINTS = "insert into MEMBER_POINTS (MEMBER_POINTS_ID, TYPE, VALUE, CUSTOMER_ID, DATEVALID, LTFE_POINT, STATAS, UPDATE_DATE, ORDER_ID) select MEMBER_POINTS_ID, TYPE, VALUE, CUSTOMER_ID, DATEVALID, LTFE_POINT, STATAS, UPDATE_DATE, ORDER_ID from BAK_MEMBER_POINTS";
	protected static final String sqlRestoreSYSTEM_NOTIFICATION = "insert into SYSTEM_NOTIFICATION (SYSTEM_NOTIF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, END_DATE, CONFIG_KEY, START_DATE, VALUE, MERCHANT_ID, USER_ID) select SYSTEM_NOTIF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, END_DATE, CONFIG_KEY, START_DATE, VALUE, MERCHANT_ID, USER_ID from BAK_SYSTEM_NOTIFICATION";
	protected static final String sqlRestoreSUBORDERS = "insert into SUBORDERS (SUBORDER_ID, DELIVERY_CODE, DELIVERY_NUMBER, LAST_MODIFIED, ORDER_STATUS, ORDER_TOTAL, MERCHANTID, ORDER_ID, STORE_NAME, PAY_PROOF, FINAL_TOTAL, RELATE_SALES_EMAIL, RELATE_SALES_PHONE) select SUBORDER_ID, DELIVERY_CODE, DELIVERY_NUMBER, LAST_MODIFIED, ORDER_STATUS, ORDER_TOTAL, MERCHANTID, ORDER_ID, STORE_NAME, PAY_PROOF, FINAL_TOTAL, RELATE_SALES_EMAIL, RELATE_SALES_PHONE from BAK_SUBORDERS";
	protected static final String sqlRestorePRODUCT = "insert into PRODUCT (PRODUCT_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, AVAILABLE, BATCHNUM, CAS, CODE, DATE_AVAILABLE, DATE_ChargeBegin, DATE_ChargeEnd, PRODUCT_FREE, QUANTITY_ORDERED, REVIEW_AVG, REVIEW_COUNT, QUALITY_SCORE, SKU, MANUFACTURER_ID, MERCHANT_ID, Parcel_ID, PRODUCT_TYPE_ID, SORT_ORDER, SPRICE, PRODUCT_DIAMOND) select PRODUCT_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, AVAILABLE, BATCHNUM, CAS, CODE, DATE_AVAILABLE, DATE_ChargeBegin, DATE_ChargeEnd, PRODUCT_FREE, QUANTITY_ORDERED, REVIEW_AVG, REVIEW_COUNT, QUALITY_SCORE, SKU, MANUFACTURER_ID, MERCHANT_ID, Parcel_ID, PRODUCT_TYPE_ID, SORT_ORDER, SPRICE, PRODUCT_DIAMOND from BAK_PRODUCT";
	//protected static final String sqlRestorePRODUCT = "insert into PRODUCT (PRODUCT_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, AVAILABLE, BATCHNUM, CAS, CODE, DATE_AVAILABLE, DATE_ChargeBegin, DATE_ChargeEnd, PRODUCT_FREE, QUANTITY_ORDERED, REVIEW_AVG, REVIEW_COUNT, QUALITY_SCORE, SKU, MANUFACTURER_ID, MERCHANT_ID, Parcel_ID, PRODUCT_TYPE_ID, SORT_ORDER, SPRICE, PRODUCT_DIAMOND, SEARCH_CONTENT) select PRODUCT_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, AVAILABLE, BATCHNUM, CAS, CODE, DATE_AVAILABLE, DATE_ChargeBegin, DATE_ChargeEnd, PRODUCT_FREE, QUANTITY_ORDERED, REVIEW_AVG, REVIEW_COUNT, QUALITY_SCORE, SKU, MANUFACTURER_ID, MERCHANT_ID, Parcel_ID, PRODUCT_TYPE_ID, SORT_ORDER, SPRICE, PRODUCT_DIAMOND, SEARCH_CONTENT from BAK_PRODUCT";
	protected static final String sqlRestoreMODULE_CONFIGURATION = "insert into MODULE_CONFIGURATION (MODULE_CONF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, DETAILS, CONFIGURATION, CUSTOM_IND, IMAGE, MODULE, REGIONS, TYPE) select MODULE_CONF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, DETAILS, CONFIGURATION, CUSTOM_IND, IMAGE, MODULE, REGIONS, TYPE from BAK_MODULE_CONFIGURATION";
	protected static final String sqlRestoreZONE = "insert into ZONE (ZONE_ID, ZONE_CODE, COUNTRY_ID) select ZONE_ID, ZONE_CODE, COUNTRY_ID from BAK_ZONE";
	protected static final String sqlRestoreCUSTOMER_GROUP = "insert into CUSTOMER_GROUP (CUSTOMER_ID, GROUP_ID) select CUSTOMER_ID, GROUP_ID from BAK_CUSTOMER_GROUP";
	protected static final String sqlRestoreGEOZONE = "insert into GEOZONE (GEOZONE_ID, GEOZONE_CODE, GEOZONE_NAME) select GEOZONE_ID, GEOZONE_CODE, GEOZONE_NAME from BAK_GEOZONE";
	protected static final String sqlRestoreSYSTEM_CONFIGURATION = "insert into SYSTEM_CONFIGURATION (SYSTEM_CONFIG_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CONFIG_KEY, VALUE) select SYSTEM_CONFIG_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CONFIG_KEY, VALUE from BAK_SYSTEM_CONFIGURATION";
	protected static final String sqlRestoreORDER_STATUS_HISTORY = "insert into ORDER_STATUS_HISTORY (ORDER_STATUS_HISTORY_ID, COMMENTS, CUSTOMER_NOTIFIED, DATE_ADDED, status, ORDER_ID, SUBORDER_ID) select ORDER_STATUS_HISTORY_ID, COMMENTS, CUSTOMER_NOTIFIED, DATE_ADDED, status, ORDER_ID, SUBORDER_ID from BAK_ORDER_STATUS_HISTORY";
	protected static final String sqlRestorePRODUCT_ATTRIBUTE = "insert into PRODUCT_ATTRIBUTE (PRODUCT_ATTRIBUTE_ID, PRODUCT_ATTRIBUTE_DEFAULT, PRODUCT_ATTRIBUTE_DISCOUNTED, PRODUCT_ATTRIBUTE_FOR_DISP, PRODUCT_ATTRIBUTE_REQUIRED, PRODUCT_ATTRIBUTE_FREE, PRODUCT_ATRIBUTE_PRICE, PRODUCT_ATTRIBUTE_WEIGHT, PRODUCT_ATTRIBUTE_SORT_ORD, PRODUCT_ID, OPTION_ID, OPTION_VALUE_ID) select PRODUCT_ATTRIBUTE_ID, PRODUCT_ATTRIBUTE_DEFAULT, PRODUCT_ATTRIBUTE_DISCOUNTED, PRODUCT_ATTRIBUTE_FOR_DISP, PRODUCT_ATTRIBUTE_REQUIRED, PRODUCT_ATTRIBUTE_FREE, PRODUCT_ATRIBUTE_PRICE, PRODUCT_ATTRIBUTE_WEIGHT, PRODUCT_ATTRIBUTE_SORT_ORD, PRODUCT_ID, OPTION_ID, OPTION_VALUE_ID from BAK_PRODUCT_ATTRIBUTE";
	protected static final String sqlRestoreAUTH_BRAND = "insert into AUTH_BRAND (AUTH_ID, BRAND_ID) select AUTH_ID, BRAND_ID from BAK_AUTH_BRAND";
	protected static final String sqlRestoreCONTENT_DESCRIPTION = "insert into CONTENT_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, META_DESCRIPTION, META_KEYWORDS, META_TITLE, SEF_URL, LANGUAGE_ID, CONTENT_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, META_DESCRIPTION, META_KEYWORDS, META_TITLE, SEF_URL, LANGUAGE_ID, CONTENT_ID from BAK_CONTENT_DESCRIPTION";
	protected static final String sqlRestorePRODUCT_RELATIONSHIP = "insert into PRODUCT_RELATIONSHIP (PRODUCT_RELATIONSHIP_ID, ACTIVE, CODE, PRODUCT_ID, RELATED_PRODUCT_ID, MERCHANT_ID) select PRODUCT_RELATIONSHIP_ID, ACTIVE, CODE, PRODUCT_ID, RELATED_PRODUCT_ID, MERCHANT_ID from BAK_PRODUCT_RELATIONSHIP";
	protected static final String sqlRestoreAUTHORIZATION = "insert into AUTHORIZATION (AUTH_ID, AUTH_TYPE, COMPANY, END_TIME, IMAGE, INTRODUCE, START_TIME, MERCHANT_ID) select AUTH_ID, AUTH_TYPE, COMPANY, END_TIME, IMAGE, INTRODUCE, START_TIME, MERCHANT_ID from BAK_AUTHORIZATION";
	protected static final String sqlRestoreCUSTOMER_OPT_VAL_DESCRIPTION = "insert into CUSTOMER_OPT_VAL_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, CUSTOMER_OPT_VAL_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, CUSTOMER_OPT_VAL_ID from BAK_CUSTOMER_OPT_VAL_DESCRIPTION";
	protected static final String sqlRestoreGEOZONE_DESCRIPTION = "insert into GEOZONE_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, GEOZONE_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, GEOZONE_ID from BAK_GEOZONE_DESCRIPTION";
	protected static final String sqlRestoreCUSTOMER_OPTION_VALUE = "insert into CUSTOMER_OPTION_VALUE (CUSTOMER_OPTION_VALUE_ID, CUSTOMER_OPT_VAL_CODE, CUSTOMER_OPT_VAL_IMAGE, SORT_ORDER, MERCHANT_ID) select CUSTOMER_OPTION_VALUE_ID, CUSTOMER_OPT_VAL_CODE, CUSTOMER_OPT_VAL_IMAGE, SORT_ORDER, MERCHANT_ID from BAK_CUSTOMER_OPTION_VALUE";
	protected static final String sqlRestoreBRAND_USERSEGMENT_DISCOUNT = "insert into BRAND_USERSEGMENT_DISCOUNT (BRAND_DISCOUNT_ID, DISCOUNTS, discounts_KEY) select BRAND_DISCOUNT_ID, DISCOUNTS, discounts_KEY from BAK_BRAND_USERSEGMENT_DISCOUNT";
	protected static final String sqlRestoreGIFT_ORDER = "insert into GIFT_ORDER (GIFT_ORDER_ID, CREATE_DATE, DELIVERY_CODE, DELIVERY_NUMBER, GIFT_NUMBER, GIFT_STATUS, CUSTOMER_ID, CUSTOMER_CITY, CUSTOMER_NAME, GIFT_IMG, GIFT_NAME, GIFT_POINT, PHONE_NUMBER, SHIPPING_ADDRESS, CUSTOMER_ADDRESS_ID, GITF_ID) select GIFT_ORDER_ID, CREATE_DATE, DELIVERY_CODE, DELIVERY_NUMBER, GIFT_NUMBER, GIFT_STATUS, CUSTOMER_ID, CUSTOMER_CITY, CUSTOMER_NAME, GIFT_IMG, GIFT_NAME, GIFT_POINT, PHONE_NUMBER, SHIPPING_ADDRESS, CUSTOMER_ADDRESS_ID, GITF_ID from BAK_GIFT_ORDER";
	protected static final String sqlRestoreSHOPPING_CART_ATTR_ITEM = "insert into SHOPPING_CART_ATTR_ITEM (SHP_CART_ATTR_ITEM_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PRODUCT_ATTR_ID, SHP_CART_ITEM_ID) select SHP_CART_ATTR_ITEM_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PRODUCT_ATTR_ID, SHP_CART_ITEM_ID from BAK_SHOPPING_CART_ATTR_ITEM";
	protected static final String sqlRestorePRODUCT_PROOF = "insert into PRODUCT_PROOF (PRODUCT_PROOF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DATE_BUYED, DESCRIPTION, SORT_ORDER, RPOOF_IMAGE, TITLE, BASEDATATYPE_ID, PRODUCT_ID) select PRODUCT_PROOF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DATE_BUYED, DESCRIPTION, SORT_ORDER, RPOOF_IMAGE, TITLE, BASEDATATYPE_ID, PRODUCT_ID from BAK_PRODUCT_PROOF";
	protected static final String sqlRestoreORDER_TOTAL = "insert into ORDER_TOTAL (ORDER_ACCOUNT_ID, MODULE, CODE, ORDER_TOTAL_TYPE, ORDER_VALUE_TYPE, SORT_ORDER, TEXT, TITLE, VALUE, ORDER_ID) select ORDER_ACCOUNT_ID, MODULE, CODE, ORDER_TOTAL_TYPE, ORDER_VALUE_TYPE, SORT_ORDER, TEXT, TITLE, VALUE, ORDER_ID from BAK_ORDER_TOTAL";
	protected static final String sqlRestoreUSERLOGIN = "insert into USERLOGIN (USERLOGIN_ID, DATE_CREATED, IP, USER_ID) select USERLOGIN_ID, DATE_CREATED, IP, USER_ID from BAK_USERLOGIN";
	protected static final String sqlRestoreMERCHANT_STORE = "insert into MERCHANT_STORE (MERCHANT_ID, STORE_BUSINESSLICENCE, STORE_CODE, CONTINUESHOPPINGURL, CURRENCY_FORMAT_NATIONAL, DOMAIN_NAME, STORE_ENINTRODUCE, IN_BUSINESS_SINCE, STORE_INTRODUCE, INVOICE_TEMPLATE, STORE_QQ, STORE_SEEDED, SEIZEUNITCODE, STORE_EMAIL, STORE_LOGO, STORE_TEMPLATE, STORE_ADDRESS, STORE_CITY, STORE_CONTACTS, STORE_FAX, STORE_MOBILE, STORE_NAME, STORE_PHONE, STORE_POSTAL_CODE, STORE_STATE_PROV, USE_CACHE, isQQ, WEIGHTUNITCODE, COUNTRY_ID, CURRENCY_ID, LANGUAGE_ID, ZONE_ID, STOREWEB, SALES_EMAIL, kefu, xiaoshou, MCHTRANKPROFILE_ID) select MERCHANT_ID, STORE_BUSINESSLICENCE, STORE_CODE, CONTINUESHOPPINGURL, CURRENCY_FORMAT_NATIONAL, DOMAIN_NAME, STORE_ENINTRODUCE, IN_BUSINESS_SINCE, STORE_INTRODUCE, INVOICE_TEMPLATE, STORE_QQ, STORE_SEEDED, SEIZEUNITCODE, STORE_EMAIL, STORE_LOGO, STORE_TEMPLATE, STORE_ADDRESS, STORE_CITY, STORE_CONTACTS, STORE_FAX, STORE_MOBILE, STORE_NAME, STORE_PHONE, STORE_POSTAL_CODE, STORE_STATE_PROV, USE_CACHE, isQQ, WEIGHTUNITCODE, COUNTRY_ID, CURRENCY_ID, LANGUAGE_ID, ZONE_ID, STOREWEB, SALES_EMAIL, kefu, xiaoshou, MCHTRANKPROFILE_ID from BAK_MERCHANT_STORE";
	protected static final String sqlRestorePERMISSION = "insert into PERMISSION (PERMISSION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PERMISSION_NAME) select PERMISSION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PERMISSION_NAME from BAK_PERMISSION";
	protected static final String sqlRestoreMERCHANT_LOG = "insert into MERCHANT_LOG (MERCHANT_LOG_ID, LOG, MODULE, MERCHANT_ID) select MERCHANT_LOG_ID, LOG, MODULE, MERCHANT_ID from BAK_MERCHANT_LOG";
	protected static final String sqlRestoreCOUNTRY = "insert into COUNTRY (COUNTRY_ID, COUNTRY_ISOCODE, COUNTRY_SUPPORTED, GEOZONE_ID) select COUNTRY_ID, COUNTRY_ISOCODE, COUNTRY_SUPPORTED, GEOZONE_ID from BAK_COUNTRY";
	protected static final String sqlRestorePRODUCT_OPTION = "insert into PRODUCT_OPTION (PRODUCT_OPTION_ID, PRODUCT_OPTION_CODE, PRODUCT_OPTION_SORT_ORD, PRODUCT_OPTION_TYPE, PRODUCT_OPTION_READ, MERCHANT_ID) select PRODUCT_OPTION_ID, PRODUCT_OPTION_CODE, PRODUCT_OPTION_SORT_ORD, PRODUCT_OPTION_TYPE, PRODUCT_OPTION_READ, MERCHANT_ID from BAK_PRODUCT_OPTION";
	protected static final String sqlRestoreMANUFACTURER = "insert into MANUFACTURER (MANUFACTURER_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, MANUFACTURER_IMAGE, SRC_MERCHANT_ID, SORT_ORDER, MERCHANT_ID) select MANUFACTURER_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, MANUFACTURER_IMAGE, SRC_MERCHANT_ID, SORT_ORDER, MERCHANT_ID from BAK_MANUFACTURER";
	protected static final String sqlRestoreSPECIAL_CONFIGURATION = "insert into SPECIAL_CONFIGURATION (SPECIAL_CONFIG_ID, CONFIG_KEY, VALUE) select SPECIAL_CONFIG_ID, CONFIG_KEY, VALUE from BAK_SPECIAL_CONFIGURATION";
	protected static final String sqlRestoreTAX_RATE_DESCRIPTION = "insert into TAX_RATE_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, TAX_RATE_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, TAX_RATE_ID from BAK_TAX_RATE_DESCRIPTION";
	protected static final String sqlRestoreORDERS = "insert into ORDERS (ORDER_ID, BILLING_STREET_ADDRESS, BILLING_CITY, BILLING_COMPANY, BANK_ACCOUNT, BANK_NANE, COMPANY, COMPANY_ADDRESS, COMPANY_TELEPHONE, TAX_NUMBER, type, BILLING_POSTCODE, BILLING_TELEPHONE, BILLING_USERNAME, CHANNEL, CARD_TYPE, CC_CVV, CC_EXPIRES, CC_NUMBER, CC_OWNER, CURRENCY_VALUE, CUSTOMER_EMAIL_ADDRESS, CUSTOMER_ID, DATE_PURCHASED, IP_ADDRESS, INVOICE_STREET_ADDRESS, INVOICE_CITY, INVOICE_COMPANY, INVOICE_POSTCODE, INVOICE_TELEPHONE, INVOICE_USERNAME, LAST_MODIFIED, LOCALE, ORDER_DATE_FINISHED, ORDER_TYPE, PAYMENT_MODULE_CODE, PAYMENT_TYPE, SHIPPING_MODULE_CODE, ORDER_STATUS, ORDER_TOTAL, BILLING_COUNTRY_ID, BILLING_ZONE_ID, CURRENCY_ID, INVOICE_COUNTRY_ID, INVOICE_ZONE_ID, STORE_NAME, PROCESS_TYPE) select ORDER_ID, BILLING_STREET_ADDRESS, BILLING_CITY, BILLING_COMPANY, BANK_ACCOUNT, BANK_NANE, COMPANY, COMPANY_ADDRESS, COMPANY_TELEPHONE, TAX_NUMBER, type, BILLING_POSTCODE, BILLING_TELEPHONE, BILLING_USERNAME, CHANNEL, CARD_TYPE, CC_CVV, CC_EXPIRES, CC_NUMBER, CC_OWNER, CURRENCY_VALUE, CUSTOMER_EMAIL_ADDRESS, CUSTOMER_ID, DATE_PURCHASED, IP_ADDRESS, INVOICE_STREET_ADDRESS, INVOICE_CITY, INVOICE_COMPANY, INVOICE_POSTCODE, INVOICE_TELEPHONE, INVOICE_USERNAME, LAST_MODIFIED, LOCALE, ORDER_DATE_FINISHED, ORDER_TYPE, PAYMENT_MODULE_CODE, PAYMENT_TYPE, SHIPPING_MODULE_CODE, ORDER_STATUS, ORDER_TOTAL, BILLING_COUNTRY_ID, BILLING_ZONE_ID, CURRENCY_ID, INVOICE_COUNTRY_ID, INVOICE_ZONE_ID, STORE_NAME, PROCESS_TYPE from BAK_ORDERS";
	protected static final String sqlRestorePRODUCT_PRICE_DESCRIPTION = "insert into PRODUCT_PRICE_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, PRODUCT_PRICE_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, PRODUCT_PRICE_ID from BAK_PRODUCT_PRICE_DESCRIPTION";
	protected static final String sqlRestoreZONE_DESCRIPTION = "insert into ZONE_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, ZONE_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, ZONE_ID from BAK_ZONE_DESCRIPTION";
	protected static final String sqlRestoreUSER_SEGMENT = "insert into USER_SEGMENT (USER_SEGMENT_ID, DISCRIPTION_EN, DISCRIPTION_ZH, NAME, FOR_BUYER, FOR_SELLER) select USER_SEGMENT_ID, DISCRIPTION_EN, DISCRIPTION_ZH, NAME, FOR_BUYER, FOR_SELLER from BAK_USER_SEGMENT";
	protected static final String sqlRestoreFILE_HISTORY = "insert into FILE_HISTORY (FILE_HISTORY_ID, ACCOUNTED_DATE, DATE_ADDED, DATE_DELETED, DOWNLOAD_COUNT, FILE_ID, FILESIZE, MERCHANT_ID) select FILE_HISTORY_ID, ACCOUNTED_DATE, DATE_ADDED, DATE_DELETED, DOWNLOAD_COUNT, FILE_ID, FILESIZE, MERCHANT_ID from BAK_FILE_HISTORY";
	protected static final String sqlRestoreORDER_ACCOUNT_PRODUCT = "insert into ORDER_ACCOUNT_PRODUCT (ORDER_ACCOUNT_PRODUCT_ID, ORDER_ACCOUNT_PRODUCT_ACCNT_DT, ORDER_ACCOUNT_PRODUCT_END_DT, ORDER_ACCOUNT_PRODUCT_EOT, ORDER_ACCOUNT_PRODUCT_L_ST_DT, ORDER_ACCOUNT_PRODUCT_L_TRX_ST, ORDER_ACCOUNT_PRODUCT_PM_FR_TY, ORDER_ACCOUNT_PRODUCT_ST_DT, ORDER_ACCOUNT_PRODUCT_STATUS, ORDER_ACCOUNT_ID, ORDER_PRODUCT_ID) select ORDER_ACCOUNT_PRODUCT_ID, ORDER_ACCOUNT_PRODUCT_ACCNT_DT, ORDER_ACCOUNT_PRODUCT_END_DT, ORDER_ACCOUNT_PRODUCT_EOT, ORDER_ACCOUNT_PRODUCT_L_ST_DT, ORDER_ACCOUNT_PRODUCT_L_TRX_ST, ORDER_ACCOUNT_PRODUCT_PM_FR_TY, ORDER_ACCOUNT_PRODUCT_ST_DT, ORDER_ACCOUNT_PRODUCT_STATUS, ORDER_ACCOUNT_ID, ORDER_PRODUCT_ID from BAK_ORDER_ACCOUNT_PRODUCT";
	protected static final String sqlRestoreCUSTOMER_INVOICE = "insert into CUSTOMER_INVOICE (CUSTOMER_INVOICE_ID, BANK_ACCOUNT, BANK_NANE, COMPANY, COMPANY_ADDRESS, COMPANY_TELEPHONE, MEMO, TAX_NUMBER, type, CUSTOMER_ID) select CUSTOMER_INVOICE_ID, BANK_ACCOUNT, BANK_NANE, COMPANY, COMPANY_ADDRESS, COMPANY_TELEPHONE, MEMO, TAX_NUMBER, type, CUSTOMER_ID from BAK_CUSTOMER_INVOICE";
	protected static final String sqlRestoreCOMMON_SOFTWARE = "insert into COMMON_SOFTWARE (COMMON_SOFTWARE_ID, BRIEF, CLICKNUM, DESCRIPTION, FILENAME, ICONNAME, NAME, SIZE, TORDER, TYPE) select COMMON_SOFTWARE_ID, BRIEF, CLICKNUM, DESCRIPTION, FILENAME, ICONNAME, NAME, SIZE, TORDER, TYPE from BAK_COMMON_SOFTWARE";
	protected static final String sqlRestoreMERCHANT_CONFIGURATION = "insert into MERCHANT_CONFIGURATION (MERCHANT_CONFIG_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CONFIG_KEY, TYPE, VALUE, MERCHANT_ID) select MERCHANT_CONFIG_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CONFIG_KEY, TYPE, VALUE, MERCHANT_ID from BAK_MERCHANT_CONFIGURATION";
	protected static final String sqlRestorePRODUCT_DESCRIPTION = "insert into PRODUCT_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, EN_NAME, META_DESCRIPTION, META_KEYWORDS, META_TITLE, METHOD_DESCRIPTION, DOWNLOAD_LNK, PRODUCT_HIGHLIGHT, SEF_URL, SIMPLE_DESCRIPTION, STORECOND_DESCRIPTION, TEST_DESCRIPTION, LANGUAGE_ID, PRODUCT_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, EN_NAME, META_DESCRIPTION, META_KEYWORDS, META_TITLE, METHOD_DESCRIPTION, DOWNLOAD_LNK, PRODUCT_HIGHLIGHT, SEF_URL, SIMPLE_DESCRIPTION, STORECOND_DESCRIPTION, TEST_DESCRIPTION, LANGUAGE_ID, PRODUCT_ID from BAK_PRODUCT_DESCRIPTION";
	protected static final String sqlRestoreBASEDATA_TYPE = "insert into BASEDATA_TYPE (BASEDATA_TYPE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, NAME, SORT_ORDER, TYPE, VALUE) select BASEDATA_TYPE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, NAME, SORT_ORDER, TYPE, VALUE from BAK_BASEDATA_TYPE";
	protected static final String sqlRestorePRODUCT_OPTION_VALUE_DESCRIPTION = "insert into PRODUCT_OPTION_VALUE_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, PRODUCT_OPTION_VALUE_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, PRODUCT_OPTION_VALUE_ID from BAK_PRODUCT_OPTION_VALUE_DESCRIPTION";
	protected static final String sqlRestoreBRAND_DISCOUNT = "insert into BRAND_DISCOUNT (BRAND_DISCOUNT_ID, BRAND_ID, STORE_ID) select BRAND_DISCOUNT_ID, BRAND_ID, STORE_ID from BAK_BRAND_DISCOUNT";
	protected static final String sqlRestoreCUSTOMER_IMAGE = "insert into CUSTOMER_IMAGE (CUSTOMER_IMAGE_ID, CUSTOMER_IMAGE, DEFAULT_IMAGE, IMAGE_CROP, IMAGE_TYPE, REMARK, CUSTOMER_ID) select CUSTOMER_IMAGE_ID, CUSTOMER_IMAGE, DEFAULT_IMAGE, IMAGE_CROP, IMAGE_TYPE, REMARK, CUSTOMER_ID from BAK_CUSTOMER_IMAGE";
	protected static final String sqlRestorePRODUCT_PRICE = "insert into PRODUCT_PRICE (PRODUCT_PRICE_ID, PRODUCT_PRICE_CODE, DEFAULT_PRICE, PRODUCT_PRICE_AMOUNT, PRODUCT_PRICE_PERIOD, PRODUCT_PRICE_SPECIAL_AMOUNT, PRODUCT_PRICE_SPECIAL_END_DATE, PRODUCT_PRICE_SPECIAL_ST_DATE, PRODUCT_PRICE_STOCK_AMOUNT, PRODUCT_PRICE_TYPE, PRODUCT_AVAIL_ID) select PRODUCT_PRICE_ID, PRODUCT_PRICE_CODE, DEFAULT_PRICE, PRODUCT_PRICE_AMOUNT, PRODUCT_PRICE_PERIOD, PRODUCT_PRICE_SPECIAL_AMOUNT, PRODUCT_PRICE_SPECIAL_END_DATE, PRODUCT_PRICE_SPECIAL_ST_DATE, PRODUCT_PRICE_STOCK_AMOUNT, PRODUCT_PRICE_TYPE, PRODUCT_AVAIL_ID from BAK_PRODUCT_PRICE";
	protected static final String sqlRestorePRODUCT_REVIEW = "insert into PRODUCT_REVIEW (PRODUCT_REVIEW_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, REVIEW_DATE, REVIEWS_RATING, REVIEWS_READ, STATUS, CUSTOMERS_ID, ORDER_PRODUCT_ID, PRODUCT_ID) select PRODUCT_REVIEW_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, REVIEW_DATE, REVIEWS_RATING, REVIEWS_READ, STATUS, CUSTOMERS_ID, ORDER_PRODUCT_ID, PRODUCT_ID from BAK_PRODUCT_REVIEW";
	protected static final String sqlRestorePRODUCT_TYPE = "insert into PRODUCT_TYPE (PRODUCT_TYPE_ID, PRD_TYPE_ADD_TO_CART, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PRD_TYPE_CODE) select PRODUCT_TYPE_ID, PRD_TYPE_ADD_TO_CART, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PRD_TYPE_CODE from BAK_PRODUCT_TYPE";
	protected static final String sqlRestoreCATEGORY_DESCRIPTION = "insert into CATEGORY_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, CATEGORY_HIGHLIGHT, META_DESCRIPTION, META_KEYWORDS, META_TITLE, SEF_URL, LANGUAGE_ID, CATEGORY_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, CATEGORY_HIGHLIGHT, META_DESCRIPTION, META_KEYWORDS, META_TITLE, SEF_URL, LANGUAGE_ID, CATEGORY_ID from BAK_CATEGORY_DESCRIPTION";
	protected static final String sqlRestoreORDER_PRODUCT = "insert into ORDER_PRODUCT (ORDER_PRODUCT_ID, ONETIME_CHARGE, PRICE, PRODUCT_ENNAME, PRODUCT_ID, PRODUCT_NAME, PRODUCT_QUANTITY, QUALITY_SCORE, PRODUCT_SKU, SPECS, SUBORDER_ID, PRODUCT_CODE, FINAL_PRICE, FINAL_TOTAL, PRODUCT_SPEC_ID, PRODUCT_IMAGE) select ORDER_PRODUCT_ID, ONETIME_CHARGE, PRICE, PRODUCT_ENNAME, PRODUCT_ID, PRODUCT_NAME, PRODUCT_QUANTITY, QUALITY_SCORE, PRODUCT_SKU, SPECS, SUBORDER_ID, PRODUCT_CODE, FINAL_PRICE, FINAL_TOTAL, PRODUCT_SPEC_ID, PRODUCT_IMAGE from BAK_ORDER_PRODUCT";
	protected static final String sqlRestoreORDER_PRODUCT_ATTRIBUTE = "insert into ORDER_PRODUCT_ATTRIBUTE (ORDER_PRODUCT_ATTRIBUTE_ID, PRODUCT_ATTRIBUTE_IS_FREE, PRODUCT_ATTRIBUTE_NAME, PRODUCT_ATTRIBUTE_PRICE, PRODUCT_ATTRIBUTE_VAL_NAME, PRODUCT_ATTRIBUTE_WEIGHT, PRODUCT_OPTION_ID, PRODUCT_OPTION_VALUE_ID, ORDER_PRODUCT_ID) select ORDER_PRODUCT_ATTRIBUTE_ID, PRODUCT_ATTRIBUTE_IS_FREE, PRODUCT_ATTRIBUTE_NAME, PRODUCT_ATTRIBUTE_PRICE, PRODUCT_ATTRIBUTE_VAL_NAME, PRODUCT_ATTRIBUTE_WEIGHT, PRODUCT_OPTION_ID, PRODUCT_OPTION_VALUE_ID, ORDER_PRODUCT_ID from BAK_ORDER_PRODUCT_ATTRIBUTE";
	protected static final String sqlRestoreTAX_CLASS = "insert into TAX_CLASS (TAX_CLASS_ID, TAX_CLASS_CODE, TAX_CLASS_TITLE, MERCHANT_ID) select TAX_CLASS_ID, TAX_CLASS_CODE, TAX_CLASS_TITLE, MERCHANT_ID from BAK_TAX_CLASS";
	protected static final String sqlRestorePERMISSION_GROUP = "insert into PERMISSION_GROUP (PERMISSION_ID, GROUP_ID) select PERMISSION_ID, GROUP_ID from BAK_PERMISSION_GROUP";
	protected static final String sqlRestorePRODUCT_OPTION_VALUE = "insert into PRODUCT_OPTION_VALUE (PRODUCT_OPTION_VALUE_ID, PRODUCT_OPTION_VAL_CODE, PRODUCT_OPT_FOR_DISP, PRODUCT_OPT_VAL_IMAGE, PRODUCT_OPT_VAL_SORT_ORD, MERCHANT_ID) select PRODUCT_OPTION_VALUE_ID, PRODUCT_OPTION_VAL_CODE, PRODUCT_OPT_FOR_DISP, PRODUCT_OPT_VAL_IMAGE, PRODUCT_OPT_VAL_SORT_ORD, MERCHANT_ID from BAK_PRODUCT_OPTION_VALUE";
	protected static final String sqlRestoreSM_TRANSACTION = "insert into SM_TRANSACTION (TRANSACTION_ID, AMOUNT, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DETAILS, PAYMENT_TYPE, TRANSACTION_DATE, TRANSACTION_TYPE, ORDER_ID) select TRANSACTION_ID, AMOUNT, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DETAILS, PAYMENT_TYPE, TRANSACTION_DATE, TRANSACTION_TYPE, ORDER_ID from BAK_SM_TRANSACTION";
	protected static final String sqlRestoreUSER = "insert into USER (USER_ID, ACTIVE, ADMIN_EMAIL, ADMIN_NAME, ADMIN_PASSWORD, ADMIN_A1, ADMIN_A2, ADMIN_A3, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, ADMIN_FIRST_NAME, LAST_ACCESS, ADMIN_LAST_NAME, LOGIN_ACCESS, ADMIN_Q1, ADMIN_Q2, ADMIN_Q3, LANGUAGE_ID, MERCHANT_ID, ADMIN_MOBILE) select USER_ID, ACTIVE, ADMIN_EMAIL, ADMIN_NAME, ADMIN_PASSWORD, ADMIN_A1, ADMIN_A2, ADMIN_A3, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, ADMIN_FIRST_NAME, LAST_ACCESS, ADMIN_LAST_NAME, LOGIN_ACCESS, ADMIN_Q1, ADMIN_Q2, ADMIN_Q3, LANGUAGE_ID, MERCHANT_ID, ADMIN_MOBILE from BAK_USER";
	protected static final String sqlRestorePRODUCT_CERTIFICATE = "insert into PRODUCT_CERTIFICATE (PRODUCT_CERTIFICATE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, BASEINFO, CERTIFICATE_IMAGE, DESCRIPTION, DOC_URL, SORT_ORDER, TITLE, BASEDATATYPE_ID, PRODUCT_ID) select PRODUCT_CERTIFICATE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, BASEINFO, CERTIFICATE_IMAGE, DESCRIPTION, DOC_URL, SORT_ORDER, TITLE, BASEDATATYPE_ID, PRODUCT_ID from BAK_PRODUCT_CERTIFICATE";
	protected static final String sqlRestoreTAX_RATE = "insert into TAX_RATE (TAX_RATE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, TAX_CODE, PIGGYBACK, STORE_STATE_PROV, TAX_PRIORITY, TAX_RATE, COUNTRY_ID, MERCHANT_ID, PARENT_ID, TAX_CLASS_ID, ZONE_ID) select TAX_RATE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, TAX_CODE, PIGGYBACK, STORE_STATE_PROV, TAX_PRIORITY, TAX_RATE, COUNTRY_ID, MERCHANT_ID, PARENT_ID, TAX_CLASS_ID, ZONE_ID from BAK_TAX_RATE";
	public static final Map<String, String> resotreSqlMap = new HashMap<String, String>();
	static {
		resotreSqlMap.put("CUSTOMER_OPTION",sqlRestoreCUSTOMER_OPTION); 
		resotreSqlMap.put("PRODUCT_SELFPROOF",sqlRestorePRODUCT_SELFPROOF); 
		resotreSqlMap.put("CUSTOMER",sqlRestoreCUSTOMER); 
		resotreSqlMap.put("MERCHANT_LANGUAGE",sqlRestoreMERCHANT_LANGUAGE); 
		resotreSqlMap.put("PARCEL",sqlRestorePARCEL); 
		resotreSqlMap.put("PRODUCT_REVIEW_DESCRIPTION",sqlRestorePRODUCT_REVIEW_DESCRIPTION); 
		resotreSqlMap.put("USERGRADE",sqlRestoreUSERGRADE); 
		resotreSqlMap.put("MERCHANT_RANK",sqlRestoreMERCHANT_RANK); 
		resotreSqlMap.put("SM_SEQUENCER",sqlRestoreSM_SEQUENCER); 
		resotreSqlMap.put("SHOPPING_CART_ITEM",sqlRestoreSHOPPING_CART_ITEM); 
		resotreSqlMap.put("GIFTS",sqlRestoreGIFTS); 
		resotreSqlMap.put("PRODUCT_IMAGE",sqlRestorePRODUCT_IMAGE); 
		resotreSqlMap.put("PRODUCT_OPTION_DESC",sqlRestorePRODUCT_OPTION_DESC); 
		resotreSqlMap.put("DELIVERYCOMPNY",sqlRestoreDELIVERYCOMPNY); 
		resotreSqlMap.put("PRODUCT_LITERATURE_PATH",sqlRestorePRODUCT_LITERATURE_PATH); 
		resotreSqlMap.put("MANUFACTURER_DESCRIPTION",sqlRestoreMANUFACTURER_DESCRIPTION); 
		resotreSqlMap.put("USER_GROUP",sqlRestoreUSER_GROUP); 
		resotreSqlMap.put("CUSTOMER_ADDRESS",sqlRestoreCUSTOMER_ADDRESS); 
		resotreSqlMap.put("NEWS_CONTENT",sqlRestoreNEWS_CONTENT); 
		resotreSqlMap.put("MERCHANT_RANK_PROFILE",sqlRestoreMERCHANT_RANK_PROFILE); 
		resotreSqlMap.put("PRODUCT_AVAILABILITY",sqlRestorePRODUCT_AVAILABILITY); 
		resotreSqlMap.put("CONTENT",sqlRestoreCONTENT); 
		resotreSqlMap.put("CATEGORY",sqlRestoreCATEGORY); 
		resotreSqlMap.put("SM_GROUP",sqlRestoreSM_GROUP); 
		resotreSqlMap.put("PRODUCT_THIRDPROOF",sqlRestorePRODUCT_THIRDPROOF); 
		resotreSqlMap.put("LANGUAGE",sqlRestoreLANGUAGE); 
		resotreSqlMap.put("SHOPPING_CART",sqlRestoreSHOPPING_CART); 
		resotreSqlMap.put("COUNTRY_DESCRIPTION",sqlRestoreCOUNTRY_DESCRIPTION); 
		resotreSqlMap.put("CUSTOMER_OPTION_SET",sqlRestoreCUSTOMER_OPTION_SET); 
		resotreSqlMap.put("ORDER_PRODUCT_PRICE",sqlRestoreORDER_PRODUCT_PRICE); 
		resotreSqlMap.put("CUSTOMER_ATTRIBUTE",sqlRestoreCUSTOMER_ATTRIBUTE); 
		resotreSqlMap.put("ORDER_ACCOUNT",sqlRestoreORDER_ACCOUNT); 
		resotreSqlMap.put("CUSTOMER_OPTION_DESC",sqlRestoreCUSTOMER_OPTION_DESC); 
		resotreSqlMap.put("PRODUCT_DIGITAL",sqlRestorePRODUCT_DIGITAL); 
		resotreSqlMap.put("CURRENCY",sqlRestoreCURRENCY); 
		resotreSqlMap.put("PRODUCT_CATEGORY",sqlRestorePRODUCT_CATEGORY); 
		resotreSqlMap.put("ORDER_PRODUCT_DOWNLOAD",sqlRestoreORDER_PRODUCT_DOWNLOAD); 
		resotreSqlMap.put("PRODUCT_BROWSW",sqlRestorePRODUCT_BROWSW); 
		resotreSqlMap.put("PRODUCT_IMAGE_DESCRIPTION",sqlRestorePRODUCT_IMAGE_DESCRIPTION); 
		resotreSqlMap.put("MEMBER_POINTS",sqlRestoreMEMBER_POINTS); 
		resotreSqlMap.put("SYSTEM_NOTIFICATION",sqlRestoreSYSTEM_NOTIFICATION); 
		resotreSqlMap.put("SUBORDERS",sqlRestoreSUBORDERS); 
		resotreSqlMap.put("PRODUCT",sqlRestorePRODUCT); 
		resotreSqlMap.put("MODULE_CONFIGURATION",sqlRestoreMODULE_CONFIGURATION); 
		resotreSqlMap.put("ZONE",sqlRestoreZONE); 
		resotreSqlMap.put("CUSTOMER_GROUP",sqlRestoreCUSTOMER_GROUP); 
		resotreSqlMap.put("GEOZONE",sqlRestoreGEOZONE); 
		resotreSqlMap.put("SYSTEM_CONFIGURATION",sqlRestoreSYSTEM_CONFIGURATION); 
		resotreSqlMap.put("ORDER_STATUS_HISTORY",sqlRestoreORDER_STATUS_HISTORY); 
		resotreSqlMap.put("PRODUCT_ATTRIBUTE",sqlRestorePRODUCT_ATTRIBUTE); 
		resotreSqlMap.put("AUTH_BRAND",sqlRestoreAUTH_BRAND); 
		resotreSqlMap.put("CONTENT_DESCRIPTION",sqlRestoreCONTENT_DESCRIPTION); 
		resotreSqlMap.put("PRODUCT_RELATIONSHIP",sqlRestorePRODUCT_RELATIONSHIP); 
		resotreSqlMap.put("AUTHORIZATION",sqlRestoreAUTHORIZATION); 
		resotreSqlMap.put("CUSTOMER_OPT_VAL_DESCRIPTION",sqlRestoreCUSTOMER_OPT_VAL_DESCRIPTION); 
		resotreSqlMap.put("GEOZONE_DESCRIPTION",sqlRestoreGEOZONE_DESCRIPTION); 
		resotreSqlMap.put("CUSTOMER_OPTION_VALUE",sqlRestoreCUSTOMER_OPTION_VALUE); 
		resotreSqlMap.put("BRAND_USERSEGMENT_DISCOUNT",sqlRestoreBRAND_USERSEGMENT_DISCOUNT); 
		resotreSqlMap.put("GIFT_ORDER",sqlRestoreGIFT_ORDER); 
		resotreSqlMap.put("SHOPPING_CART_ATTR_ITEM",sqlRestoreSHOPPING_CART_ATTR_ITEM); 
		resotreSqlMap.put("PRODUCT_PROOF",sqlRestorePRODUCT_PROOF); 
		resotreSqlMap.put("ORDER_TOTAL",sqlRestoreORDER_TOTAL); 
		resotreSqlMap.put("USERLOGIN",sqlRestoreUSERLOGIN); 
		resotreSqlMap.put("MERCHANT_STORE",sqlRestoreMERCHANT_STORE); 
		resotreSqlMap.put("PERMISSION",sqlRestorePERMISSION); 
		resotreSqlMap.put("MERCHANT_LOG",sqlRestoreMERCHANT_LOG); 
		resotreSqlMap.put("COUNTRY",sqlRestoreCOUNTRY); 
		resotreSqlMap.put("PRODUCT_OPTION",sqlRestorePRODUCT_OPTION); 
		resotreSqlMap.put("MANUFACTURER",sqlRestoreMANUFACTURER); 
		resotreSqlMap.put("SPECIAL_CONFIGURATION",sqlRestoreSPECIAL_CONFIGURATION); 
		resotreSqlMap.put("TAX_RATE_DESCRIPTION",sqlRestoreTAX_RATE_DESCRIPTION); 
		resotreSqlMap.put("ORDERS",sqlRestoreORDERS); 
		resotreSqlMap.put("PRODUCT_PRICE_DESCRIPTION",sqlRestorePRODUCT_PRICE_DESCRIPTION); 
		resotreSqlMap.put("ZONE_DESCRIPTION",sqlRestoreZONE_DESCRIPTION); 
		resotreSqlMap.put("USER_SEGMENT",sqlRestoreUSER_SEGMENT); 
		resotreSqlMap.put("FILE_HISTORY",sqlRestoreFILE_HISTORY); 
		resotreSqlMap.put("ORDER_ACCOUNT_PRODUCT",sqlRestoreORDER_ACCOUNT_PRODUCT); 
		resotreSqlMap.put("CUSTOMER_INVOICE",sqlRestoreCUSTOMER_INVOICE); 
		resotreSqlMap.put("COMMON_SOFTWARE",sqlRestoreCOMMON_SOFTWARE); 
		resotreSqlMap.put("MERCHANT_CONFIGURATION",sqlRestoreMERCHANT_CONFIGURATION); 
		resotreSqlMap.put("PRODUCT_DESCRIPTION",sqlRestorePRODUCT_DESCRIPTION); 
		resotreSqlMap.put("BASEDATA_TYPE",sqlRestoreBASEDATA_TYPE); 
		resotreSqlMap.put("PRODUCT_OPTION_VALUE_DESCRIPTION",sqlRestorePRODUCT_OPTION_VALUE_DESCRIPTION); 
		resotreSqlMap.put("BRAND_DISCOUNT",sqlRestoreBRAND_DISCOUNT); 
		resotreSqlMap.put("CUSTOMER_IMAGE",sqlRestoreCUSTOMER_IMAGE); 
		resotreSqlMap.put("PRODUCT_PRICE",sqlRestorePRODUCT_PRICE); 
		resotreSqlMap.put("PRODUCT_REVIEW",sqlRestorePRODUCT_REVIEW); 
		resotreSqlMap.put("PRODUCT_TYPE",sqlRestorePRODUCT_TYPE); 
		resotreSqlMap.put("CATEGORY_DESCRIPTION",sqlRestoreCATEGORY_DESCRIPTION); 
		resotreSqlMap.put("ORDER_PRODUCT",sqlRestoreORDER_PRODUCT); 
		resotreSqlMap.put("ORDER_PRODUCT_ATTRIBUTE",sqlRestoreORDER_PRODUCT_ATTRIBUTE); 
		resotreSqlMap.put("TAX_CLASS",sqlRestoreTAX_CLASS); 
		resotreSqlMap.put("PERMISSION_GROUP",sqlRestorePERMISSION_GROUP); 
		resotreSqlMap.put("PRODUCT_OPTION_VALUE",sqlRestorePRODUCT_OPTION_VALUE); 
		resotreSqlMap.put("SM_TRANSACTION",sqlRestoreSM_TRANSACTION); 
		resotreSqlMap.put("USER",sqlRestoreUSER); 
		resotreSqlMap.put("PRODUCT_CERTIFICATE",sqlRestorePRODUCT_CERTIFICATE); 
		resotreSqlMap.put("TAX_RATE",sqlRestoreTAX_RATE); 
	}
}

/*
 * 备份表创建语句 
CREATE TABLE `BAK_CUSTOMER_OPTION` (
  `CUSTOMER_OPTION_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `CUSTOMER_OPT_ACTIVE` tinyint(1) DEFAULT NULL,
  `CUSTOMER_OPT_CODE` varchar(255) NOT NULL,
  `CUSTOMER_OPTION_TYPE` varchar(10) DEFAULT NULL,
  `CUSTOMER_OPT_PUBLIC` tinyint(1) DEFAULT NULL,
  `SORT_ORDER` int(11) DEFAULT NULL,
  `MERCHANT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`CUSTOMER_OPTION_ID`),
  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`,`CUSTOMER_OPT_CODE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_SELFPROOF` (
  `PRODUCT_SELFPROOF_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `SORT_ORDER` int(11) DEFAULT NULL,
  `SELFPROOF_IMAGE` varchar(255) DEFAULT NULL,
  `TITLE` varchar(100) DEFAULT NULL,
  `PRODUCT_ID` bigint(20) NOT NULL,
  `SELFPROOF_TYPE` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`PRODUCT_SELFPROOF_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_CUSTOMER` (
  `CUSTOMER_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `ADDRESS_DEFAULT` bigint(20) DEFAULT NULL,
  `CUSTOMER_ANONYMOUS` int(11) DEFAULT NULL,
  `COMPANY` varchar(255) DEFAULT NULL,
  `CUSTOMER_DOB` datetime DEFAULT NULL,
  `CUSTOMER_EMAIL_ADDRESS` varchar(96) NOT NULL,
  `CUSTOMER_GENDER` varchar(1) DEFAULT NULL,
  `GRADE` int(11) DEFAULT NULL,
  `INVOICE_DEFAULT` bigint(20) DEFAULT NULL,
  `INVOICE_ADDRES_DEFAULT` bigint(20) DEFAULT NULL,
  `CUSTOMER_NICK` varchar(96) DEFAULT NULL,
  `CUSTOMER_PASSWORD` varchar(50) DEFAULT NULL,
  `PHONE` varchar(11) DEFAULT NULL,
  `POINTS` varchar(10) DEFAULT NULL,
  `PROJECT` varchar(255) DEFAULT NULL,
  `RECIEVE_EMAIL` tinyint(1) DEFAULT NULL,
  `RECIEVE_PHONE` tinyint(1) DEFAULT NULL,
  `RECIEVE_PHONETIME` varchar(255) DEFAULT NULL,
  `LANGUAGE_ID` int(11) NOT NULL,
  `MERCHANT_ID` bigint(20) NOT NULL,
  `RELATEIONSHIP` varchar(255) DEFAULT NULL,
  `CUSTOMER_DISCOUNT` double DEFAULT NULL,
  `ACCOUNT_STATE` varchar(255) NOT NULL DEFAULT 'certified',
  `ACCOUT_TYPE` varchar(255) NOT NULL DEFAULT 'research',
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `RELATE_SALES_EMAIL` varchar(255) DEFAULT NULL,
  `RELATE_SALES_PHONE` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`CUSTOMER_ID`),
  UNIQUE KEY `CUSTOMER_ID` (`CUSTOMER_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_MERCHANT_LANGUAGE` (
  `stores_MERCHANT_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `languages_LANGUAGE_ID` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PARCEL` (
  `PARCEL_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `NAME` varchar(32) DEFAULT NULL,
  `CUSTMOER_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`PARCEL_ID`),
  UNIQUE KEY `PARCEL_ID` (`PARCEL_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_REVIEW_DESCRIPTION` (
  `DESCRIPTION_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `NAME` varchar(120) NOT NULL,
  `TITLE` varchar(100) DEFAULT NULL,
  `LANGUAGE_ID` int(11) NOT NULL,
  `PRODUCT_REVIEW_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`DESCRIPTION_ID`),
  UNIQUE KEY `PRODUCT_REVIEW_ID` (`PRODUCT_REVIEW_ID`,`LANGUAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_USERGRADE` (
  `CATEGORY_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `CODE` varchar(96) DEFAULT NULL,
  `TYPE` int(11) DEFAULT NULL,
  `VALUE` int(11) DEFAULT NULL,
  PRIMARY KEY (`CATEGORY_ID`),
  UNIQUE KEY `CATEGORY_ID` (`CATEGORY_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_MERCHANT_RANK` (
  `RANK_ID` int(11) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `NUM_DIAMOND_PRODUCT` int(11) NOT NULL,
  `RANK_NAME` varchar(255) NOT NULL,
  `RANK_NAME_ZH` varchar(255) NOT NULL,
  PRIMARY KEY (`RANK_ID`),
  UNIQUE KEY `RANK_ID` (`RANK_ID`),
  UNIQUE KEY `RANK_NAME` (`RANK_NAME`),
  UNIQUE KEY `RANK_NAME_ZH_UNIQUE` (`RANK_NAME_ZH`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_SM_SEQUENCER` (
  `SEQ_NAME` varchar(255) DEFAULT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `SEQ_COUNT` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_SHOPPING_CART_ITEM` (
  `SHP_CART_ITEM_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `ISSELECTED` tinyint(1) NOT NULL,
  `PRICE_ID` bigint(20) NOT NULL,
  `PRODUCT_ID` bigint(20) NOT NULL,
  `QUANTITY` int(11) DEFAULT NULL,
  `SHP_CART_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`SHP_CART_ITEM_ID`),
  UNIQUE KEY `SHP_CART_ITEM_ID` (`SHP_CART_ITEM_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_GIFTS` (
  `GIFT_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `GIFT_NAME` varchar(100) DEFAULT NULL,
  `GIFT_PICTURE_SRC` varchar(255) DEFAULT NULL,
  `GIFT_POINTS` bigint(20) DEFAULT NULL,
  `GIFT_PRICE` bigint(20) DEFAULT NULL,
  `GIFT_DEADLINE` datetime DEFAULT NULL,
  `GIFT_TOTAL` bigint(20) DEFAULT NULL,
  `GIFT_TYPE` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`GIFT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_IMAGE` (
  `PRODUCT_IMAGE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `DEFAULT_IMAGE` tinyint(1) DEFAULT NULL,
  `IMAGE_CROP` tinyint(1) DEFAULT NULL,
  `IMAGE_TYPE` int(11) DEFAULT NULL,
  `PRODUCT_IMAGE` varchar(255) DEFAULT NULL,
  `PRODUCT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`PRODUCT_IMAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_OPTION_DESC` (
  `DESCRIPTION_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `NAME` varchar(120) NOT NULL,
  `TITLE` varchar(100) DEFAULT NULL,
  `PRODUCT_OPTION_COMMENT` longtext,
  `LANGUAGE_ID` int(11) NOT NULL,
  `PRODUCT_OPTION_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`DESCRIPTION_ID`),
  UNIQUE KEY `PRODUCT_OPTION_ID` (`PRODUCT_OPTION_ID`,`LANGUAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_DELIVERYCOMPNY` (
  `DELIVERYCOMPNY_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `DELIVERY_ADDRESS` varchar(256) DEFAULT NULL,
  `DELIVERY_CODE` varchar(32) DEFAULT NULL,
  `DELIVERY_CONTACTS` varchar(32) DEFAULT NULL,
  `DELIVERY_NAME` varchar(256) DEFAULT NULL,
  `DELIVERY_TELEPHONE` varchar(32) DEFAULT NULL,
  PRIMARY KEY (`DELIVERYCOMPNY_ID`),
  UNIQUE KEY `DELIVERYCOMPNY_ID` (`DELIVERYCOMPNY_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_LITERATURE_PATH` (
  `PRODUCT_LITERATURE_PATH_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `PATH` varchar(3000) DEFAULT NULL,
  `PRODUCT_CERTIFICATE_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`PRODUCT_LITERATURE_PATH_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_MANUFACTURER_DESCRIPTION` (
  `DESCRIPTION_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `NAME` varchar(120) NOT NULL,
  `TITLE` varchar(100) DEFAULT NULL,
  `DATE_LAST_CLICK` datetime DEFAULT NULL,
  `MANUFACTURERS_URL` varchar(255) DEFAULT NULL,
  `URL_CLICKED` int(11) DEFAULT NULL,
  `LANGUAGE_ID` int(11) NOT NULL,
  `MANUFACTURER_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`DESCRIPTION_ID`),
  UNIQUE KEY `MANUFACTURER_ID` (`MANUFACTURER_ID`,`LANGUAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_USER_GROUP` (
  `USER_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `GROUP_ID` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_CUSTOMER_ADDRESS` (
  `CUSTOMER_ADDRESS_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `STREET_ADDRESS` varchar(256) DEFAULT NULL,
  `CITY` varchar(100) DEFAULT NULL,
  `COMPANY` varchar(500) DEFAULT NULL,
  `MEMO` varchar(500) DEFAULT NULL,
  `NAME` varchar(255) DEFAULT NULL,
  `POSTCODE` varchar(20) DEFAULT NULL,
  `STATE` varchar(100) DEFAULT NULL,
  `TELEPHONE` varchar(32) DEFAULT NULL,
  `TYPE` int(11) DEFAULT NULL,
  `BILLING_COUNTRY_ID` int(11) NOT NULL,
  `CUSTOMER_ID` bigint(20) NOT NULL,
  `BILLING_ZONE_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`CUSTOMER_ADDRESS_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_NEWS_CONTENT` (
  `NEWS_CONTENT_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `CODE` varchar(100) DEFAULT NULL,
  `CONTENT` longtext,
  `DATE_CREATED` datetime DEFAULT NULL,
  `IMAGE` varchar(200) DEFAULT NULL,
  `ISPUBLISH` tinyint(1) DEFAULT NULL,
  `KEYWORDS` varchar(200) DEFAULT NULL,
  `LINKHREF` varchar(500) DEFAULT NULL,
  `LINKTEXT` varchar(200) DEFAULT NULL,
  `NAME` varchar(255) DEFAULT NULL,
  `DATE_PUBLISH` datetime DEFAULT NULL,
  `SUMMARY` varchar(1000) DEFAULT NULL,
  `TYPE` int(11) DEFAULT NULL,
  `USERCODE` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`NEWS_CONTENT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_MERCHANT_RANK_PROFILE` (
  `MCHTRANKPROFILE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `NUM_DIAMOND_PRODUCT` int(11) DEFAULT NULL,
  `RANK_ID` int(11) DEFAULT NULL,
  PRIMARY KEY (`MCHTRANKPROFILE_ID`),
  UNIQUE KEY `MCHTRANKPROFILE_ID` (`MCHTRANKPROFILE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_AVAILABILITY` (
  `PRODUCT_AVAIL_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `DATE_AVAILABLE` date DEFAULT NULL,
  `FREE_SHIPPING` tinyint(1) DEFAULT NULL,
  `QUANTITY` int(11) NOT NULL,
  `QUANTITY_ORD_MAX` int(11) DEFAULT NULL,
  `QUANTITY_ORD_MIN` int(11) DEFAULT NULL,
  `STATUS` tinyint(1) DEFAULT NULL,
  `REGION` varchar(255) DEFAULT NULL,
  `REGION_VARIANT` varchar(255) DEFAULT NULL,
  `PRODUCT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`PRODUCT_AVAIL_ID`),
  UNIQUE KEY `PRODUCT_AVAIL_ID` (`PRODUCT_AVAIL_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_CONTENT` (
  `CONTENT_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `CODE` varchar(100) NOT NULL,
  `CONTENT_POSITION` varchar(10) DEFAULT NULL,
  `CONTENT_TYPE` varchar(10) DEFAULT NULL,
  `SORT_ORDER` int(11) DEFAULT NULL,
  `VISIBLE` tinyint(1) DEFAULT NULL,
  `MERCHANT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`CONTENT_ID`),
  UNIQUE KEY `CONTENT_ID` (`CONTENT_ID`),
  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`,`CODE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_CATEGORY` (
  `CATEGORY_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `CATEGORY_IMAGE` varchar(100) DEFAULT NULL,
  `CATEGORY_STATUS` tinyint(1) DEFAULT NULL,
  `CODE` varchar(100) NOT NULL,
  `DEPTH` int(11) DEFAULT NULL,
  `LINEAGE` varchar(255) DEFAULT NULL,
  `SORT_ORDER` int(11) DEFAULT NULL,
  `VISIBLE` tinyint(1) DEFAULT NULL,
  `MERCHANT_ID` bigint(20) NOT NULL,
  `PARENT_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`CATEGORY_ID`),
  UNIQUE KEY `CATEGORY_ID` (`CATEGORY_ID`),
  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`,`CODE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_SM_GROUP` (
  `GROUP_ID` int(11) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `GROUP_NAME` varchar(255) NOT NULL,
  `GROUP_TYPE` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`GROUP_ID`),
  UNIQUE KEY `GROUP_ID` (`GROUP_ID`),
  UNIQUE KEY `GROUP_NAME` (`GROUP_NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_THIRDPROOF` (
  `PRODUCT_THIRDPROOF_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `SORT_ORDER` int(11) DEFAULT NULL,
  `THIRDPROOF_IMAGE` varchar(255) DEFAULT NULL,
  `TITLE` varchar(100) DEFAULT NULL,
  `BASEDATATYPE_ID` bigint(20) NOT NULL,
  `PRODUCT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`PRODUCT_THIRDPROOF_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_LANGUAGE` (
  `LANGUAGE_ID` int(11) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `CODE` varchar(255) NOT NULL,
  `SORT_ORDER` int(11) DEFAULT NULL,
  PRIMARY KEY (`LANGUAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_SHOPPING_CART` (
  `SHP_CART_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `CUSTOMER_ID` bigint(20) DEFAULT NULL,
  `SHP_CART_CODE` varchar(255) NOT NULL,
  `MERCHANT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`SHP_CART_ID`),
  UNIQUE KEY `SHP_CART_ID` (`SHP_CART_ID`),
  UNIQUE KEY `SHP_CART_CODE` (`SHP_CART_CODE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_COUNTRY_DESCRIPTION` (
  `DESCRIPTION_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `NAME` varchar(120) NOT NULL,
  `TITLE` varchar(100) DEFAULT NULL,
  `LANGUAGE_ID` int(11) NOT NULL,
  `COUNTRY_ID` int(11) NOT NULL,
  PRIMARY KEY (`DESCRIPTION_ID`),
  UNIQUE KEY `COUNTRY_ID` (`COUNTRY_ID`,`LANGUAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_CUSTOMER_OPTION_SET` (
  `CUSTOMER_OPTIONSET_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `SORT_ORDER` int(11) DEFAULT NULL,
  `CUSTOMER_OPTION_ID` bigint(20) NOT NULL,
  `CUSTOMER_OPTION_VALUE_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`CUSTOMER_OPTIONSET_ID`),
  UNIQUE KEY `CUSTOMER_OPTIONSET_ID` (`CUSTOMER_OPTIONSET_ID`),
  UNIQUE KEY `CUSTOMER_OPTION_ID` (`CUSTOMER_OPTION_ID`,`CUSTOMER_OPTION_VALUE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_ORDER_PRODUCT_PRICE` (
  `ORDER_PRODUCT_PRICE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_PRICE` decimal(19,2) NOT NULL,
  `PRODUCT_PRICE_CODE` varchar(64) NOT NULL,
  `PRODUCT_PRICE_NAME` varchar(255) DEFAULT NULL,
  `PRODUCT_PRICE_SPECIAL` decimal(19,2) DEFAULT NULL,
  `PRD_PRICE_SPECIAL_END_DT` datetime DEFAULT NULL,
  `PRD_PRICE_SPECIAL_ST_DT` datetime DEFAULT NULL,
  `ORDER_PRODUCT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`ORDER_PRODUCT_PRICE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_CUSTOMER_ATTRIBUTE` (
  `CUSTOMER_ATTRIBUTE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `CUSTOMER_ATTR_TXT_VAL` varchar(255) DEFAULT NULL,
  `CUSTOMER_ID` bigint(20) NOT NULL,
  `OPTION_ID` bigint(20) NOT NULL,
  `OPTION_VALUE_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`CUSTOMER_ATTRIBUTE_ID`),
  UNIQUE KEY `CUSTOMER_ATTRIBUTE_ID` (`CUSTOMER_ATTRIBUTE_ID`),
  UNIQUE KEY `OPTION_ID` (`OPTION_ID`,`CUSTOMER_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_ORDER_ACCOUNT` (
  `ORDER_ACCOUNT_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `ORDER_ACCOUNT_BILL_DAY` int(11) NOT NULL,
  `ORDER_ACCOUNT_END_DATE` date DEFAULT NULL,
  `ORDER_ACCOUNT_START_DATE` date NOT NULL,
  `ORDER_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`ORDER_ACCOUNT_ID`),
  UNIQUE KEY `ORDER_ACCOUNT_ID` (`ORDER_ACCOUNT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_CUSTOMER_OPTION_DESC` (
  `DESCRIPTION_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `NAME` varchar(120) NOT NULL,
  `TITLE` varchar(100) DEFAULT NULL,
  `CUSTOMER_OPTION_COMMENT` longtext,
  `LANGUAGE_ID` int(11) NOT NULL,
  `CUSTOMER_OPTION_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`DESCRIPTION_ID`),
  UNIQUE KEY `CUSTOMER_OPTION_ID` (`CUSTOMER_OPTION_ID`,`LANGUAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_DIGITAL` (
  `PRODUCT_DIGITAL_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `FILE_NAME` varchar(255) NOT NULL,
  `PRODUCT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`PRODUCT_DIGITAL_ID`),
  UNIQUE KEY `PRODUCT_ID` (`PRODUCT_ID`,`FILE_NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_CURRENCY` (
  `CURRENCY_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `CURRENCY_CODE` varchar(255) DEFAULT NULL,
  `CURRENCY_CURRENCY_CODE` varchar(255) NOT NULL,
  `CURRENCY_NAME` varchar(255) DEFAULT NULL,
  `CURRENCY_SUPPORTED` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`CURRENCY_ID`),
  UNIQUE KEY `CURRENCY_CURRENCY_CODE` (`CURRENCY_CURRENCY_CODE`),
  UNIQUE KEY `CURRENCY_CODE` (`CURRENCY_CODE`),
  UNIQUE KEY `CURRENCY_NAME` (`CURRENCY_NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_CATEGORY` (
  `PRODUCT_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `CATEGORY_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`PRODUCT_ID`,`CATEGORY_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_ORDER_PRODUCT_DOWNLOAD` (
  `ORDER_PRODUCT_DOWNLOAD_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `DOWNLOAD_COUNT` int(11) NOT NULL,
  `DOWNLOAD_MAXDAYS` int(11) NOT NULL,
  `ORDER_PRODUCT_FILENAME` varchar(255) NOT NULL,
  `ORDER_PRODUCT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`ORDER_PRODUCT_DOWNLOAD_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_BROWSW` (
  `PRODUCT_BROWSE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `BROWSE_DATE` datetime DEFAULT NULL,
  `CUSTMOER_ID` bigint(20) DEFAULT NULL,
  `PRODUCT_ID` bigint(20) DEFAULT NULL,
  `IP` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`PRODUCT_BROWSE_ID`),
  UNIQUE KEY `PRODUCT_BROWSE_ID` (`PRODUCT_BROWSE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_IMAGE_DESCRIPTION` (
  `DESCRIPTION_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `NAME` varchar(120) NOT NULL,
  `TITLE` varchar(100) DEFAULT NULL,
  `ALT_TAG` varchar(100) DEFAULT NULL,
  `LANGUAGE_ID` int(11) NOT NULL,
  `PRODUCT_IMAGE_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`DESCRIPTION_ID`),
  UNIQUE KEY `PRODUCT_IMAGE_ID` (`PRODUCT_IMAGE_ID`,`LANGUAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_MEMBER_POINTS` (
  `MEMBER_POINTS_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `TYPE` varchar(100) DEFAULT NULL,
  `VALUE` varchar(10) DEFAULT NULL,
  `CUSTOMER_ID` bigint(20) NOT NULL,
  `DATEVALID` datetime DEFAULT NULL,
  `LTFE_POINT` bigint(20) DEFAULT NULL,
  `STATAS` int(11) DEFAULT NULL,
  `UPDATE_DATE` datetime DEFAULT NULL,
  `ORDER_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`MEMBER_POINTS_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_SYSTEM_NOTIFICATION` (
  `SYSTEM_NOTIF_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `END_DATE` date DEFAULT NULL,
  `CONFIG_KEY` varchar(255) DEFAULT NULL,
  `START_DATE` date DEFAULT NULL,
  `VALUE` varchar(255) DEFAULT NULL,
  `MERCHANT_ID` bigint(20) DEFAULT NULL,
  `USER_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`SYSTEM_NOTIF_ID`),
  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`,`CONFIG_KEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_SUBORDERS` (
  `SUBORDER_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `DELIVERY_CODE` varchar(255) DEFAULT NULL,
  `DELIVERY_NUMBER` varchar(255) DEFAULT NULL,
  `LAST_MODIFIED` datetime DEFAULT NULL,
  `ORDER_STATUS` varchar(255) DEFAULT NULL,
  `ORDER_TOTAL` decimal(19,2) DEFAULT NULL,
  `MERCHANTID` bigint(20) DEFAULT NULL,
  `ORDER_ID` bigint(20) NOT NULL,
  `STORE_NAME` varchar(255) DEFAULT NULL,
  `PAY_PROOF` varchar(255) DEFAULT NULL,
  `FINAL_TOTAL` decimal(19,2) DEFAULT NULL,
  `RELATE_SALES_EMAIL` varchar(255) DEFAULT NULL,
  `RELATE_SALES_PHONE` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`SUBORDER_ID`),
  UNIQUE KEY `SUBORDER_ID` (`SUBORDER_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT` (
  `PRODUCT_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `AVAILABLE` tinyint(1) DEFAULT NULL,
  `BATCHNUM` varchar(255) DEFAULT NULL,
  `CAS` varchar(255) DEFAULT NULL,
  `CODE` varchar(255) NOT NULL,
  `DATE_AVAILABLE` datetime DEFAULT NULL,
  `DATE_ChargeBegin` datetime DEFAULT NULL,
  `DATE_ChargeEnd` datetime DEFAULT NULL,
  `PRODUCT_FREE` tinyint(1) DEFAULT NULL,
  `QUANTITY_ORDERED` int(11) DEFAULT NULL,
  `REVIEW_AVG` decimal(19,2) DEFAULT NULL,
  `REVIEW_COUNT` int(11) DEFAULT NULL,
  `QUALITY_SCORE` int(11) DEFAULT NULL,
  `SKU` varchar(255) DEFAULT NULL,
  `MANUFACTURER_ID` bigint(20) DEFAULT NULL,
  `MERCHANT_ID` bigint(20) NOT NULL,
  `Parcel_ID` bigint(20) DEFAULT NULL,
  `PRODUCT_TYPE_ID` bigint(20) DEFAULT NULL,
  `SORT_ORDER` int(11) DEFAULT NULL,
  `SPRICE` varchar(255) DEFAULT NULL,
  `PRODUCT_DIAMOND` tinyint(1) DEFAULT '0',
  `SEARCH_CONTENT` varchar(1000) DEFAULT NULL,
  PRIMARY KEY (`PRODUCT_ID`),
  UNIQUE KEY `PRODUCT_ID` (`PRODUCT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_MODULE_CONFIGURATION` (
  `MODULE_CONF_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `CODE` varchar(255) NOT NULL,
  `DETAILS` longtext,
  `CONFIGURATION` longtext,
  `CUSTOM_IND` tinyint(1) DEFAULT NULL,
  `IMAGE` varchar(255) DEFAULT NULL,
  `MODULE` varchar(255) DEFAULT NULL,
  `REGIONS` varchar(255) DEFAULT NULL,
  `TYPE` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`MODULE_CONF_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_ZONE` (
  `ZONE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `ZONE_CODE` varchar(255) NOT NULL,
  `COUNTRY_ID` int(11) NOT NULL,
  PRIMARY KEY (`ZONE_ID`),
  UNIQUE KEY `ZONE_CODE` (`ZONE_CODE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_CUSTOMER_GROUP` (
  `CUSTOMER_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `GROUP_ID` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_GEOZONE` (
  `GEOZONE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `GEOZONE_CODE` varchar(255) DEFAULT NULL,
  `GEOZONE_NAME` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`GEOZONE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_SYSTEM_CONFIGURATION` (
  `SYSTEM_CONFIG_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `CONFIG_KEY` varchar(255) DEFAULT NULL,
  `VALUE` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`SYSTEM_CONFIG_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_ORDER_STATUS_HISTORY` (
  `ORDER_STATUS_HISTORY_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `COMMENTS` longtext,
  `CUSTOMER_NOTIFIED` int(11) DEFAULT NULL,
  `DATE_ADDED` datetime NOT NULL,
  `status` varchar(255) DEFAULT NULL,
  `ORDER_ID` bigint(20) NOT NULL,
  `SUBORDER_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`ORDER_STATUS_HISTORY_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_ATTRIBUTE` (
  `PRODUCT_ATTRIBUTE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_ATTRIBUTE_DEFAULT` tinyint(1) DEFAULT NULL,
  `PRODUCT_ATTRIBUTE_DISCOUNTED` tinyint(1) DEFAULT NULL,
  `PRODUCT_ATTRIBUTE_FOR_DISP` tinyint(1) DEFAULT NULL,
  `PRODUCT_ATTRIBUTE_REQUIRED` tinyint(1) DEFAULT NULL,
  `PRODUCT_ATTRIBUTE_FREE` tinyint(1) DEFAULT NULL,
  `PRODUCT_ATRIBUTE_PRICE` decimal(19,2) DEFAULT NULL,
  `PRODUCT_ATTRIBUTE_WEIGHT` decimal(19,2) DEFAULT NULL,
  `PRODUCT_ATTRIBUTE_SORT_ORD` int(11) DEFAULT NULL,
  `PRODUCT_ID` bigint(20) NOT NULL,
  `OPTION_ID` bigint(20) NOT NULL,
  `OPTION_VALUE_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`PRODUCT_ATTRIBUTE_ID`),
  UNIQUE KEY `PRODUCT_ATTRIBUTE_ID` (`PRODUCT_ATTRIBUTE_ID`),
  UNIQUE KEY `OPTION_ID` (`OPTION_ID`,`OPTION_VALUE_ID`,`PRODUCT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_AUTH_BRAND` (
  `AUTH_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `BRAND_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`AUTH_ID`,`BRAND_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_CONTENT_DESCRIPTION` (
  `DESCRIPTION_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `NAME` varchar(120) NOT NULL,
  `TITLE` varchar(100) DEFAULT NULL,
  `META_DESCRIPTION` varchar(255) DEFAULT NULL,
  `META_KEYWORDS` varchar(255) DEFAULT NULL,
  `META_TITLE` varchar(255) DEFAULT NULL,
  `SEF_URL` varchar(120) DEFAULT NULL,
  `LANGUAGE_ID` int(11) NOT NULL,
  `CONTENT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`DESCRIPTION_ID`),
  UNIQUE KEY `CONTENT_ID` (`CONTENT_ID`,`LANGUAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_RELATIONSHIP` (
  `PRODUCT_RELATIONSHIP_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `ACTIVE` tinyint(1) DEFAULT NULL,
  `CODE` varchar(255) DEFAULT NULL,
  `PRODUCT_ID` bigint(20) DEFAULT NULL,
  `RELATED_PRODUCT_ID` bigint(20) DEFAULT NULL,
  `MERCHANT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`PRODUCT_RELATIONSHIP_ID`),
  UNIQUE KEY `PRODUCT_RELATIONSHIP_ID` (`PRODUCT_RELATIONSHIP_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_AUTHORIZATION` (
  `AUTH_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `AUTH_TYPE` int(11) DEFAULT NULL,
  `COMPANY` varchar(255) DEFAULT NULL,
  `END_TIME` date DEFAULT NULL,
  `IMAGE` varchar(255) NOT NULL,
  `INTRODUCE` varchar(1000) DEFAULT NULL,
  `START_TIME` date DEFAULT NULL,
  `MERCHANT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`AUTH_ID`),
  UNIQUE KEY `AUTH_ID` (`AUTH_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_CUSTOMER_OPT_VAL_DESCRIPTION` (
  `DESCRIPTION_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `NAME` varchar(120) NOT NULL,
  `TITLE` varchar(100) DEFAULT NULL,
  `LANGUAGE_ID` int(11) NOT NULL,
  `CUSTOMER_OPT_VAL_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`DESCRIPTION_ID`),
  UNIQUE KEY `CUSTOMER_OPT_VAL_ID` (`CUSTOMER_OPT_VAL_ID`,`LANGUAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_GEOZONE_DESCRIPTION` (
  `DESCRIPTION_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `NAME` varchar(120) NOT NULL,
  `TITLE` varchar(100) DEFAULT NULL,
  `LANGUAGE_ID` int(11) NOT NULL,
  `GEOZONE_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`DESCRIPTION_ID`),
  UNIQUE KEY `GEOZONE_ID` (`GEOZONE_ID`,`LANGUAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_CUSTOMER_OPTION_VALUE` (
  `CUSTOMER_OPTION_VALUE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `CUSTOMER_OPT_VAL_CODE` varchar(255) NOT NULL,
  `CUSTOMER_OPT_VAL_IMAGE` varchar(255) DEFAULT NULL,
  `SORT_ORDER` int(11) DEFAULT NULL,
  `MERCHANT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`CUSTOMER_OPTION_VALUE_ID`),
  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`,`CUSTOMER_OPT_VAL_CODE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_BRAND_USERSEGMENT_DISCOUNT` (
  `BRAND_DISCOUNT_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `DISCOUNTS` double DEFAULT NULL,
  `discounts_KEY` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`BRAND_DISCOUNT_ID`,`discounts_KEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_GIFT_ORDER` (
  `GIFT_ORDER_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `CREATE_DATE` datetime DEFAULT NULL,
  `DELIVERY_CODE` varchar(255) DEFAULT NULL,
  `DELIVERY_NUMBER` varchar(255) DEFAULT NULL,
  `GIFT_NUMBER` int(11) DEFAULT NULL,
  `GIFT_STATUS` varchar(255) DEFAULT NULL,
  `CUSTOMER_ID` bigint(20) NOT NULL,
  `CUSTOMER_CITY` varchar(255) DEFAULT NULL,
  `CUSTOMER_NAME` varchar(255) DEFAULT NULL,
  `GIFT_IMG` varchar(255) DEFAULT NULL,
  `GIFT_NAME` varchar(255) DEFAULT NULL,
  `GIFT_POINT` int(11) DEFAULT NULL,
  `PHONE_NUMBER` varchar(255) DEFAULT NULL,
  `SHIPPING_ADDRESS` varchar(255) DEFAULT NULL,
  `CUSTOMER_ADDRESS_ID` bigint(20) DEFAULT NULL,
  `GITF_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`GIFT_ORDER_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_SHOPPING_CART_ATTR_ITEM` (
  `SHP_CART_ATTR_ITEM_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `PRODUCT_ATTR_ID` bigint(20) NOT NULL,
  `SHP_CART_ITEM_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`SHP_CART_ATTR_ITEM_ID`),
  UNIQUE KEY `SHP_CART_ATTR_ITEM_ID` (`SHP_CART_ATTR_ITEM_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_PROOF` (
  `PRODUCT_PROOF_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DATE_BUYED` datetime DEFAULT NULL,
  `DESCRIPTION` longtext,
  `SORT_ORDER` int(11) DEFAULT NULL,
  `RPOOF_IMAGE` varchar(255) DEFAULT NULL,
  `TITLE` varchar(255) DEFAULT NULL,
  `BASEDATATYPE_ID` bigint(20) NOT NULL,
  `PRODUCT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`PRODUCT_PROOF_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_ORDER_TOTAL` (
  `ORDER_ACCOUNT_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `MODULE` varchar(60) DEFAULT NULL,
  `CODE` varchar(255) NOT NULL,
  `ORDER_TOTAL_TYPE` varchar(255) DEFAULT NULL,
  `ORDER_VALUE_TYPE` varchar(255) DEFAULT NULL,
  `SORT_ORDER` int(11) NOT NULL,
  `TEXT` longtext,
  `TITLE` varchar(255) DEFAULT NULL,
  `VALUE` decimal(15,4) NOT NULL,
  `ORDER_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`ORDER_ACCOUNT_ID`),
  UNIQUE KEY `ORDER_ACCOUNT_ID` (`ORDER_ACCOUNT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_USERLOGIN` (
  `USERLOGIN_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `IP` varchar(64) DEFAULT NULL,
  `USER_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`USERLOGIN_ID`),
  UNIQUE KEY `USERLOGIN_ID` (`USERLOGIN_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_MERCHANT_STORE` (
  `MERCHANT_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `STORE_BUSINESSLICENCE` varchar(100) DEFAULT NULL,
  `STORE_CODE` varchar(100) DEFAULT NULL,
  `CONTINUESHOPPINGURL` varchar(150) DEFAULT NULL,
  `CURRENCY_FORMAT_NATIONAL` tinyint(1) DEFAULT NULL,
  `DOMAIN_NAME` varchar(80) DEFAULT NULL,
  `STORE_ENINTRODUCE` varchar(2000) DEFAULT NULL,
  `IN_BUSINESS_SINCE` date DEFAULT NULL,
  `STORE_INTRODUCE` varchar(2000) DEFAULT NULL,
  `INVOICE_TEMPLATE` varchar(25) DEFAULT NULL,
  `STORE_QQ` varchar(50) DEFAULT NULL,
  `STORE_SEEDED` tinyint(1) DEFAULT NULL,
  `SEIZEUNITCODE` varchar(5) DEFAULT NULL,
  `STORE_EMAIL` varchar(100) NOT NULL,
  `STORE_LOGO` varchar(100) DEFAULT NULL,
  `STORE_TEMPLATE` varchar(25) DEFAULT NULL,
  `STORE_ADDRESS` varchar(255) DEFAULT NULL,
  `STORE_CITY` varchar(100) DEFAULT NULL,
  `STORE_CONTACTS` varchar(50) DEFAULT NULL,
  `STORE_FAX` varchar(50) DEFAULT NULL,
  `STORE_MOBILE` varchar(50) DEFAULT NULL,
  `STORE_NAME` varchar(100) NOT NULL,
  `STORE_PHONE` varchar(50) DEFAULT NULL,
  `STORE_POSTAL_CODE` varchar(15) DEFAULT NULL,
  `STORE_STATE_PROV` varchar(100) DEFAULT NULL,
  `USE_CACHE` tinyint(1) DEFAULT NULL,
  `isQQ` tinyint(1) DEFAULT NULL,
  `WEIGHTUNITCODE` varchar(5) DEFAULT NULL,
  `COUNTRY_ID` int(11) DEFAULT NULL,
  `CURRENCY_ID` bigint(20) NOT NULL,
  `LANGUAGE_ID` int(11) NOT NULL,
  `ZONE_ID` bigint(20) DEFAULT NULL,
  `STOREWEB` varchar(150) DEFAULT NULL,
  `SALES_EMAIL` varchar(100) DEFAULT NULL,
  `kefu` varchar(255) DEFAULT NULL,
  `xiaoshou` varchar(255) DEFAULT NULL,
  `MCHTRANKPROFILE_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`MERCHANT_ID`),
  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PERMISSION` (
  `PERMISSION_ID` int(11) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `PERMISSION_NAME` varchar(255) NOT NULL,
  PRIMARY KEY (`PERMISSION_ID`),
  UNIQUE KEY `PERMISSION_ID` (`PERMISSION_ID`),
  UNIQUE KEY `PERMISSION_NAME` (`PERMISSION_NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_MERCHANT_LOG` (
  `MERCHANT_LOG_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `LOG` longtext,
  `MODULE` varchar(25) DEFAULT NULL,
  `MERCHANT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`MERCHANT_LOG_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_COUNTRY` (
  `COUNTRY_ID` int(11) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `COUNTRY_ISOCODE` varchar(255) NOT NULL,
  `COUNTRY_SUPPORTED` tinyint(1) DEFAULT NULL,
  `GEOZONE_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`COUNTRY_ID`),
  UNIQUE KEY `COUNTRY_ISOCODE` (`COUNTRY_ISOCODE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_OPTION` (
  `PRODUCT_OPTION_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_OPTION_CODE` varchar(255) NOT NULL,
  `PRODUCT_OPTION_SORT_ORD` int(11) DEFAULT NULL,
  `PRODUCT_OPTION_TYPE` varchar(10) DEFAULT NULL,
  `PRODUCT_OPTION_READ` tinyint(1) DEFAULT NULL,
  `MERCHANT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`PRODUCT_OPTION_ID`),
  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`,`PRODUCT_OPTION_CODE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_MANUFACTURER` (
  `MANUFACTURER_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `MANUFACTURER_IMAGE` varchar(255) DEFAULT NULL,
  `SRC_MERCHANT_ID` bigint(20) DEFAULT NULL,
  `SORT_ORDER` int(11) DEFAULT NULL,
  `MERCHANT_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`MANUFACTURER_ID`),
  UNIQUE KEY `MANUFACTURER_ID` (`MANUFACTURER_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_SPECIAL_CONFIGURATION` (
  `SPECIAL_CONFIG_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `CONFIG_KEY` varchar(255) DEFAULT NULL,
  `VALUE` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`SPECIAL_CONFIG_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_TAX_RATE_DESCRIPTION` (
  `DESCRIPTION_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `NAME` varchar(120) NOT NULL,
  `TITLE` varchar(100) DEFAULT NULL,
  `LANGUAGE_ID` int(11) NOT NULL,
  `TAX_RATE_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`DESCRIPTION_ID`),
  UNIQUE KEY `TAX_RATE_ID` (`TAX_RATE_ID`,`LANGUAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_ORDERS` (
  `ORDER_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `BILLING_STREET_ADDRESS` varchar(256) DEFAULT NULL,
  `BILLING_CITY` varchar(100) DEFAULT NULL,
  `BILLING_COMPANY` varchar(500) DEFAULT NULL,
  `BANK_ACCOUNT` varchar(500) DEFAULT NULL,
  `BANK_NANE` varchar(500) DEFAULT NULL,
  `COMPANY` varchar(500) DEFAULT NULL,
  `COMPANY_ADDRESS` varchar(500) DEFAULT NULL,
  `COMPANY_TELEPHONE` varchar(500) DEFAULT NULL,
  `TAX_NUMBER` varchar(500) DEFAULT NULL,
  `type` int(11) DEFAULT NULL,
  `BILLING_POSTCODE` varchar(20) DEFAULT NULL,
  `BILLING_TELEPHONE` varchar(32) DEFAULT NULL,
  `BILLING_USERNAME` varchar(255) DEFAULT NULL,
  `CHANNEL` varchar(255) DEFAULT NULL,
  `CARD_TYPE` varchar(255) DEFAULT NULL,
  `CC_CVV` varchar(255) DEFAULT NULL,
  `CC_EXPIRES` varchar(255) DEFAULT NULL,
  `CC_NUMBER` varchar(255) DEFAULT NULL,
  `CC_OWNER` varchar(255) DEFAULT NULL,
  `CURRENCY_VALUE` decimal(19,2) DEFAULT NULL,
  `CUSTOMER_EMAIL_ADDRESS` varchar(50) NOT NULL,
  `CUSTOMER_ID` bigint(20) DEFAULT NULL,
  `DATE_PURCHASED` datetime DEFAULT NULL,
  `IP_ADDRESS` varchar(255) DEFAULT NULL,
  `INVOICE_STREET_ADDRESS` varchar(256) DEFAULT NULL,
  `INVOICE_CITY` varchar(100) DEFAULT NULL,
  `INVOICE_COMPANY` varchar(500) DEFAULT NULL,
  `INVOICE_POSTCODE` varchar(20) DEFAULT NULL,
  `INVOICE_TELEPHONE` varchar(32) DEFAULT NULL,
  `INVOICE_USERNAME` varchar(255) DEFAULT NULL,
  `LAST_MODIFIED` datetime DEFAULT NULL,
  `LOCALE` varchar(255) DEFAULT NULL,
  `ORDER_DATE_FINISHED` datetime DEFAULT NULL,
  `ORDER_TYPE` varchar(255) DEFAULT NULL,
  `PAYMENT_MODULE_CODE` varchar(255) DEFAULT NULL,
  `PAYMENT_TYPE` varchar(255) DEFAULT NULL,
  `SHIPPING_MODULE_CODE` varchar(255) DEFAULT NULL,
  `ORDER_STATUS` varchar(255) DEFAULT NULL,
  `ORDER_TOTAL` decimal(19,2) DEFAULT NULL,
  `BILLING_COUNTRY_ID` int(11) NOT NULL,
  `BILLING_ZONE_ID` bigint(20) DEFAULT NULL,
  `CURRENCY_ID` bigint(20) DEFAULT NULL,
  `INVOICE_COUNTRY_ID` int(11) NOT NULL,
  `INVOICE_ZONE_ID` bigint(20) DEFAULT NULL,
  `STORE_NAME` varchar(255) DEFAULT NULL,
  `PROCESS_TYPE` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ORDER_ID`),
  UNIQUE KEY `ORDER_ID` (`ORDER_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_PRICE_DESCRIPTION` (
  `DESCRIPTION_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `NAME` varchar(120) NOT NULL,
  `TITLE` varchar(100) DEFAULT NULL,
  `LANGUAGE_ID` int(11) NOT NULL,
  `PRODUCT_PRICE_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`DESCRIPTION_ID`),
  UNIQUE KEY `PRODUCT_PRICE_ID` (`PRODUCT_PRICE_ID`,`LANGUAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_ZONE_DESCRIPTION` (
  `DESCRIPTION_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `NAME` varchar(120) NOT NULL,
  `TITLE` varchar(100) DEFAULT NULL,
  `LANGUAGE_ID` int(11) NOT NULL,
  `ZONE_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`DESCRIPTION_ID`),
  UNIQUE KEY `ZONE_ID` (`ZONE_ID`,`LANGUAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_USER_SEGMENT` (
  `USER_SEGMENT_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `DISCRIPTION_EN` varchar(2000) NOT NULL,
  `DISCRIPTION_ZH` varchar(2000) NOT NULL,
  `NAME` varchar(80) NOT NULL,
  `FOR_BUYER` tinyint(1) DEFAULT NULL,
  `FOR_SELLER` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`USER_SEGMENT_ID`),
  UNIQUE KEY `USER_SEGMENT_ID` (`USER_SEGMENT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_FILE_HISTORY` (
  `FILE_HISTORY_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `ACCOUNTED_DATE` datetime DEFAULT NULL,
  `DATE_ADDED` datetime NOT NULL,
  `DATE_DELETED` datetime DEFAULT NULL,
  `DOWNLOAD_COUNT` int(11) NOT NULL,
  `FILE_ID` bigint(20) DEFAULT NULL,
  `FILESIZE` int(11) NOT NULL,
  `MERCHANT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`FILE_HISTORY_ID`),
  UNIQUE KEY `FILE_HISTORY_ID` (`FILE_HISTORY_ID`),
  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`,`FILE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_ORDER_ACCOUNT_PRODUCT` (
  `ORDER_ACCOUNT_PRODUCT_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `ORDER_ACCOUNT_PRODUCT_ACCNT_DT` date DEFAULT NULL,
  `ORDER_ACCOUNT_PRODUCT_END_DT` date DEFAULT NULL,
  `ORDER_ACCOUNT_PRODUCT_EOT` datetime DEFAULT NULL,
  `ORDER_ACCOUNT_PRODUCT_L_ST_DT` datetime DEFAULT NULL,
  `ORDER_ACCOUNT_PRODUCT_L_TRX_ST` int(11) NOT NULL,
  `ORDER_ACCOUNT_PRODUCT_PM_FR_TY` int(11) NOT NULL,
  `ORDER_ACCOUNT_PRODUCT_ST_DT` date NOT NULL,
  `ORDER_ACCOUNT_PRODUCT_STATUS` int(11) NOT NULL,
  `ORDER_ACCOUNT_ID` bigint(20) NOT NULL,
  `ORDER_PRODUCT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`ORDER_ACCOUNT_PRODUCT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_CUSTOMER_INVOICE` (
  `CUSTOMER_INVOICE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `BANK_ACCOUNT` varchar(500) DEFAULT NULL,
  `BANK_NANE` varchar(500) DEFAULT NULL,
  `COMPANY` varchar(500) DEFAULT NULL,
  `COMPANY_ADDRESS` varchar(500) DEFAULT NULL,
  `COMPANY_TELEPHONE` varchar(500) DEFAULT NULL,
  `MEMO` varchar(500) DEFAULT NULL,
  `TAX_NUMBER` varchar(500) DEFAULT NULL,
  `type` int(11) DEFAULT NULL,
  `CUSTOMER_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`CUSTOMER_INVOICE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_COMMON_SOFTWARE` (
  `COMMON_SOFTWARE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `BRIEF` varchar(1000) DEFAULT NULL,
  `CLICKNUM` int(11) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `FILENAME` varchar(100) DEFAULT NULL,
  `ICONNAME` varchar(100) DEFAULT NULL,
  `NAME` varchar(100) DEFAULT NULL,
  `SIZE` varchar(20) DEFAULT NULL,
  `TORDER` int(11) DEFAULT NULL,
  `TYPE` int(11) DEFAULT NULL,
  PRIMARY KEY (`COMMON_SOFTWARE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_MERCHANT_CONFIGURATION` (
  `MERCHANT_CONFIG_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `CONFIG_KEY` varchar(255) DEFAULT NULL,
  `TYPE` varchar(255) DEFAULT NULL,
  `VALUE` longtext,
  `MERCHANT_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`MERCHANT_CONFIG_ID`),
  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`,`CONFIG_KEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_DESCRIPTION` (
  `DESCRIPTION_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `NAME` varchar(512) NOT NULL,
  `TITLE` varchar(100) DEFAULT NULL,
  `EN_NAME` varchar(512) DEFAULT NULL,
  `META_DESCRIPTION` varchar(1000) DEFAULT NULL,
  `META_KEYWORDS` varchar(255) DEFAULT NULL,
  `META_TITLE` varchar(255) DEFAULT NULL,
  `METHOD_DESCRIPTION` longtext,
  `DOWNLOAD_LNK` varchar(255) DEFAULT NULL,
  `PRODUCT_HIGHLIGHT` varchar(255) DEFAULT NULL,
  `SEF_URL` varchar(255) DEFAULT NULL,
  `SIMPLE_DESCRIPTION` varchar(1000) DEFAULT NULL,
  `STORECOND_DESCRIPTION` varchar(1000) DEFAULT NULL,
  `TEST_DESCRIPTION` longtext,
  `LANGUAGE_ID` int(11) NOT NULL,
  `PRODUCT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`DESCRIPTION_ID`),
  UNIQUE KEY `PRODUCT_ID` (`PRODUCT_ID`,`LANGUAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_BASEDATA_TYPE` (
  `BASEDATA_TYPE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `CODE` varchar(100) DEFAULT NULL,
  `NAME` varchar(255) DEFAULT NULL,
  `SORT_ORDER` int(11) DEFAULT NULL,
  `TYPE` varchar(100) DEFAULT NULL,
  `VALUE` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`BASEDATA_TYPE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_OPTION_VALUE_DESCRIPTION` (
  `DESCRIPTION_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `NAME` varchar(120) NOT NULL,
  `TITLE` varchar(100) DEFAULT NULL,
  `LANGUAGE_ID` int(11) NOT NULL,
  `PRODUCT_OPTION_VALUE_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`DESCRIPTION_ID`),
  UNIQUE KEY `PRODUCT_OPTION_VALUE_ID` (`PRODUCT_OPTION_VALUE_ID`,`LANGUAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_BRAND_DISCOUNT` (
  `BRAND_DISCOUNT_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `BRAND_ID` bigint(20) NOT NULL,
  `STORE_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`BRAND_DISCOUNT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_CUSTOMER_IMAGE` (
  `CUSTOMER_IMAGE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `CUSTOMER_IMAGE` varchar(255) DEFAULT NULL,
  `DEFAULT_IMAGE` tinyint(1) DEFAULT NULL,
  `IMAGE_CROP` tinyint(1) DEFAULT NULL,
  `IMAGE_TYPE` int(11) DEFAULT NULL,
  `REMARK` varchar(255) DEFAULT NULL,
  `CUSTOMER_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`CUSTOMER_IMAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_PRICE` (
  `PRODUCT_PRICE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_PRICE_CODE` varchar(255) NOT NULL,
  `DEFAULT_PRICE` tinyint(1) DEFAULT NULL,
  `PRODUCT_PRICE_AMOUNT` decimal(19,2) NOT NULL,
  `PRODUCT_PRICE_PERIOD` varchar(255) DEFAULT NULL,
  `PRODUCT_PRICE_SPECIAL_AMOUNT` decimal(19,2) DEFAULT NULL,
  `PRODUCT_PRICE_SPECIAL_END_DATE` date DEFAULT NULL,
  `PRODUCT_PRICE_SPECIAL_ST_DATE` date DEFAULT NULL,
  `PRODUCT_PRICE_STOCK_AMOUNT` int(11) DEFAULT NULL,
  `PRODUCT_PRICE_TYPE` varchar(20) DEFAULT NULL,
  `PRODUCT_AVAIL_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`PRODUCT_PRICE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_REVIEW` (
  `PRODUCT_REVIEW_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `REVIEW_DATE` datetime DEFAULT NULL,
  `REVIEWS_RATING` double DEFAULT NULL,
  `REVIEWS_READ` bigint(20) DEFAULT NULL,
  `STATUS` int(11) DEFAULT NULL,
  `CUSTOMERS_ID` bigint(20) DEFAULT NULL,
  `ORDER_PRODUCT_ID` bigint(20) DEFAULT NULL,
  `PRODUCT_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`PRODUCT_REVIEW_ID`),
  UNIQUE KEY `PRODUCT_REVIEW_ID` (`PRODUCT_REVIEW_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_TYPE` (
  `PRODUCT_TYPE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRD_TYPE_ADD_TO_CART` tinyint(1) DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `PRD_TYPE_CODE` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`PRODUCT_TYPE_ID`),
  UNIQUE KEY `PRODUCT_TYPE_ID` (`PRODUCT_TYPE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_CATEGORY_DESCRIPTION` (
  `DESCRIPTION_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `NAME` varchar(120) NOT NULL,
  `TITLE` varchar(100) DEFAULT NULL,
  `CATEGORY_HIGHLIGHT` varchar(255) DEFAULT NULL,
  `META_DESCRIPTION` varchar(255) DEFAULT NULL,
  `META_KEYWORDS` varchar(255) DEFAULT NULL,
  `META_TITLE` varchar(120) DEFAULT NULL,
  `SEF_URL` varchar(120) DEFAULT NULL,
  `LANGUAGE_ID` int(11) NOT NULL,
  `CATEGORY_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`DESCRIPTION_ID`),
  UNIQUE KEY `CATEGORY_ID` (`CATEGORY_ID`,`LANGUAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_ORDER_PRODUCT` (
  `ORDER_PRODUCT_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `ONETIME_CHARGE` decimal(19,2) NOT NULL,
  `PRICE` decimal(19,2) NOT NULL,
  `PRODUCT_ENNAME` varchar(512) DEFAULT NULL,
  `PRODUCT_ID` bigint(20) DEFAULT NULL,
  `PRODUCT_NAME` varchar(120) NOT NULL,
  `PRODUCT_QUANTITY` int(11) DEFAULT NULL,
  `QUALITY_SCORE` int(11) DEFAULT NULL,
  `PRODUCT_SKU` varchar(255) DEFAULT NULL,
  `SPECS` varchar(255) NOT NULL,
  `SUBORDER_ID` bigint(20) NOT NULL,
  `PRODUCT_CODE` varchar(255) DEFAULT NULL,
  `FINAL_PRICE` decimal(19,2) DEFAULT NULL,
  `FINAL_TOTAL` decimal(19,2) DEFAULT NULL,
  `PRODUCT_SPEC_ID` bigint(20) DEFAULT NULL,
  `PRODUCT_IMAGE` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ORDER_PRODUCT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_ORDER_PRODUCT_ATTRIBUTE` (
  `ORDER_PRODUCT_ATTRIBUTE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_ATTRIBUTE_IS_FREE` tinyint(1) NOT NULL,
  `PRODUCT_ATTRIBUTE_NAME` varchar(255) DEFAULT NULL,
  `PRODUCT_ATTRIBUTE_PRICE` decimal(15,4) NOT NULL,
  `PRODUCT_ATTRIBUTE_VAL_NAME` varchar(255) DEFAULT NULL,
  `PRODUCT_ATTRIBUTE_WEIGHT` decimal(15,4) DEFAULT NULL,
  `PRODUCT_OPTION_ID` bigint(20) NOT NULL,
  `PRODUCT_OPTION_VALUE_ID` bigint(20) NOT NULL,
  `ORDER_PRODUCT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`ORDER_PRODUCT_ATTRIBUTE_ID`),
  UNIQUE KEY `ORDER_PRODUCT_ATTRIBUTE_ID` (`ORDER_PRODUCT_ATTRIBUTE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_TAX_CLASS` (
  `TAX_CLASS_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `TAX_CLASS_CODE` varchar(10) NOT NULL,
  `TAX_CLASS_TITLE` varchar(32) NOT NULL,
  `MERCHANT_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`TAX_CLASS_ID`),
  UNIQUE KEY `TAX_CLASS_ID` (`TAX_CLASS_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PERMISSION_GROUP` (
  `PERMISSION_ID` int(11) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `GROUP_ID` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_OPTION_VALUE` (
  `PRODUCT_OPTION_VALUE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_OPTION_VAL_CODE` varchar(255) NOT NULL,
  `PRODUCT_OPT_FOR_DISP` tinyint(1) DEFAULT NULL,
  `PRODUCT_OPT_VAL_IMAGE` varchar(255) DEFAULT NULL,
  `PRODUCT_OPT_VAL_SORT_ORD` int(11) DEFAULT NULL,
  `MERCHANT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`PRODUCT_OPTION_VALUE_ID`),
  UNIQUE KEY `MERCHANT_ID` (`MERCHANT_ID`,`PRODUCT_OPTION_VAL_CODE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_SM_TRANSACTION` (
  `TRANSACTION_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `AMOUNT` decimal(19,2) DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `DETAILS` longtext,
  `PAYMENT_TYPE` varchar(255) DEFAULT NULL,
  `TRANSACTION_DATE` datetime DEFAULT NULL,
  `TRANSACTION_TYPE` varchar(255) DEFAULT NULL,
  `ORDER_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`TRANSACTION_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_USER` (
  `USER_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `ACTIVE` tinyint(1) DEFAULT NULL,
  `ADMIN_EMAIL` varchar(255) NOT NULL,
  `ADMIN_NAME` varchar(100) NOT NULL,
  `ADMIN_PASSWORD` varchar(50) NOT NULL,
  `ADMIN_A1` varchar(255) DEFAULT NULL,
  `ADMIN_A2` varchar(255) DEFAULT NULL,
  `ADMIN_A3` varchar(255) DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `ADMIN_FIRST_NAME` varchar(255) DEFAULT NULL,
  `LAST_ACCESS` datetime DEFAULT NULL,
  `ADMIN_LAST_NAME` varchar(255) DEFAULT NULL,
  `LOGIN_ACCESS` datetime DEFAULT NULL,
  `ADMIN_Q1` varchar(255) DEFAULT NULL,
  `ADMIN_Q2` varchar(255) DEFAULT NULL,
  `ADMIN_Q3` varchar(255) DEFAULT NULL,
  `LANGUAGE_ID` int(11) DEFAULT NULL,
  `MERCHANT_ID` bigint(20) NOT NULL,
  `ADMIN_MOBILE` varchar(50) NOT NULL,
  PRIMARY KEY (`USER_ID`),
  UNIQUE KEY `USER_ID` (`USER_ID`),
  UNIQUE KEY `ADMIN_NAME` (`ADMIN_NAME`),
  UNIQUE KEY `ADMIN_MOBILE_UNIQUE` (`ADMIN_MOBILE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_PRODUCT_CERTIFICATE` (
  `PRODUCT_CERTIFICATE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `BASEINFO` varchar(255) DEFAULT NULL,
  `CERTIFICATE_IMAGE` varchar(255) DEFAULT NULL,
  `DESCRIPTION` longtext,
  `DOC_URL` varchar(1000) DEFAULT NULL,
  `SORT_ORDER` int(11) DEFAULT NULL,
  `TITLE` varchar(1000) DEFAULT NULL,
  `BASEDATATYPE_ID` bigint(20) NOT NULL,
  `PRODUCT_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`PRODUCT_CERTIFICATE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE `BAK_TAX_RATE` (
  `TAX_RATE_ID` bigint(20) NOT NULL,
  `REC_DELETED_TIME` datetime DEFAULT NULL,
  `PRODUCT_AUDIT` int(11) DEFAULT NULL,
  `DATE_CREATED` datetime DEFAULT NULL,
  `DATE_MODIFIED` datetime DEFAULT NULL,
  `UPDT_ID` varchar(20) DEFAULT NULL,
  `TAX_CODE` varchar(255) NOT NULL,
  `PIGGYBACK` tinyint(1) DEFAULT NULL,
  `STORE_STATE_PROV` varchar(100) DEFAULT NULL,
  `TAX_PRIORITY` int(11) DEFAULT NULL,
  `TAX_RATE` decimal(7,4) NOT NULL,
  `COUNTRY_ID` int(11) NOT NULL,
  `MERCHANT_ID` bigint(20) NOT NULL,
  `PARENT_ID` bigint(20) DEFAULT NULL,
  `TAX_CLASS_ID` bigint(20) NOT NULL,
  `ZONE_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`TAX_RATE_ID`),
  UNIQUE KEY `TAX_CODE` (`TAX_CODE`,`MERCHANT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

 * 备份记录恢复语句
	insert into CUSTOMER_OPTION (CUSTOMER_OPTION_ID, CUSTOMER_OPT_ACTIVE, CUSTOMER_OPT_CODE, CUSTOMER_OPTION_TYPE, CUSTOMER_OPT_PUBLIC, SORT_ORDER, MERCHANT_ID) select CUSTOMER_OPTION_ID, CUSTOMER_OPT_ACTIVE, CUSTOMER_OPT_CODE, CUSTOMER_OPTION_TYPE, CUSTOMER_OPT_PUBLIC, SORT_ORDER, MERCHANT_ID from BAK_CUSTOMER_OPTION;
	insert into PRODUCT_SELFPROOF (PRODUCT_SELFPROOF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, SORT_ORDER, SELFPROOF_IMAGE, TITLE, PRODUCT_ID, SELFPROOF_TYPE) select PRODUCT_SELFPROOF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, SORT_ORDER, SELFPROOF_IMAGE, TITLE, PRODUCT_ID, SELFPROOF_TYPE from BAK_PRODUCT_SELFPROOF;
	insert into CUSTOMER (CUSTOMER_ID, ADDRESS_DEFAULT, CUSTOMER_ANONYMOUS, COMPANY, CUSTOMER_DOB, CUSTOMER_EMAIL_ADDRESS, CUSTOMER_GENDER, GRADE, INVOICE_DEFAULT, INVOICE_ADDRES_DEFAULT, CUSTOMER_NICK, CUSTOMER_PASSWORD, PHONE, POINTS, PROJECT, RECIEVE_EMAIL, RECIEVE_PHONE, RECIEVE_PHONETIME, LANGUAGE_ID, MERCHANT_ID, RELATEIONSHIP, CUSTOMER_DISCOUNT, ACCOUNT_STATE, ACCOUT_TYPE, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, RELATE_SALES_EMAIL, RELATE_SALES_PHONE) select CUSTOMER_ID, ADDRESS_DEFAULT, CUSTOMER_ANONYMOUS, COMPANY, CUSTOMER_DOB, CUSTOMER_EMAIL_ADDRESS, CUSTOMER_GENDER, GRADE, INVOICE_DEFAULT, INVOICE_ADDRES_DEFAULT, CUSTOMER_NICK, CUSTOMER_PASSWORD, PHONE, POINTS, PROJECT, RECIEVE_EMAIL, RECIEVE_PHONE, RECIEVE_PHONETIME, LANGUAGE_ID, MERCHANT_ID, RELATEIONSHIP, CUSTOMER_DISCOUNT, ACCOUNT_STATE, ACCOUT_TYPE, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, RELATE_SALES_EMAIL, RELATE_SALES_PHONE from BAK_CUSTOMER;
	insert into MERCHANT_LANGUAGE (stores_MERCHANT_ID, languages_LANGUAGE_ID) select stores_MERCHANT_ID, languages_LANGUAGE_ID from BAK_MERCHANT_LANGUAGE;
	insert into PARCEL (PARCEL_ID, NAME, CUSTMOER_ID) select PARCEL_ID, NAME, CUSTMOER_ID from BAK_PARCEL;
	insert into PRODUCT_REVIEW_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, PRODUCT_REVIEW_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, PRODUCT_REVIEW_ID from BAK_PRODUCT_REVIEW_DESCRIPTION;
	insert into USERGRADE (CATEGORY_ID, CODE, TYPE, VALUE) select CATEGORY_ID, CODE, TYPE, VALUE from BAK_USERGRADE;
	insert into MERCHANT_RANK (RANK_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, NUM_DIAMOND_PRODUCT, RANK_NAME, RANK_NAME_ZH) select RANK_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, NUM_DIAMOND_PRODUCT, RANK_NAME, RANK_NAME_ZH from BAK_MERCHANT_RANK;
	insert into SM_SEQUENCER (SEQ_NAME, SEQ_COUNT) select SEQ_NAME, SEQ_COUNT from BAK_SM_SEQUENCER;
	insert into SHOPPING_CART_ITEM (SHP_CART_ITEM_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, ISSELECTED, PRICE_ID, PRODUCT_ID, QUANTITY, SHP_CART_ID) select SHP_CART_ITEM_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, ISSELECTED, PRICE_ID, PRODUCT_ID, QUANTITY, SHP_CART_ID from BAK_SHOPPING_CART_ITEM;
	insert into GIFTS (GIFT_ID, GIFT_NAME, GIFT_PICTURE_SRC, GIFT_POINTS, GIFT_PRICE, GIFT_DEADLINE, GIFT_TOTAL, GIFT_TYPE) select GIFT_ID, GIFT_NAME, GIFT_PICTURE_SRC, GIFT_POINTS, GIFT_PRICE, GIFT_DEADLINE, GIFT_TOTAL, GIFT_TYPE from BAK_GIFTS;
	insert into PRODUCT_IMAGE (PRODUCT_IMAGE_ID, DEFAULT_IMAGE, IMAGE_CROP, IMAGE_TYPE, PRODUCT_IMAGE, PRODUCT_ID) select PRODUCT_IMAGE_ID, DEFAULT_IMAGE, IMAGE_CROP, IMAGE_TYPE, PRODUCT_IMAGE, PRODUCT_ID from BAK_PRODUCT_IMAGE;
	insert into PRODUCT_OPTION_DESC (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, PRODUCT_OPTION_COMMENT, LANGUAGE_ID, PRODUCT_OPTION_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, PRODUCT_OPTION_COMMENT, LANGUAGE_ID, PRODUCT_OPTION_ID from BAK_PRODUCT_OPTION_DESC;
	insert into DELIVERYCOMPNY (DELIVERYCOMPNY_ID, DELIVERY_ADDRESS, DELIVERY_CODE, DELIVERY_CONTACTS, DELIVERY_NAME, DELIVERY_TELEPHONE) select DELIVERYCOMPNY_ID, DELIVERY_ADDRESS, DELIVERY_CODE, DELIVERY_CONTACTS, DELIVERY_NAME, DELIVERY_TELEPHONE from BAK_DELIVERYCOMPNY;
	insert into PRODUCT_LITERATURE_PATH (PRODUCT_LITERATURE_PATH_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PATH, PRODUCT_CERTIFICATE_ID) select PRODUCT_LITERATURE_PATH_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PATH, PRODUCT_CERTIFICATE_ID from BAK_PRODUCT_LITERATURE_PATH;
	insert into MANUFACTURER_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, DATE_LAST_CLICK, MANUFACTURERS_URL, URL_CLICKED, LANGUAGE_ID, MANUFACTURER_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, DATE_LAST_CLICK, MANUFACTURERS_URL, URL_CLICKED, LANGUAGE_ID, MANUFACTURER_ID from BAK_MANUFACTURER_DESCRIPTION;
	insert into USER_GROUP (USER_ID, GROUP_ID) select USER_ID, GROUP_ID from BAK_USER_GROUP;
	insert into CUSTOMER_ADDRESS (CUSTOMER_ADDRESS_ID, STREET_ADDRESS, CITY, COMPANY, MEMO, NAME, POSTCODE, STATE, TELEPHONE, TYPE, BILLING_COUNTRY_ID, CUSTOMER_ID, BILLING_ZONE_ID) select CUSTOMER_ADDRESS_ID, STREET_ADDRESS, CITY, COMPANY, MEMO, NAME, POSTCODE, STATE, TELEPHONE, TYPE, BILLING_COUNTRY_ID, CUSTOMER_ID, BILLING_ZONE_ID from BAK_CUSTOMER_ADDRESS;
	insert into NEWS_CONTENT (NEWS_CONTENT_ID, CODE, CONTENT, DATE_CREATED, IMAGE, ISPUBLISH, KEYWORDS, LINKHREF, LINKTEXT, NAME, DATE_PUBLISH, SUMMARY, TYPE, USERCODE) select NEWS_CONTENT_ID, CODE, CONTENT, DATE_CREATED, IMAGE, ISPUBLISH, KEYWORDS, LINKHREF, LINKTEXT, NAME, DATE_PUBLISH, SUMMARY, TYPE, USERCODE from BAK_NEWS_CONTENT;
	insert into MERCHANT_RANK_PROFILE (MCHTRANKPROFILE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, NUM_DIAMOND_PRODUCT, RANK_ID) select MCHTRANKPROFILE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, NUM_DIAMOND_PRODUCT, RANK_ID from BAK_MERCHANT_RANK_PROFILE;
	insert into PRODUCT_AVAILABILITY (PRODUCT_AVAIL_ID, DATE_AVAILABLE, FREE_SHIPPING, QUANTITY, QUANTITY_ORD_MAX, QUANTITY_ORD_MIN, STATUS, REGION, REGION_VARIANT, PRODUCT_ID) select PRODUCT_AVAIL_ID, DATE_AVAILABLE, FREE_SHIPPING, QUANTITY, QUANTITY_ORD_MAX, QUANTITY_ORD_MIN, STATUS, REGION, REGION_VARIANT, PRODUCT_ID from BAK_PRODUCT_AVAILABILITY;
	insert into CONTENT (CONTENT_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, CONTENT_POSITION, CONTENT_TYPE, SORT_ORDER, VISIBLE, MERCHANT_ID) select CONTENT_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, CONTENT_POSITION, CONTENT_TYPE, SORT_ORDER, VISIBLE, MERCHANT_ID from BAK_CONTENT;
	insert into CATEGORY (CATEGORY_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CATEGORY_IMAGE, CATEGORY_STATUS, CODE, DEPTH, LINEAGE, SORT_ORDER, VISIBLE, MERCHANT_ID, PARENT_ID) select CATEGORY_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CATEGORY_IMAGE, CATEGORY_STATUS, CODE, DEPTH, LINEAGE, SORT_ORDER, VISIBLE, MERCHANT_ID, PARENT_ID from BAK_CATEGORY;
	insert into SM_GROUP (GROUP_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, GROUP_NAME, GROUP_TYPE) select GROUP_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, GROUP_NAME, GROUP_TYPE from BAK_SM_GROUP;
	insert into PRODUCT_THIRDPROOF (PRODUCT_THIRDPROOF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, SORT_ORDER, THIRDPROOF_IMAGE, TITLE, BASEDATATYPE_ID, PRODUCT_ID) select PRODUCT_THIRDPROOF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, SORT_ORDER, THIRDPROOF_IMAGE, TITLE, BASEDATATYPE_ID, PRODUCT_ID from BAK_PRODUCT_THIRDPROOF;
	insert into LANGUAGE (LANGUAGE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, SORT_ORDER) select LANGUAGE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, SORT_ORDER from BAK_LANGUAGE;
	insert into SHOPPING_CART (SHP_CART_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CUSTOMER_ID, SHP_CART_CODE, MERCHANT_ID) select SHP_CART_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CUSTOMER_ID, SHP_CART_CODE, MERCHANT_ID from BAK_SHOPPING_CART;
	insert into COUNTRY_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, COUNTRY_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, COUNTRY_ID from BAK_COUNTRY_DESCRIPTION;
	insert into CUSTOMER_OPTION_SET (CUSTOMER_OPTIONSET_ID, SORT_ORDER, CUSTOMER_OPTION_ID, CUSTOMER_OPTION_VALUE_ID) select CUSTOMER_OPTIONSET_ID, SORT_ORDER, CUSTOMER_OPTION_ID, CUSTOMER_OPTION_VALUE_ID from BAK_CUSTOMER_OPTION_SET;
	insert into ORDER_PRODUCT_PRICE (ORDER_PRODUCT_PRICE_ID, PRODUCT_PRICE, PRODUCT_PRICE_CODE, PRODUCT_PRICE_NAME, PRODUCT_PRICE_SPECIAL, PRD_PRICE_SPECIAL_END_DT, PRD_PRICE_SPECIAL_ST_DT, ORDER_PRODUCT_ID) select ORDER_PRODUCT_PRICE_ID, PRODUCT_PRICE, PRODUCT_PRICE_CODE, PRODUCT_PRICE_NAME, PRODUCT_PRICE_SPECIAL, PRD_PRICE_SPECIAL_END_DT, PRD_PRICE_SPECIAL_ST_DT, ORDER_PRODUCT_ID from BAK_ORDER_PRODUCT_PRICE;
	insert into CUSTOMER_ATTRIBUTE (CUSTOMER_ATTRIBUTE_ID, CUSTOMER_ATTR_TXT_VAL, CUSTOMER_ID, OPTION_ID, OPTION_VALUE_ID) select CUSTOMER_ATTRIBUTE_ID, CUSTOMER_ATTR_TXT_VAL, CUSTOMER_ID, OPTION_ID, OPTION_VALUE_ID from BAK_CUSTOMER_ATTRIBUTE;
	insert into ORDER_ACCOUNT (ORDER_ACCOUNT_ID, ORDER_ACCOUNT_BILL_DAY, ORDER_ACCOUNT_END_DATE, ORDER_ACCOUNT_START_DATE, ORDER_ID) select ORDER_ACCOUNT_ID, ORDER_ACCOUNT_BILL_DAY, ORDER_ACCOUNT_END_DATE, ORDER_ACCOUNT_START_DATE, ORDER_ID from BAK_ORDER_ACCOUNT;
	insert into CUSTOMER_OPTION_DESC (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, CUSTOMER_OPTION_COMMENT, LANGUAGE_ID, CUSTOMER_OPTION_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, CUSTOMER_OPTION_COMMENT, LANGUAGE_ID, CUSTOMER_OPTION_ID from BAK_CUSTOMER_OPTION_DESC;
	insert into PRODUCT_DIGITAL (PRODUCT_DIGITAL_ID, FILE_NAME, PRODUCT_ID) select PRODUCT_DIGITAL_ID, FILE_NAME, PRODUCT_ID from BAK_PRODUCT_DIGITAL;
	insert into CURRENCY (CURRENCY_ID, CURRENCY_CODE, CURRENCY_CURRENCY_CODE, CURRENCY_NAME, CURRENCY_SUPPORTED) select CURRENCY_ID, CURRENCY_CODE, CURRENCY_CURRENCY_CODE, CURRENCY_NAME, CURRENCY_SUPPORTED from BAK_CURRENCY;
	insert into PRODUCT_CATEGORY (PRODUCT_ID, CATEGORY_ID) select PRODUCT_ID, CATEGORY_ID from BAK_PRODUCT_CATEGORY;
	insert into ORDER_PRODUCT_DOWNLOAD (ORDER_PRODUCT_DOWNLOAD_ID, DOWNLOAD_COUNT, DOWNLOAD_MAXDAYS, ORDER_PRODUCT_FILENAME, ORDER_PRODUCT_ID) select ORDER_PRODUCT_DOWNLOAD_ID, DOWNLOAD_COUNT, DOWNLOAD_MAXDAYS, ORDER_PRODUCT_FILENAME, ORDER_PRODUCT_ID from BAK_ORDER_PRODUCT_DOWNLOAD;
	insert into PRODUCT_BROWSW (PRODUCT_BROWSE_ID, BROWSE_DATE, CUSTMOER_ID, PRODUCT_ID, IP) select PRODUCT_BROWSE_ID, BROWSE_DATE, CUSTMOER_ID, PRODUCT_ID, IP from BAK_PRODUCT_BROWSW;
	insert into PRODUCT_IMAGE_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, ALT_TAG, LANGUAGE_ID, PRODUCT_IMAGE_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, ALT_TAG, LANGUAGE_ID, PRODUCT_IMAGE_ID from BAK_PRODUCT_IMAGE_DESCRIPTION;
	insert into MEMBER_POINTS (MEMBER_POINTS_ID, TYPE, VALUE, CUSTOMER_ID, DATEVALID, LTFE_POINT, STATAS, UPDATE_DATE, ORDER_ID) select MEMBER_POINTS_ID, TYPE, VALUE, CUSTOMER_ID, DATEVALID, LTFE_POINT, STATAS, UPDATE_DATE, ORDER_ID from BAK_MEMBER_POINTS;
	insert into SYSTEM_NOTIFICATION (SYSTEM_NOTIF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, END_DATE, CONFIG_KEY, START_DATE, VALUE, MERCHANT_ID, USER_ID) select SYSTEM_NOTIF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, END_DATE, CONFIG_KEY, START_DATE, VALUE, MERCHANT_ID, USER_ID from BAK_SYSTEM_NOTIFICATION;
	insert into SUBORDERS (SUBORDER_ID, DELIVERY_CODE, DELIVERY_NUMBER, LAST_MODIFIED, ORDER_STATUS, ORDER_TOTAL, MERCHANTID, ORDER_ID, STORE_NAME, PAY_PROOF, FINAL_TOTAL, RELATE_SALES_EMAIL, RELATE_SALES_PHONE) select SUBORDER_ID, DELIVERY_CODE, DELIVERY_NUMBER, LAST_MODIFIED, ORDER_STATUS, ORDER_TOTAL, MERCHANTID, ORDER_ID, STORE_NAME, PAY_PROOF, FINAL_TOTAL, RELATE_SALES_EMAIL, RELATE_SALES_PHONE from BAK_SUBORDERS;
	insert into PRODUCT (PRODUCT_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, AVAILABLE, BATCHNUM, CAS, CODE, DATE_AVAILABLE, DATE_ChargeBegin, DATE_ChargeEnd, PRODUCT_FREE, QUANTITY_ORDERED, REVIEW_AVG, REVIEW_COUNT, QUALITY_SCORE, SKU, MANUFACTURER_ID, MERCHANT_ID, Parcel_ID, PRODUCT_TYPE_ID, SORT_ORDER, SPRICE, PRODUCT_DIAMOND, SEARCH_CONTENT) select PRODUCT_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, AVAILABLE, BATCHNUM, CAS, CODE, DATE_AVAILABLE, DATE_ChargeBegin, DATE_ChargeEnd, PRODUCT_FREE, QUANTITY_ORDERED, REVIEW_AVG, REVIEW_COUNT, QUALITY_SCORE, SKU, MANUFACTURER_ID, MERCHANT_ID, Parcel_ID, PRODUCT_TYPE_ID, SORT_ORDER, SPRICE, PRODUCT_DIAMOND, SEARCH_CONTENT from BAK_PRODUCT;
	insert into MODULE_CONFIGURATION (MODULE_CONF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, DETAILS, CONFIGURATION, CUSTOM_IND, IMAGE, MODULE, REGIONS, TYPE) select MODULE_CONF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, DETAILS, CONFIGURATION, CUSTOM_IND, IMAGE, MODULE, REGIONS, TYPE from BAK_MODULE_CONFIGURATION;
	insert into ZONE (ZONE_ID, ZONE_CODE, COUNTRY_ID) select ZONE_ID, ZONE_CODE, COUNTRY_ID from BAK_ZONE;
	insert into CUSTOMER_GROUP (CUSTOMER_ID, GROUP_ID) select CUSTOMER_ID, GROUP_ID from BAK_CUSTOMER_GROUP;
	insert into GEOZONE (GEOZONE_ID, GEOZONE_CODE, GEOZONE_NAME) select GEOZONE_ID, GEOZONE_CODE, GEOZONE_NAME from BAK_GEOZONE;
	insert into SYSTEM_CONFIGURATION (SYSTEM_CONFIG_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CONFIG_KEY, VALUE) select SYSTEM_CONFIG_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CONFIG_KEY, VALUE from BAK_SYSTEM_CONFIGURATION;
	insert into ORDER_STATUS_HISTORY (ORDER_STATUS_HISTORY_ID, COMMENTS, CUSTOMER_NOTIFIED, DATE_ADDED, status, ORDER_ID, SUBORDER_ID) select ORDER_STATUS_HISTORY_ID, COMMENTS, CUSTOMER_NOTIFIED, DATE_ADDED, status, ORDER_ID, SUBORDER_ID from BAK_ORDER_STATUS_HISTORY;
	insert into PRODUCT_ATTRIBUTE (PRODUCT_ATTRIBUTE_ID, PRODUCT_ATTRIBUTE_DEFAULT, PRODUCT_ATTRIBUTE_DISCOUNTED, PRODUCT_ATTRIBUTE_FOR_DISP, PRODUCT_ATTRIBUTE_REQUIRED, PRODUCT_ATTRIBUTE_FREE, PRODUCT_ATRIBUTE_PRICE, PRODUCT_ATTRIBUTE_WEIGHT, PRODUCT_ATTRIBUTE_SORT_ORD, PRODUCT_ID, OPTION_ID, OPTION_VALUE_ID) select PRODUCT_ATTRIBUTE_ID, PRODUCT_ATTRIBUTE_DEFAULT, PRODUCT_ATTRIBUTE_DISCOUNTED, PRODUCT_ATTRIBUTE_FOR_DISP, PRODUCT_ATTRIBUTE_REQUIRED, PRODUCT_ATTRIBUTE_FREE, PRODUCT_ATRIBUTE_PRICE, PRODUCT_ATTRIBUTE_WEIGHT, PRODUCT_ATTRIBUTE_SORT_ORD, PRODUCT_ID, OPTION_ID, OPTION_VALUE_ID from BAK_PRODUCT_ATTRIBUTE;
	insert into AUTH_BRAND (AUTH_ID, BRAND_ID) select AUTH_ID, BRAND_ID from BAK_AUTH_BRAND;
	insert into CONTENT_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, META_DESCRIPTION, META_KEYWORDS, META_TITLE, SEF_URL, LANGUAGE_ID, CONTENT_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, META_DESCRIPTION, META_KEYWORDS, META_TITLE, SEF_URL, LANGUAGE_ID, CONTENT_ID from BAK_CONTENT_DESCRIPTION;
	insert into PRODUCT_RELATIONSHIP (PRODUCT_RELATIONSHIP_ID, ACTIVE, CODE, PRODUCT_ID, RELATED_PRODUCT_ID, MERCHANT_ID) select PRODUCT_RELATIONSHIP_ID, ACTIVE, CODE, PRODUCT_ID, RELATED_PRODUCT_ID, MERCHANT_ID from BAK_PRODUCT_RELATIONSHIP;
	insert into AUTHORIZATION (AUTH_ID, AUTH_TYPE, COMPANY, END_TIME, IMAGE, INTRODUCE, START_TIME, MERCHANT_ID) select AUTH_ID, AUTH_TYPE, COMPANY, END_TIME, IMAGE, INTRODUCE, START_TIME, MERCHANT_ID from BAK_AUTHORIZATION;
	insert into CUSTOMER_OPT_VAL_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, CUSTOMER_OPT_VAL_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, CUSTOMER_OPT_VAL_ID from BAK_CUSTOMER_OPT_VAL_DESCRIPTION;
	insert into GEOZONE_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, GEOZONE_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, GEOZONE_ID from BAK_GEOZONE_DESCRIPTION;
	insert into CUSTOMER_OPTION_VALUE (CUSTOMER_OPTION_VALUE_ID, CUSTOMER_OPT_VAL_CODE, CUSTOMER_OPT_VAL_IMAGE, SORT_ORDER, MERCHANT_ID) select CUSTOMER_OPTION_VALUE_ID, CUSTOMER_OPT_VAL_CODE, CUSTOMER_OPT_VAL_IMAGE, SORT_ORDER, MERCHANT_ID from BAK_CUSTOMER_OPTION_VALUE;
	insert into BRAND_USERSEGMENT_DISCOUNT (BRAND_DISCOUNT_ID, DISCOUNTS, discounts_KEY) select BRAND_DISCOUNT_ID, DISCOUNTS, discounts_KEY from BAK_BRAND_USERSEGMENT_DISCOUNT;
	insert into GIFT_ORDER (GIFT_ORDER_ID, CREATE_DATE, DELIVERY_CODE, DELIVERY_NUMBER, GIFT_NUMBER, GIFT_STATUS, CUSTOMER_ID, CUSTOMER_CITY, CUSTOMER_NAME, GIFT_IMG, GIFT_NAME, GIFT_POINT, PHONE_NUMBER, SHIPPING_ADDRESS, CUSTOMER_ADDRESS_ID, GITF_ID) select GIFT_ORDER_ID, CREATE_DATE, DELIVERY_CODE, DELIVERY_NUMBER, GIFT_NUMBER, GIFT_STATUS, CUSTOMER_ID, CUSTOMER_CITY, CUSTOMER_NAME, GIFT_IMG, GIFT_NAME, GIFT_POINT, PHONE_NUMBER, SHIPPING_ADDRESS, CUSTOMER_ADDRESS_ID, GITF_ID from BAK_GIFT_ORDER;
	insert into SHOPPING_CART_ATTR_ITEM (SHP_CART_ATTR_ITEM_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PRODUCT_ATTR_ID, SHP_CART_ITEM_ID) select SHP_CART_ATTR_ITEM_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PRODUCT_ATTR_ID, SHP_CART_ITEM_ID from BAK_SHOPPING_CART_ATTR_ITEM;
	insert into PRODUCT_PROOF (PRODUCT_PROOF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DATE_BUYED, DESCRIPTION, SORT_ORDER, RPOOF_IMAGE, TITLE, BASEDATATYPE_ID, PRODUCT_ID) select PRODUCT_PROOF_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DATE_BUYED, DESCRIPTION, SORT_ORDER, RPOOF_IMAGE, TITLE, BASEDATATYPE_ID, PRODUCT_ID from BAK_PRODUCT_PROOF;
	insert into ORDER_TOTAL (ORDER_ACCOUNT_ID, MODULE, CODE, ORDER_TOTAL_TYPE, ORDER_VALUE_TYPE, SORT_ORDER, TEXT, TITLE, VALUE, ORDER_ID) select ORDER_ACCOUNT_ID, MODULE, CODE, ORDER_TOTAL_TYPE, ORDER_VALUE_TYPE, SORT_ORDER, TEXT, TITLE, VALUE, ORDER_ID from BAK_ORDER_TOTAL;
	insert into USERLOGIN (USERLOGIN_ID, DATE_CREATED, IP, USER_ID) select USERLOGIN_ID, DATE_CREATED, IP, USER_ID from BAK_USERLOGIN;
	insert into MERCHANT_STORE (MERCHANT_ID, STORE_BUSINESSLICENCE, STORE_CODE, CONTINUESHOPPINGURL, CURRENCY_FORMAT_NATIONAL, DOMAIN_NAME, STORE_ENINTRODUCE, IN_BUSINESS_SINCE, STORE_INTRODUCE, INVOICE_TEMPLATE, STORE_QQ, STORE_SEEDED, SEIZEUNITCODE, STORE_EMAIL, STORE_LOGO, STORE_TEMPLATE, STORE_ADDRESS, STORE_CITY, STORE_CONTACTS, STORE_FAX, STORE_MOBILE, STORE_NAME, STORE_PHONE, STORE_POSTAL_CODE, STORE_STATE_PROV, USE_CACHE, isQQ, WEIGHTUNITCODE, COUNTRY_ID, CURRENCY_ID, LANGUAGE_ID, ZONE_ID, STOREWEB, SALES_EMAIL, kefu, xiaoshou, MCHTRANKPROFILE_ID) select MERCHANT_ID, STORE_BUSINESSLICENCE, STORE_CODE, CONTINUESHOPPINGURL, CURRENCY_FORMAT_NATIONAL, DOMAIN_NAME, STORE_ENINTRODUCE, IN_BUSINESS_SINCE, STORE_INTRODUCE, INVOICE_TEMPLATE, STORE_QQ, STORE_SEEDED, SEIZEUNITCODE, STORE_EMAIL, STORE_LOGO, STORE_TEMPLATE, STORE_ADDRESS, STORE_CITY, STORE_CONTACTS, STORE_FAX, STORE_MOBILE, STORE_NAME, STORE_PHONE, STORE_POSTAL_CODE, STORE_STATE_PROV, USE_CACHE, isQQ, WEIGHTUNITCODE, COUNTRY_ID, CURRENCY_ID, LANGUAGE_ID, ZONE_ID, STOREWEB, SALES_EMAIL, kefu, xiaoshou, MCHTRANKPROFILE_ID from BAK_MERCHANT_STORE;
	insert into PERMISSION (PERMISSION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PERMISSION_NAME) select PERMISSION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PERMISSION_NAME from BAK_PERMISSION;
	insert into MERCHANT_LOG (MERCHANT_LOG_ID, LOG, MODULE, MERCHANT_ID) select MERCHANT_LOG_ID, LOG, MODULE, MERCHANT_ID from BAK_MERCHANT_LOG;
	insert into COUNTRY (COUNTRY_ID, COUNTRY_ISOCODE, COUNTRY_SUPPORTED, GEOZONE_ID) select COUNTRY_ID, COUNTRY_ISOCODE, COUNTRY_SUPPORTED, GEOZONE_ID from BAK_COUNTRY;
	insert into PRODUCT_OPTION (PRODUCT_OPTION_ID, PRODUCT_OPTION_CODE, PRODUCT_OPTION_SORT_ORD, PRODUCT_OPTION_TYPE, PRODUCT_OPTION_READ, MERCHANT_ID) select PRODUCT_OPTION_ID, PRODUCT_OPTION_CODE, PRODUCT_OPTION_SORT_ORD, PRODUCT_OPTION_TYPE, PRODUCT_OPTION_READ, MERCHANT_ID from BAK_PRODUCT_OPTION;
	insert into MANUFACTURER (MANUFACTURER_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, MANUFACTURER_IMAGE, SRC_MERCHANT_ID, SORT_ORDER, MERCHANT_ID) select MANUFACTURER_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, MANUFACTURER_IMAGE, SRC_MERCHANT_ID, SORT_ORDER, MERCHANT_ID from BAK_MANUFACTURER;
	insert into SPECIAL_CONFIGURATION (SPECIAL_CONFIG_ID, CONFIG_KEY, VALUE) select SPECIAL_CONFIG_ID, CONFIG_KEY, VALUE from BAK_SPECIAL_CONFIGURATION;
	insert into TAX_RATE_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, TAX_RATE_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, TAX_RATE_ID from BAK_TAX_RATE_DESCRIPTION;
	insert into ORDERS (ORDER_ID, BILLING_STREET_ADDRESS, BILLING_CITY, BILLING_COMPANY, BANK_ACCOUNT, BANK_NANE, COMPANY, COMPANY_ADDRESS, COMPANY_TELEPHONE, TAX_NUMBER, type, BILLING_POSTCODE, BILLING_TELEPHONE, BILLING_USERNAME, CHANNEL, CARD_TYPE, CC_CVV, CC_EXPIRES, CC_NUMBER, CC_OWNER, CURRENCY_VALUE, CUSTOMER_EMAIL_ADDRESS, CUSTOMER_ID, DATE_PURCHASED, IP_ADDRESS, INVOICE_STREET_ADDRESS, INVOICE_CITY, INVOICE_COMPANY, INVOICE_POSTCODE, INVOICE_TELEPHONE, INVOICE_USERNAME, LAST_MODIFIED, LOCALE, ORDER_DATE_FINISHED, ORDER_TYPE, PAYMENT_MODULE_CODE, PAYMENT_TYPE, SHIPPING_MODULE_CODE, ORDER_STATUS, ORDER_TOTAL, BILLING_COUNTRY_ID, BILLING_ZONE_ID, CURRENCY_ID, INVOICE_COUNTRY_ID, INVOICE_ZONE_ID, STORE_NAME, PROCESS_TYPE) select ORDER_ID, BILLING_STREET_ADDRESS, BILLING_CITY, BILLING_COMPANY, BANK_ACCOUNT, BANK_NANE, COMPANY, COMPANY_ADDRESS, COMPANY_TELEPHONE, TAX_NUMBER, type, BILLING_POSTCODE, BILLING_TELEPHONE, BILLING_USERNAME, CHANNEL, CARD_TYPE, CC_CVV, CC_EXPIRES, CC_NUMBER, CC_OWNER, CURRENCY_VALUE, CUSTOMER_EMAIL_ADDRESS, CUSTOMER_ID, DATE_PURCHASED, IP_ADDRESS, INVOICE_STREET_ADDRESS, INVOICE_CITY, INVOICE_COMPANY, INVOICE_POSTCODE, INVOICE_TELEPHONE, INVOICE_USERNAME, LAST_MODIFIED, LOCALE, ORDER_DATE_FINISHED, ORDER_TYPE, PAYMENT_MODULE_CODE, PAYMENT_TYPE, SHIPPING_MODULE_CODE, ORDER_STATUS, ORDER_TOTAL, BILLING_COUNTRY_ID, BILLING_ZONE_ID, CURRENCY_ID, INVOICE_COUNTRY_ID, INVOICE_ZONE_ID, STORE_NAME, PROCESS_TYPE from BAK_ORDERS;
	insert into PRODUCT_PRICE_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, PRODUCT_PRICE_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, PRODUCT_PRICE_ID from BAK_PRODUCT_PRICE_DESCRIPTION;
	insert into ZONE_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, ZONE_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, ZONE_ID from BAK_ZONE_DESCRIPTION;
	insert into USER_SEGMENT (USER_SEGMENT_ID, DISCRIPTION_EN, DISCRIPTION_ZH, NAME, FOR_BUYER, FOR_SELLER) select USER_SEGMENT_ID, DISCRIPTION_EN, DISCRIPTION_ZH, NAME, FOR_BUYER, FOR_SELLER from BAK_USER_SEGMENT;
	insert into FILE_HISTORY (FILE_HISTORY_ID, ACCOUNTED_DATE, DATE_ADDED, DATE_DELETED, DOWNLOAD_COUNT, FILE_ID, FILESIZE, MERCHANT_ID) select FILE_HISTORY_ID, ACCOUNTED_DATE, DATE_ADDED, DATE_DELETED, DOWNLOAD_COUNT, FILE_ID, FILESIZE, MERCHANT_ID from BAK_FILE_HISTORY;
	insert into ORDER_ACCOUNT_PRODUCT (ORDER_ACCOUNT_PRODUCT_ID, ORDER_ACCOUNT_PRODUCT_ACCNT_DT, ORDER_ACCOUNT_PRODUCT_END_DT, ORDER_ACCOUNT_PRODUCT_EOT, ORDER_ACCOUNT_PRODUCT_L_ST_DT, ORDER_ACCOUNT_PRODUCT_L_TRX_ST, ORDER_ACCOUNT_PRODUCT_PM_FR_TY, ORDER_ACCOUNT_PRODUCT_ST_DT, ORDER_ACCOUNT_PRODUCT_STATUS, ORDER_ACCOUNT_ID, ORDER_PRODUCT_ID) select ORDER_ACCOUNT_PRODUCT_ID, ORDER_ACCOUNT_PRODUCT_ACCNT_DT, ORDER_ACCOUNT_PRODUCT_END_DT, ORDER_ACCOUNT_PRODUCT_EOT, ORDER_ACCOUNT_PRODUCT_L_ST_DT, ORDER_ACCOUNT_PRODUCT_L_TRX_ST, ORDER_ACCOUNT_PRODUCT_PM_FR_TY, ORDER_ACCOUNT_PRODUCT_ST_DT, ORDER_ACCOUNT_PRODUCT_STATUS, ORDER_ACCOUNT_ID, ORDER_PRODUCT_ID from BAK_ORDER_ACCOUNT_PRODUCT;
	insert into CUSTOMER_INVOICE (CUSTOMER_INVOICE_ID, BANK_ACCOUNT, BANK_NANE, COMPANY, COMPANY_ADDRESS, COMPANY_TELEPHONE, MEMO, TAX_NUMBER, type, CUSTOMER_ID) select CUSTOMER_INVOICE_ID, BANK_ACCOUNT, BANK_NANE, COMPANY, COMPANY_ADDRESS, COMPANY_TELEPHONE, MEMO, TAX_NUMBER, type, CUSTOMER_ID from BAK_CUSTOMER_INVOICE;
	insert into COMMON_SOFTWARE (COMMON_SOFTWARE_ID, BRIEF, CLICKNUM, DESCRIPTION, FILENAME, ICONNAME, NAME, SIZE, TORDER, TYPE) select COMMON_SOFTWARE_ID, BRIEF, CLICKNUM, DESCRIPTION, FILENAME, ICONNAME, NAME, SIZE, TORDER, TYPE from BAK_COMMON_SOFTWARE;
	insert into MERCHANT_CONFIGURATION (MERCHANT_CONFIG_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CONFIG_KEY, TYPE, VALUE, MERCHANT_ID) select MERCHANT_CONFIG_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CONFIG_KEY, TYPE, VALUE, MERCHANT_ID from BAK_MERCHANT_CONFIGURATION;
	insert into PRODUCT_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, EN_NAME, META_DESCRIPTION, META_KEYWORDS, META_TITLE, METHOD_DESCRIPTION, DOWNLOAD_LNK, PRODUCT_HIGHLIGHT, SEF_URL, SIMPLE_DESCRIPTION, STORECOND_DESCRIPTION, TEST_DESCRIPTION, LANGUAGE_ID, PRODUCT_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, EN_NAME, META_DESCRIPTION, META_KEYWORDS, META_TITLE, METHOD_DESCRIPTION, DOWNLOAD_LNK, PRODUCT_HIGHLIGHT, SEF_URL, SIMPLE_DESCRIPTION, STORECOND_DESCRIPTION, TEST_DESCRIPTION, LANGUAGE_ID, PRODUCT_ID from BAK_PRODUCT_DESCRIPTION;
	insert into BASEDATA_TYPE (BASEDATA_TYPE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, NAME, SORT_ORDER, TYPE, VALUE) select BASEDATA_TYPE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, CODE, NAME, SORT_ORDER, TYPE, VALUE from BAK_BASEDATA_TYPE;
	insert into PRODUCT_OPTION_VALUE_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, PRODUCT_OPTION_VALUE_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, LANGUAGE_ID, PRODUCT_OPTION_VALUE_ID from BAK_PRODUCT_OPTION_VALUE_DESCRIPTION;
	insert into BRAND_DISCOUNT (BRAND_DISCOUNT_ID, BRAND_ID, STORE_ID) select BRAND_DISCOUNT_ID, BRAND_ID, STORE_ID from BAK_BRAND_DISCOUNT;
	insert into CUSTOMER_IMAGE (CUSTOMER_IMAGE_ID, CUSTOMER_IMAGE, DEFAULT_IMAGE, IMAGE_CROP, IMAGE_TYPE, REMARK, CUSTOMER_ID) select CUSTOMER_IMAGE_ID, CUSTOMER_IMAGE, DEFAULT_IMAGE, IMAGE_CROP, IMAGE_TYPE, REMARK, CUSTOMER_ID from BAK_CUSTOMER_IMAGE;
	insert into PRODUCT_PRICE (PRODUCT_PRICE_ID, PRODUCT_PRICE_CODE, DEFAULT_PRICE, PRODUCT_PRICE_AMOUNT, PRODUCT_PRICE_PERIOD, PRODUCT_PRICE_SPECIAL_AMOUNT, PRODUCT_PRICE_SPECIAL_END_DATE, PRODUCT_PRICE_SPECIAL_ST_DATE, PRODUCT_PRICE_STOCK_AMOUNT, PRODUCT_PRICE_TYPE, PRODUCT_AVAIL_ID) select PRODUCT_PRICE_ID, PRODUCT_PRICE_CODE, DEFAULT_PRICE, PRODUCT_PRICE_AMOUNT, PRODUCT_PRICE_PERIOD, PRODUCT_PRICE_SPECIAL_AMOUNT, PRODUCT_PRICE_SPECIAL_END_DATE, PRODUCT_PRICE_SPECIAL_ST_DATE, PRODUCT_PRICE_STOCK_AMOUNT, PRODUCT_PRICE_TYPE, PRODUCT_AVAIL_ID from BAK_PRODUCT_PRICE;
	insert into PRODUCT_REVIEW (PRODUCT_REVIEW_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, REVIEW_DATE, REVIEWS_RATING, REVIEWS_READ, STATUS, CUSTOMERS_ID, ORDER_PRODUCT_ID, PRODUCT_ID) select PRODUCT_REVIEW_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, REVIEW_DATE, REVIEWS_RATING, REVIEWS_READ, STATUS, CUSTOMERS_ID, ORDER_PRODUCT_ID, PRODUCT_ID from BAK_PRODUCT_REVIEW;
	insert into PRODUCT_TYPE (PRODUCT_TYPE_ID, PRD_TYPE_ADD_TO_CART, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PRD_TYPE_CODE) select PRODUCT_TYPE_ID, PRD_TYPE_ADD_TO_CART, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, PRD_TYPE_CODE from BAK_PRODUCT_TYPE;
	insert into CATEGORY_DESCRIPTION (DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, CATEGORY_HIGHLIGHT, META_DESCRIPTION, META_KEYWORDS, META_TITLE, SEF_URL, LANGUAGE_ID, CATEGORY_ID) select DESCRIPTION_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DESCRIPTION, NAME, TITLE, CATEGORY_HIGHLIGHT, META_DESCRIPTION, META_KEYWORDS, META_TITLE, SEF_URL, LANGUAGE_ID, CATEGORY_ID from BAK_CATEGORY_DESCRIPTION;
	insert into ORDER_PRODUCT (ORDER_PRODUCT_ID, ONETIME_CHARGE, PRICE, PRODUCT_ENNAME, PRODUCT_ID, PRODUCT_NAME, PRODUCT_QUANTITY, QUALITY_SCORE, PRODUCT_SKU, SPECS, SUBORDER_ID, PRODUCT_CODE, FINAL_PRICE, FINAL_TOTAL, PRODUCT_SPEC_ID, PRODUCT_IMAGE) select ORDER_PRODUCT_ID, ONETIME_CHARGE, PRICE, PRODUCT_ENNAME, PRODUCT_ID, PRODUCT_NAME, PRODUCT_QUANTITY, QUALITY_SCORE, PRODUCT_SKU, SPECS, SUBORDER_ID, PRODUCT_CODE, FINAL_PRICE, FINAL_TOTAL, PRODUCT_SPEC_ID, PRODUCT_IMAGE from BAK_ORDER_PRODUCT;
	insert into ORDER_PRODUCT_ATTRIBUTE (ORDER_PRODUCT_ATTRIBUTE_ID, PRODUCT_ATTRIBUTE_IS_FREE, PRODUCT_ATTRIBUTE_NAME, PRODUCT_ATTRIBUTE_PRICE, PRODUCT_ATTRIBUTE_VAL_NAME, PRODUCT_ATTRIBUTE_WEIGHT, PRODUCT_OPTION_ID, PRODUCT_OPTION_VALUE_ID, ORDER_PRODUCT_ID) select ORDER_PRODUCT_ATTRIBUTE_ID, PRODUCT_ATTRIBUTE_IS_FREE, PRODUCT_ATTRIBUTE_NAME, PRODUCT_ATTRIBUTE_PRICE, PRODUCT_ATTRIBUTE_VAL_NAME, PRODUCT_ATTRIBUTE_WEIGHT, PRODUCT_OPTION_ID, PRODUCT_OPTION_VALUE_ID, ORDER_PRODUCT_ID from BAK_ORDER_PRODUCT_ATTRIBUTE;
	insert into TAX_CLASS (TAX_CLASS_ID, TAX_CLASS_CODE, TAX_CLASS_TITLE, MERCHANT_ID) select TAX_CLASS_ID, TAX_CLASS_CODE, TAX_CLASS_TITLE, MERCHANT_ID from BAK_TAX_CLASS;
	insert into PERMISSION_GROUP (PERMISSION_ID, GROUP_ID) select PERMISSION_ID, GROUP_ID from BAK_PERMISSION_GROUP;
	insert into PRODUCT_OPTION_VALUE (PRODUCT_OPTION_VALUE_ID, PRODUCT_OPTION_VAL_CODE, PRODUCT_OPT_FOR_DISP, PRODUCT_OPT_VAL_IMAGE, PRODUCT_OPT_VAL_SORT_ORD, MERCHANT_ID) select PRODUCT_OPTION_VALUE_ID, PRODUCT_OPTION_VAL_CODE, PRODUCT_OPT_FOR_DISP, PRODUCT_OPT_VAL_IMAGE, PRODUCT_OPT_VAL_SORT_ORD, MERCHANT_ID from BAK_PRODUCT_OPTION_VALUE;
	insert into SM_TRANSACTION (TRANSACTION_ID, AMOUNT, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DETAILS, PAYMENT_TYPE, TRANSACTION_DATE, TRANSACTION_TYPE, ORDER_ID) select TRANSACTION_ID, AMOUNT, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, DETAILS, PAYMENT_TYPE, TRANSACTION_DATE, TRANSACTION_TYPE, ORDER_ID from BAK_SM_TRANSACTION;
	insert into USER (USER_ID, ACTIVE, ADMIN_EMAIL, ADMIN_NAME, ADMIN_PASSWORD, ADMIN_A1, ADMIN_A2, ADMIN_A3, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, ADMIN_FIRST_NAME, LAST_ACCESS, ADMIN_LAST_NAME, LOGIN_ACCESS, ADMIN_Q1, ADMIN_Q2, ADMIN_Q3, LANGUAGE_ID, MERCHANT_ID, ADMIN_MOBILE) select USER_ID, ACTIVE, ADMIN_EMAIL, ADMIN_NAME, ADMIN_PASSWORD, ADMIN_A1, ADMIN_A2, ADMIN_A3, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, ADMIN_FIRST_NAME, LAST_ACCESS, ADMIN_LAST_NAME, LOGIN_ACCESS, ADMIN_Q1, ADMIN_Q2, ADMIN_Q3, LANGUAGE_ID, MERCHANT_ID, ADMIN_MOBILE from BAK_USER;
	insert into PRODUCT_CERTIFICATE (PRODUCT_CERTIFICATE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, BASEINFO, CERTIFICATE_IMAGE, DESCRIPTION, DOC_URL, SORT_ORDER, TITLE, BASEDATATYPE_ID, PRODUCT_ID) select PRODUCT_CERTIFICATE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, BASEINFO, CERTIFICATE_IMAGE, DESCRIPTION, DOC_URL, SORT_ORDER, TITLE, BASEDATATYPE_ID, PRODUCT_ID from BAK_PRODUCT_CERTIFICATE;
	insert into TAX_RATE (TAX_RATE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, TAX_CODE, PIGGYBACK, STORE_STATE_PROV, TAX_PRIORITY, TAX_RATE, COUNTRY_ID, MERCHANT_ID, PARENT_ID, TAX_CLASS_ID, ZONE_ID) select TAX_RATE_ID, PRODUCT_AUDIT, DATE_CREATED, DATE_MODIFIED, UPDT_ID, TAX_CODE, PIGGYBACK, STORE_STATE_PROV, TAX_PRIORITY, TAX_RATE, COUNTRY_ID, MERCHANT_ID, PARENT_ID, TAX_CLASS_ID, ZONE_ID from BAK_TAX_RATE;
 */